//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Comercial {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("COMERCIALDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class COMERCIALDataSet : global::System.Data.DataSet {
        
        private ACESSODataTable tableACESSO;
        
        private CLIENTEDataTable tableCLIENTE;
        
        private CONDICAOPAGAMENTODataTable tableCONDICAOPAGAMENTO;
        
        private GRUPOPRODUTODataTable tableGRUPOPRODUTO;
        
        private ICMSDataTable tableICMS;
        
        private ITEMPEDIDODataTable tableITEMPEDIDO;
        
        private MODULODataTable tableMODULO;
        
        private PEDIDODataTable tablePEDIDO;
        
        private PRODUTODataTable tablePRODUTO;
        
        private REGIAODataTable tableREGIAO;
        
        private TRANSPORTADORADataTable tableTRANSPORTADORA;
        
        private TRANSPORTADORAVIADataTable tableTRANSPORTADORAVIA;
        
        private UNIDADEMEDIDADataTable tableUNIDADEMEDIDA;
        
        private USUARIODataTable tableUSUARIO;
        
        private VENDEDORDataTable tableVENDEDOR;
        
        private VIATRANSPORTEDataTable tableVIATRANSPORTE;
        
        private ATUCUBODataTable tableATUCUBO;
        
        private modeloDataTable tablemodelo;
        
        private modeloCampoDataTable tablemodeloCampo;
        
        private NOTAFISCALDataTable tableNOTAFISCAL;
        
        private ItemNotaFiscalDataTable tableItemNotaFiscal;
        
        private RelPedidoDataTable tableRelPedido;
        
        private RelVendedorDataTable tableRelVendedor;
        
        private RelEstoqueDataTable tableRelEstoque;
        
        private RelProdutoDataTable tableRelProduto;
        
        private RelNotaFiscalDataTable tableRelNotaFiscal;
        
        private global::System.Data.DataRelation relationFK_ACESSO_MODULO;
        
        private global::System.Data.DataRelation relationFK_ACESSO_USUARIO;
        
        private global::System.Data.DataRelation relationFK_CLIENTE_REGIAO;
        
        private global::System.Data.DataRelation relationFK_CLIENTE_USUARIO;
        
        private global::System.Data.DataRelation relationFK_ITEMPEDIDO_PEDIDO;
        
        private global::System.Data.DataRelation relationFK_ITEMPEDIDO_PRODUTO;
        
        private global::System.Data.DataRelation relationFK_PEDIDO_CLIENTE;
        
        private global::System.Data.DataRelation relationFK_PEDIDO_PAGAMENTO;
        
        private global::System.Data.DataRelation relationFK_PEDIDO_TRANSPORTADORA;
        
        private global::System.Data.DataRelation relationFK_PEDIDO_VENDEDOR;
        
        private global::System.Data.DataRelation relationFK_PRODUTO_GRUPO;
        
        private global::System.Data.DataRelation relationFK_PRODUTO_UNIDADE_MEDIDA;
        
        private global::System.Data.DataRelation relationFK_TRANSPORTADORAVIA_TRANSPORTADORA;
        
        private global::System.Data.DataRelation relationFK_TRANSPORTADORAVIA_VIATRANSPORTE;
        
        private global::System.Data.DataRelation relationFK_VENDEDOR_REGIAO;
        
        private global::System.Data.DataRelation relationFK_VENDEDOR_USUARIO;
        
        private global::System.Data.DataRelation relationFK_ATUCUBO_USUARIO;
        
        private global::System.Data.DataRelation relationFK_modelo_modeloCampo;
        
        private global::System.Data.DataRelation relationFK_ItemNotaFiscal_NOTA_FISCAL;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public COMERCIALDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected COMERCIALDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ACESSO"] != null)) {
                    base.Tables.Add(new ACESSODataTable(ds.Tables["ACESSO"]));
                }
                if ((ds.Tables["CLIENTE"] != null)) {
                    base.Tables.Add(new CLIENTEDataTable(ds.Tables["CLIENTE"]));
                }
                if ((ds.Tables["CONDICAOPAGAMENTO"] != null)) {
                    base.Tables.Add(new CONDICAOPAGAMENTODataTable(ds.Tables["CONDICAOPAGAMENTO"]));
                }
                if ((ds.Tables["GRUPOPRODUTO"] != null)) {
                    base.Tables.Add(new GRUPOPRODUTODataTable(ds.Tables["GRUPOPRODUTO"]));
                }
                if ((ds.Tables["ICMS"] != null)) {
                    base.Tables.Add(new ICMSDataTable(ds.Tables["ICMS"]));
                }
                if ((ds.Tables["ITEMPEDIDO"] != null)) {
                    base.Tables.Add(new ITEMPEDIDODataTable(ds.Tables["ITEMPEDIDO"]));
                }
                if ((ds.Tables["MODULO"] != null)) {
                    base.Tables.Add(new MODULODataTable(ds.Tables["MODULO"]));
                }
                if ((ds.Tables["PEDIDO"] != null)) {
                    base.Tables.Add(new PEDIDODataTable(ds.Tables["PEDIDO"]));
                }
                if ((ds.Tables["PRODUTO"] != null)) {
                    base.Tables.Add(new PRODUTODataTable(ds.Tables["PRODUTO"]));
                }
                if ((ds.Tables["REGIAO"] != null)) {
                    base.Tables.Add(new REGIAODataTable(ds.Tables["REGIAO"]));
                }
                if ((ds.Tables["TRANSPORTADORA"] != null)) {
                    base.Tables.Add(new TRANSPORTADORADataTable(ds.Tables["TRANSPORTADORA"]));
                }
                if ((ds.Tables["TRANSPORTADORAVIA"] != null)) {
                    base.Tables.Add(new TRANSPORTADORAVIADataTable(ds.Tables["TRANSPORTADORAVIA"]));
                }
                if ((ds.Tables["UNIDADEMEDIDA"] != null)) {
                    base.Tables.Add(new UNIDADEMEDIDADataTable(ds.Tables["UNIDADEMEDIDA"]));
                }
                if ((ds.Tables["USUARIO"] != null)) {
                    base.Tables.Add(new USUARIODataTable(ds.Tables["USUARIO"]));
                }
                if ((ds.Tables["VENDEDOR"] != null)) {
                    base.Tables.Add(new VENDEDORDataTable(ds.Tables["VENDEDOR"]));
                }
                if ((ds.Tables["VIATRANSPORTE"] != null)) {
                    base.Tables.Add(new VIATRANSPORTEDataTable(ds.Tables["VIATRANSPORTE"]));
                }
                if ((ds.Tables["ATUCUBO"] != null)) {
                    base.Tables.Add(new ATUCUBODataTable(ds.Tables["ATUCUBO"]));
                }
                if ((ds.Tables["modelo"] != null)) {
                    base.Tables.Add(new modeloDataTable(ds.Tables["modelo"]));
                }
                if ((ds.Tables["modeloCampo"] != null)) {
                    base.Tables.Add(new modeloCampoDataTable(ds.Tables["modeloCampo"]));
                }
                if ((ds.Tables["NOTAFISCAL"] != null)) {
                    base.Tables.Add(new NOTAFISCALDataTable(ds.Tables["NOTAFISCAL"]));
                }
                if ((ds.Tables["ItemNotaFiscal"] != null)) {
                    base.Tables.Add(new ItemNotaFiscalDataTable(ds.Tables["ItemNotaFiscal"]));
                }
                if ((ds.Tables["RelPedido"] != null)) {
                    base.Tables.Add(new RelPedidoDataTable(ds.Tables["RelPedido"]));
                }
                if ((ds.Tables["RelVendedor"] != null)) {
                    base.Tables.Add(new RelVendedorDataTable(ds.Tables["RelVendedor"]));
                }
                if ((ds.Tables["RelEstoque"] != null)) {
                    base.Tables.Add(new RelEstoqueDataTable(ds.Tables["RelEstoque"]));
                }
                if ((ds.Tables["RelProduto"] != null)) {
                    base.Tables.Add(new RelProdutoDataTable(ds.Tables["RelProduto"]));
                }
                if ((ds.Tables["RelNotaFiscal"] != null)) {
                    base.Tables.Add(new RelNotaFiscalDataTable(ds.Tables["RelNotaFiscal"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ACESSODataTable ACESSO {
            get {
                return this.tableACESSO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CLIENTEDataTable CLIENTE {
            get {
                return this.tableCLIENTE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CONDICAOPAGAMENTODataTable CONDICAOPAGAMENTO {
            get {
                return this.tableCONDICAOPAGAMENTO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GRUPOPRODUTODataTable GRUPOPRODUTO {
            get {
                return this.tableGRUPOPRODUTO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ICMSDataTable ICMS {
            get {
                return this.tableICMS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ITEMPEDIDODataTable ITEMPEDIDO {
            get {
                return this.tableITEMPEDIDO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MODULODataTable MODULO {
            get {
                return this.tableMODULO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PEDIDODataTable PEDIDO {
            get {
                return this.tablePEDIDO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PRODUTODataTable PRODUTO {
            get {
                return this.tablePRODUTO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public REGIAODataTable REGIAO {
            get {
                return this.tableREGIAO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TRANSPORTADORADataTable TRANSPORTADORA {
            get {
                return this.tableTRANSPORTADORA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TRANSPORTADORAVIADataTable TRANSPORTADORAVIA {
            get {
                return this.tableTRANSPORTADORAVIA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UNIDADEMEDIDADataTable UNIDADEMEDIDA {
            get {
                return this.tableUNIDADEMEDIDA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public USUARIODataTable USUARIO {
            get {
                return this.tableUSUARIO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VENDEDORDataTable VENDEDOR {
            get {
                return this.tableVENDEDOR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VIATRANSPORTEDataTable VIATRANSPORTE {
            get {
                return this.tableVIATRANSPORTE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ATUCUBODataTable ATUCUBO {
            get {
                return this.tableATUCUBO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public modeloDataTable modelo {
            get {
                return this.tablemodelo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public modeloCampoDataTable modeloCampo {
            get {
                return this.tablemodeloCampo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NOTAFISCALDataTable NOTAFISCAL {
            get {
                return this.tableNOTAFISCAL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ItemNotaFiscalDataTable ItemNotaFiscal {
            get {
                return this.tableItemNotaFiscal;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RelPedidoDataTable RelPedido {
            get {
                return this.tableRelPedido;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RelVendedorDataTable RelVendedor {
            get {
                return this.tableRelVendedor;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RelEstoqueDataTable RelEstoque {
            get {
                return this.tableRelEstoque;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RelProdutoDataTable RelProduto {
            get {
                return this.tableRelProduto;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RelNotaFiscalDataTable RelNotaFiscal {
            get {
                return this.tableRelNotaFiscal;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            COMERCIALDataSet cln = ((COMERCIALDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ACESSO"] != null)) {
                    base.Tables.Add(new ACESSODataTable(ds.Tables["ACESSO"]));
                }
                if ((ds.Tables["CLIENTE"] != null)) {
                    base.Tables.Add(new CLIENTEDataTable(ds.Tables["CLIENTE"]));
                }
                if ((ds.Tables["CONDICAOPAGAMENTO"] != null)) {
                    base.Tables.Add(new CONDICAOPAGAMENTODataTable(ds.Tables["CONDICAOPAGAMENTO"]));
                }
                if ((ds.Tables["GRUPOPRODUTO"] != null)) {
                    base.Tables.Add(new GRUPOPRODUTODataTable(ds.Tables["GRUPOPRODUTO"]));
                }
                if ((ds.Tables["ICMS"] != null)) {
                    base.Tables.Add(new ICMSDataTable(ds.Tables["ICMS"]));
                }
                if ((ds.Tables["ITEMPEDIDO"] != null)) {
                    base.Tables.Add(new ITEMPEDIDODataTable(ds.Tables["ITEMPEDIDO"]));
                }
                if ((ds.Tables["MODULO"] != null)) {
                    base.Tables.Add(new MODULODataTable(ds.Tables["MODULO"]));
                }
                if ((ds.Tables["PEDIDO"] != null)) {
                    base.Tables.Add(new PEDIDODataTable(ds.Tables["PEDIDO"]));
                }
                if ((ds.Tables["PRODUTO"] != null)) {
                    base.Tables.Add(new PRODUTODataTable(ds.Tables["PRODUTO"]));
                }
                if ((ds.Tables["REGIAO"] != null)) {
                    base.Tables.Add(new REGIAODataTable(ds.Tables["REGIAO"]));
                }
                if ((ds.Tables["TRANSPORTADORA"] != null)) {
                    base.Tables.Add(new TRANSPORTADORADataTable(ds.Tables["TRANSPORTADORA"]));
                }
                if ((ds.Tables["TRANSPORTADORAVIA"] != null)) {
                    base.Tables.Add(new TRANSPORTADORAVIADataTable(ds.Tables["TRANSPORTADORAVIA"]));
                }
                if ((ds.Tables["UNIDADEMEDIDA"] != null)) {
                    base.Tables.Add(new UNIDADEMEDIDADataTable(ds.Tables["UNIDADEMEDIDA"]));
                }
                if ((ds.Tables["USUARIO"] != null)) {
                    base.Tables.Add(new USUARIODataTable(ds.Tables["USUARIO"]));
                }
                if ((ds.Tables["VENDEDOR"] != null)) {
                    base.Tables.Add(new VENDEDORDataTable(ds.Tables["VENDEDOR"]));
                }
                if ((ds.Tables["VIATRANSPORTE"] != null)) {
                    base.Tables.Add(new VIATRANSPORTEDataTable(ds.Tables["VIATRANSPORTE"]));
                }
                if ((ds.Tables["ATUCUBO"] != null)) {
                    base.Tables.Add(new ATUCUBODataTable(ds.Tables["ATUCUBO"]));
                }
                if ((ds.Tables["modelo"] != null)) {
                    base.Tables.Add(new modeloDataTable(ds.Tables["modelo"]));
                }
                if ((ds.Tables["modeloCampo"] != null)) {
                    base.Tables.Add(new modeloCampoDataTable(ds.Tables["modeloCampo"]));
                }
                if ((ds.Tables["NOTAFISCAL"] != null)) {
                    base.Tables.Add(new NOTAFISCALDataTable(ds.Tables["NOTAFISCAL"]));
                }
                if ((ds.Tables["ItemNotaFiscal"] != null)) {
                    base.Tables.Add(new ItemNotaFiscalDataTable(ds.Tables["ItemNotaFiscal"]));
                }
                if ((ds.Tables["RelPedido"] != null)) {
                    base.Tables.Add(new RelPedidoDataTable(ds.Tables["RelPedido"]));
                }
                if ((ds.Tables["RelVendedor"] != null)) {
                    base.Tables.Add(new RelVendedorDataTable(ds.Tables["RelVendedor"]));
                }
                if ((ds.Tables["RelEstoque"] != null)) {
                    base.Tables.Add(new RelEstoqueDataTable(ds.Tables["RelEstoque"]));
                }
                if ((ds.Tables["RelProduto"] != null)) {
                    base.Tables.Add(new RelProdutoDataTable(ds.Tables["RelProduto"]));
                }
                if ((ds.Tables["RelNotaFiscal"] != null)) {
                    base.Tables.Add(new RelNotaFiscalDataTable(ds.Tables["RelNotaFiscal"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableACESSO = ((ACESSODataTable)(base.Tables["ACESSO"]));
            if ((initTable == true)) {
                if ((this.tableACESSO != null)) {
                    this.tableACESSO.InitVars();
                }
            }
            this.tableCLIENTE = ((CLIENTEDataTable)(base.Tables["CLIENTE"]));
            if ((initTable == true)) {
                if ((this.tableCLIENTE != null)) {
                    this.tableCLIENTE.InitVars();
                }
            }
            this.tableCONDICAOPAGAMENTO = ((CONDICAOPAGAMENTODataTable)(base.Tables["CONDICAOPAGAMENTO"]));
            if ((initTable == true)) {
                if ((this.tableCONDICAOPAGAMENTO != null)) {
                    this.tableCONDICAOPAGAMENTO.InitVars();
                }
            }
            this.tableGRUPOPRODUTO = ((GRUPOPRODUTODataTable)(base.Tables["GRUPOPRODUTO"]));
            if ((initTable == true)) {
                if ((this.tableGRUPOPRODUTO != null)) {
                    this.tableGRUPOPRODUTO.InitVars();
                }
            }
            this.tableICMS = ((ICMSDataTable)(base.Tables["ICMS"]));
            if ((initTable == true)) {
                if ((this.tableICMS != null)) {
                    this.tableICMS.InitVars();
                }
            }
            this.tableITEMPEDIDO = ((ITEMPEDIDODataTable)(base.Tables["ITEMPEDIDO"]));
            if ((initTable == true)) {
                if ((this.tableITEMPEDIDO != null)) {
                    this.tableITEMPEDIDO.InitVars();
                }
            }
            this.tableMODULO = ((MODULODataTable)(base.Tables["MODULO"]));
            if ((initTable == true)) {
                if ((this.tableMODULO != null)) {
                    this.tableMODULO.InitVars();
                }
            }
            this.tablePEDIDO = ((PEDIDODataTable)(base.Tables["PEDIDO"]));
            if ((initTable == true)) {
                if ((this.tablePEDIDO != null)) {
                    this.tablePEDIDO.InitVars();
                }
            }
            this.tablePRODUTO = ((PRODUTODataTable)(base.Tables["PRODUTO"]));
            if ((initTable == true)) {
                if ((this.tablePRODUTO != null)) {
                    this.tablePRODUTO.InitVars();
                }
            }
            this.tableREGIAO = ((REGIAODataTable)(base.Tables["REGIAO"]));
            if ((initTable == true)) {
                if ((this.tableREGIAO != null)) {
                    this.tableREGIAO.InitVars();
                }
            }
            this.tableTRANSPORTADORA = ((TRANSPORTADORADataTable)(base.Tables["TRANSPORTADORA"]));
            if ((initTable == true)) {
                if ((this.tableTRANSPORTADORA != null)) {
                    this.tableTRANSPORTADORA.InitVars();
                }
            }
            this.tableTRANSPORTADORAVIA = ((TRANSPORTADORAVIADataTable)(base.Tables["TRANSPORTADORAVIA"]));
            if ((initTable == true)) {
                if ((this.tableTRANSPORTADORAVIA != null)) {
                    this.tableTRANSPORTADORAVIA.InitVars();
                }
            }
            this.tableUNIDADEMEDIDA = ((UNIDADEMEDIDADataTable)(base.Tables["UNIDADEMEDIDA"]));
            if ((initTable == true)) {
                if ((this.tableUNIDADEMEDIDA != null)) {
                    this.tableUNIDADEMEDIDA.InitVars();
                }
            }
            this.tableUSUARIO = ((USUARIODataTable)(base.Tables["USUARIO"]));
            if ((initTable == true)) {
                if ((this.tableUSUARIO != null)) {
                    this.tableUSUARIO.InitVars();
                }
            }
            this.tableVENDEDOR = ((VENDEDORDataTable)(base.Tables["VENDEDOR"]));
            if ((initTable == true)) {
                if ((this.tableVENDEDOR != null)) {
                    this.tableVENDEDOR.InitVars();
                }
            }
            this.tableVIATRANSPORTE = ((VIATRANSPORTEDataTable)(base.Tables["VIATRANSPORTE"]));
            if ((initTable == true)) {
                if ((this.tableVIATRANSPORTE != null)) {
                    this.tableVIATRANSPORTE.InitVars();
                }
            }
            this.tableATUCUBO = ((ATUCUBODataTable)(base.Tables["ATUCUBO"]));
            if ((initTable == true)) {
                if ((this.tableATUCUBO != null)) {
                    this.tableATUCUBO.InitVars();
                }
            }
            this.tablemodelo = ((modeloDataTable)(base.Tables["modelo"]));
            if ((initTable == true)) {
                if ((this.tablemodelo != null)) {
                    this.tablemodelo.InitVars();
                }
            }
            this.tablemodeloCampo = ((modeloCampoDataTable)(base.Tables["modeloCampo"]));
            if ((initTable == true)) {
                if ((this.tablemodeloCampo != null)) {
                    this.tablemodeloCampo.InitVars();
                }
            }
            this.tableNOTAFISCAL = ((NOTAFISCALDataTable)(base.Tables["NOTAFISCAL"]));
            if ((initTable == true)) {
                if ((this.tableNOTAFISCAL != null)) {
                    this.tableNOTAFISCAL.InitVars();
                }
            }
            this.tableItemNotaFiscal = ((ItemNotaFiscalDataTable)(base.Tables["ItemNotaFiscal"]));
            if ((initTable == true)) {
                if ((this.tableItemNotaFiscal != null)) {
                    this.tableItemNotaFiscal.InitVars();
                }
            }
            this.tableRelPedido = ((RelPedidoDataTable)(base.Tables["RelPedido"]));
            if ((initTable == true)) {
                if ((this.tableRelPedido != null)) {
                    this.tableRelPedido.InitVars();
                }
            }
            this.tableRelVendedor = ((RelVendedorDataTable)(base.Tables["RelVendedor"]));
            if ((initTable == true)) {
                if ((this.tableRelVendedor != null)) {
                    this.tableRelVendedor.InitVars();
                }
            }
            this.tableRelEstoque = ((RelEstoqueDataTable)(base.Tables["RelEstoque"]));
            if ((initTable == true)) {
                if ((this.tableRelEstoque != null)) {
                    this.tableRelEstoque.InitVars();
                }
            }
            this.tableRelProduto = ((RelProdutoDataTable)(base.Tables["RelProduto"]));
            if ((initTable == true)) {
                if ((this.tableRelProduto != null)) {
                    this.tableRelProduto.InitVars();
                }
            }
            this.tableRelNotaFiscal = ((RelNotaFiscalDataTable)(base.Tables["RelNotaFiscal"]));
            if ((initTable == true)) {
                if ((this.tableRelNotaFiscal != null)) {
                    this.tableRelNotaFiscal.InitVars();
                }
            }
            this.relationFK_ACESSO_MODULO = this.Relations["FK_ACESSO_MODULO"];
            this.relationFK_ACESSO_USUARIO = this.Relations["FK_ACESSO_USUARIO"];
            this.relationFK_CLIENTE_REGIAO = this.Relations["FK_CLIENTE_REGIAO"];
            this.relationFK_CLIENTE_USUARIO = this.Relations["FK_CLIENTE_USUARIO"];
            this.relationFK_ITEMPEDIDO_PEDIDO = this.Relations["FK_ITEMPEDIDO_PEDIDO"];
            this.relationFK_ITEMPEDIDO_PRODUTO = this.Relations["FK_ITEMPEDIDO_PRODUTO"];
            this.relationFK_PEDIDO_CLIENTE = this.Relations["FK_PEDIDO_CLIENTE"];
            this.relationFK_PEDIDO_PAGAMENTO = this.Relations["FK_PEDIDO_PAGAMENTO"];
            this.relationFK_PEDIDO_TRANSPORTADORA = this.Relations["FK_PEDIDO_TRANSPORTADORA"];
            this.relationFK_PEDIDO_VENDEDOR = this.Relations["FK_PEDIDO_VENDEDOR"];
            this.relationFK_PRODUTO_GRUPO = this.Relations["FK_PRODUTO_GRUPO"];
            this.relationFK_PRODUTO_UNIDADE_MEDIDA = this.Relations["FK_PRODUTO_UNIDADE_MEDIDA"];
            this.relationFK_TRANSPORTADORAVIA_TRANSPORTADORA = this.Relations["FK_TRANSPORTADORAVIA_TRANSPORTADORA"];
            this.relationFK_TRANSPORTADORAVIA_VIATRANSPORTE = this.Relations["FK_TRANSPORTADORAVIA_VIATRANSPORTE"];
            this.relationFK_VENDEDOR_REGIAO = this.Relations["FK_VENDEDOR_REGIAO"];
            this.relationFK_VENDEDOR_USUARIO = this.Relations["FK_VENDEDOR_USUARIO"];
            this.relationFK_ATUCUBO_USUARIO = this.Relations["FK_ATUCUBO_USUARIO"];
            this.relationFK_modelo_modeloCampo = this.Relations["FK_modelo_modeloCampo"];
            this.relationFK_ItemNotaFiscal_NOTA_FISCAL = this.Relations["FK_ItemNotaFiscal_NOTA_FISCAL"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "COMERCIALDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/COMERCIALDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableACESSO = new ACESSODataTable();
            base.Tables.Add(this.tableACESSO);
            this.tableCLIENTE = new CLIENTEDataTable();
            base.Tables.Add(this.tableCLIENTE);
            this.tableCONDICAOPAGAMENTO = new CONDICAOPAGAMENTODataTable();
            base.Tables.Add(this.tableCONDICAOPAGAMENTO);
            this.tableGRUPOPRODUTO = new GRUPOPRODUTODataTable();
            base.Tables.Add(this.tableGRUPOPRODUTO);
            this.tableICMS = new ICMSDataTable();
            base.Tables.Add(this.tableICMS);
            this.tableITEMPEDIDO = new ITEMPEDIDODataTable();
            base.Tables.Add(this.tableITEMPEDIDO);
            this.tableMODULO = new MODULODataTable();
            base.Tables.Add(this.tableMODULO);
            this.tablePEDIDO = new PEDIDODataTable();
            base.Tables.Add(this.tablePEDIDO);
            this.tablePRODUTO = new PRODUTODataTable();
            base.Tables.Add(this.tablePRODUTO);
            this.tableREGIAO = new REGIAODataTable();
            base.Tables.Add(this.tableREGIAO);
            this.tableTRANSPORTADORA = new TRANSPORTADORADataTable();
            base.Tables.Add(this.tableTRANSPORTADORA);
            this.tableTRANSPORTADORAVIA = new TRANSPORTADORAVIADataTable();
            base.Tables.Add(this.tableTRANSPORTADORAVIA);
            this.tableUNIDADEMEDIDA = new UNIDADEMEDIDADataTable();
            base.Tables.Add(this.tableUNIDADEMEDIDA);
            this.tableUSUARIO = new USUARIODataTable();
            base.Tables.Add(this.tableUSUARIO);
            this.tableVENDEDOR = new VENDEDORDataTable();
            base.Tables.Add(this.tableVENDEDOR);
            this.tableVIATRANSPORTE = new VIATRANSPORTEDataTable();
            base.Tables.Add(this.tableVIATRANSPORTE);
            this.tableATUCUBO = new ATUCUBODataTable();
            base.Tables.Add(this.tableATUCUBO);
            this.tablemodelo = new modeloDataTable();
            base.Tables.Add(this.tablemodelo);
            this.tablemodeloCampo = new modeloCampoDataTable();
            base.Tables.Add(this.tablemodeloCampo);
            this.tableNOTAFISCAL = new NOTAFISCALDataTable();
            base.Tables.Add(this.tableNOTAFISCAL);
            this.tableItemNotaFiscal = new ItemNotaFiscalDataTable();
            base.Tables.Add(this.tableItemNotaFiscal);
            this.tableRelPedido = new RelPedidoDataTable();
            base.Tables.Add(this.tableRelPedido);
            this.tableRelVendedor = new RelVendedorDataTable();
            base.Tables.Add(this.tableRelVendedor);
            this.tableRelEstoque = new RelEstoqueDataTable();
            base.Tables.Add(this.tableRelEstoque);
            this.tableRelProduto = new RelProdutoDataTable();
            base.Tables.Add(this.tableRelProduto);
            this.tableRelNotaFiscal = new RelNotaFiscalDataTable();
            base.Tables.Add(this.tableRelNotaFiscal);
            this.relationFK_ACESSO_MODULO = new global::System.Data.DataRelation("FK_ACESSO_MODULO", new global::System.Data.DataColumn[] {
                        this.tableMODULO.CODMODULOColumn}, new global::System.Data.DataColumn[] {
                        this.tableACESSO.CODMODULOColumn}, false);
            this.Relations.Add(this.relationFK_ACESSO_MODULO);
            this.relationFK_ACESSO_USUARIO = new global::System.Data.DataRelation("FK_ACESSO_USUARIO", new global::System.Data.DataColumn[] {
                        this.tableUSUARIO.CODUSUARIOColumn}, new global::System.Data.DataColumn[] {
                        this.tableACESSO.CODUSUARIOColumn}, false);
            this.Relations.Add(this.relationFK_ACESSO_USUARIO);
            this.relationFK_CLIENTE_REGIAO = new global::System.Data.DataRelation("FK_CLIENTE_REGIAO", new global::System.Data.DataColumn[] {
                        this.tableREGIAO.CODREGIAOColumn}, new global::System.Data.DataColumn[] {
                        this.tableCLIENTE.CODREGIAOColumn}, false);
            this.Relations.Add(this.relationFK_CLIENTE_REGIAO);
            this.relationFK_CLIENTE_USUARIO = new global::System.Data.DataRelation("FK_CLIENTE_USUARIO", new global::System.Data.DataColumn[] {
                        this.tableUSUARIO.CODUSUARIOColumn}, new global::System.Data.DataColumn[] {
                        this.tableCLIENTE.CODUSUARIOColumn}, false);
            this.Relations.Add(this.relationFK_CLIENTE_USUARIO);
            this.relationFK_ITEMPEDIDO_PEDIDO = new global::System.Data.DataRelation("FK_ITEMPEDIDO_PEDIDO", new global::System.Data.DataColumn[] {
                        this.tablePEDIDO.NRPEDIDOColumn}, new global::System.Data.DataColumn[] {
                        this.tableITEMPEDIDO.NRPEDIDOColumn}, false);
            this.Relations.Add(this.relationFK_ITEMPEDIDO_PEDIDO);
            this.relationFK_ITEMPEDIDO_PRODUTO = new global::System.Data.DataRelation("FK_ITEMPEDIDO_PRODUTO", new global::System.Data.DataColumn[] {
                        this.tablePRODUTO.CODPRODUTOColumn}, new global::System.Data.DataColumn[] {
                        this.tableITEMPEDIDO.CODPRODUTOColumn}, false);
            this.Relations.Add(this.relationFK_ITEMPEDIDO_PRODUTO);
            this.relationFK_PEDIDO_CLIENTE = new global::System.Data.DataRelation("FK_PEDIDO_CLIENTE", new global::System.Data.DataColumn[] {
                        this.tableCLIENTE.CNPJColumn}, new global::System.Data.DataColumn[] {
                        this.tablePEDIDO.CODCLIENTEColumn}, false);
            this.Relations.Add(this.relationFK_PEDIDO_CLIENTE);
            this.relationFK_PEDIDO_PAGAMENTO = new global::System.Data.DataRelation("FK_PEDIDO_PAGAMENTO", new global::System.Data.DataColumn[] {
                        this.tableCONDICAOPAGAMENTO.CODCONDICAOPAGAMENTOColumn}, new global::System.Data.DataColumn[] {
                        this.tablePEDIDO.CODCONDICAOPAGAMENTOColumn}, false);
            this.Relations.Add(this.relationFK_PEDIDO_PAGAMENTO);
            this.relationFK_PEDIDO_TRANSPORTADORA = new global::System.Data.DataRelation("FK_PEDIDO_TRANSPORTADORA", new global::System.Data.DataColumn[] {
                        this.tableTRANSPORTADORA.CNPJColumn}, new global::System.Data.DataColumn[] {
                        this.tablePEDIDO.CODTRANSPORTADORAColumn}, false);
            this.Relations.Add(this.relationFK_PEDIDO_TRANSPORTADORA);
            this.relationFK_PEDIDO_VENDEDOR = new global::System.Data.DataRelation("FK_PEDIDO_VENDEDOR", new global::System.Data.DataColumn[] {
                        this.tableVENDEDOR.CPFColumn}, new global::System.Data.DataColumn[] {
                        this.tablePEDIDO.CODVENDEDORColumn}, false);
            this.Relations.Add(this.relationFK_PEDIDO_VENDEDOR);
            this.relationFK_PRODUTO_GRUPO = new global::System.Data.DataRelation("FK_PRODUTO_GRUPO", new global::System.Data.DataColumn[] {
                        this.tableGRUPOPRODUTO.CODGRUPOPRODUTOColumn}, new global::System.Data.DataColumn[] {
                        this.tablePRODUTO.CODGRUPOPRODUTOColumn}, false);
            this.Relations.Add(this.relationFK_PRODUTO_GRUPO);
            this.relationFK_PRODUTO_UNIDADE_MEDIDA = new global::System.Data.DataRelation("FK_PRODUTO_UNIDADE_MEDIDA", new global::System.Data.DataColumn[] {
                        this.tableUNIDADEMEDIDA.CODUNIDADEMEDIDAColumn}, new global::System.Data.DataColumn[] {
                        this.tablePRODUTO.CODUNIDADEMEDIDAColumn}, false);
            this.Relations.Add(this.relationFK_PRODUTO_UNIDADE_MEDIDA);
            this.relationFK_TRANSPORTADORAVIA_TRANSPORTADORA = new global::System.Data.DataRelation("FK_TRANSPORTADORAVIA_TRANSPORTADORA", new global::System.Data.DataColumn[] {
                        this.tableTRANSPORTADORA.CNPJColumn}, new global::System.Data.DataColumn[] {
                        this.tableTRANSPORTADORAVIA.CODTRANSPORTADORAColumn}, false);
            this.Relations.Add(this.relationFK_TRANSPORTADORAVIA_TRANSPORTADORA);
            this.relationFK_TRANSPORTADORAVIA_VIATRANSPORTE = new global::System.Data.DataRelation("FK_TRANSPORTADORAVIA_VIATRANSPORTE", new global::System.Data.DataColumn[] {
                        this.tableVIATRANSPORTE.CODVIATRANSPORTEColumn}, new global::System.Data.DataColumn[] {
                        this.tableTRANSPORTADORAVIA.CODVIATRANSPORTEColumn}, false);
            this.Relations.Add(this.relationFK_TRANSPORTADORAVIA_VIATRANSPORTE);
            this.relationFK_VENDEDOR_REGIAO = new global::System.Data.DataRelation("FK_VENDEDOR_REGIAO", new global::System.Data.DataColumn[] {
                        this.tableREGIAO.CODREGIAOColumn}, new global::System.Data.DataColumn[] {
                        this.tableVENDEDOR.CODREGIAOColumn}, false);
            this.Relations.Add(this.relationFK_VENDEDOR_REGIAO);
            this.relationFK_VENDEDOR_USUARIO = new global::System.Data.DataRelation("FK_VENDEDOR_USUARIO", new global::System.Data.DataColumn[] {
                        this.tableUSUARIO.CODUSUARIOColumn}, new global::System.Data.DataColumn[] {
                        this.tableVENDEDOR.CODUSUARIOColumn}, false);
            this.Relations.Add(this.relationFK_VENDEDOR_USUARIO);
            this.relationFK_ATUCUBO_USUARIO = new global::System.Data.DataRelation("FK_ATUCUBO_USUARIO", new global::System.Data.DataColumn[] {
                        this.tableUSUARIO.CODUSUARIOColumn}, new global::System.Data.DataColumn[] {
                        this.tableATUCUBO.CODUSUARIOColumn}, false);
            this.Relations.Add(this.relationFK_ATUCUBO_USUARIO);
            this.relationFK_modelo_modeloCampo = new global::System.Data.DataRelation("FK_modelo_modeloCampo", new global::System.Data.DataColumn[] {
                        this.tablemodelo.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemodeloCampo.idModeloColumn}, false);
            this.Relations.Add(this.relationFK_modelo_modeloCampo);
            this.relationFK_ItemNotaFiscal_NOTA_FISCAL = new global::System.Data.DataRelation("FK_ItemNotaFiscal_NOTA_FISCAL", new global::System.Data.DataColumn[] {
                        this.tableNOTAFISCAL.NrNotaFiscalColumn}, new global::System.Data.DataColumn[] {
                        this.tableItemNotaFiscal.NrNotaFiscalColumn}, false);
            this.Relations.Add(this.relationFK_ItemNotaFiscal_NOTA_FISCAL);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeACESSO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCLIENTE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCONDICAOPAGAMENTO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGRUPOPRODUTO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeICMS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeITEMPEDIDO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMODULO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePEDIDO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePRODUTO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeREGIAO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTRANSPORTADORA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTRANSPORTADORAVIA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUNIDADEMEDIDA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUSUARIO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVENDEDOR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVIATRANSPORTE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeATUCUBO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemodelo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemodeloCampo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeNOTAFISCAL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeItemNotaFiscal() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRelPedido() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRelVendedor() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRelEstoque() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRelProduto() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRelNotaFiscal() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            COMERCIALDataSet ds = new COMERCIALDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ACESSORowChangeEventHandler(object sender, ACESSORowChangeEvent e);
        
        public delegate void CLIENTERowChangeEventHandler(object sender, CLIENTERowChangeEvent e);
        
        public delegate void CONDICAOPAGAMENTORowChangeEventHandler(object sender, CONDICAOPAGAMENTORowChangeEvent e);
        
        public delegate void GRUPOPRODUTORowChangeEventHandler(object sender, GRUPOPRODUTORowChangeEvent e);
        
        public delegate void ICMSRowChangeEventHandler(object sender, ICMSRowChangeEvent e);
        
        public delegate void ITEMPEDIDORowChangeEventHandler(object sender, ITEMPEDIDORowChangeEvent e);
        
        public delegate void MODULORowChangeEventHandler(object sender, MODULORowChangeEvent e);
        
        public delegate void PEDIDORowChangeEventHandler(object sender, PEDIDORowChangeEvent e);
        
        public delegate void PRODUTORowChangeEventHandler(object sender, PRODUTORowChangeEvent e);
        
        public delegate void REGIAORowChangeEventHandler(object sender, REGIAORowChangeEvent e);
        
        public delegate void TRANSPORTADORARowChangeEventHandler(object sender, TRANSPORTADORARowChangeEvent e);
        
        public delegate void TRANSPORTADORAVIARowChangeEventHandler(object sender, TRANSPORTADORAVIARowChangeEvent e);
        
        public delegate void UNIDADEMEDIDARowChangeEventHandler(object sender, UNIDADEMEDIDARowChangeEvent e);
        
        public delegate void USUARIORowChangeEventHandler(object sender, USUARIORowChangeEvent e);
        
        public delegate void VENDEDORRowChangeEventHandler(object sender, VENDEDORRowChangeEvent e);
        
        public delegate void VIATRANSPORTERowChangeEventHandler(object sender, VIATRANSPORTERowChangeEvent e);
        
        public delegate void ATUCUBORowChangeEventHandler(object sender, ATUCUBORowChangeEvent e);
        
        public delegate void modeloRowChangeEventHandler(object sender, modeloRowChangeEvent e);
        
        public delegate void modeloCampoRowChangeEventHandler(object sender, modeloCampoRowChangeEvent e);
        
        public delegate void NOTAFISCALRowChangeEventHandler(object sender, NOTAFISCALRowChangeEvent e);
        
        public delegate void ItemNotaFiscalRowChangeEventHandler(object sender, ItemNotaFiscalRowChangeEvent e);
        
        public delegate void RelPedidoRowChangeEventHandler(object sender, RelPedidoRowChangeEvent e);
        
        public delegate void RelVendedorRowChangeEventHandler(object sender, RelVendedorRowChangeEvent e);
        
        public delegate void RelEstoqueRowChangeEventHandler(object sender, RelEstoqueRowChangeEvent e);
        
        public delegate void RelProdutoRowChangeEventHandler(object sender, RelProdutoRowChangeEvent e);
        
        public delegate void RelNotaFiscalRowChangeEventHandler(object sender, RelNotaFiscalRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ACESSODataTable : global::System.Data.TypedTableBase<ACESSORow> {
            
            private global::System.Data.DataColumn columnCODMODULO;
            
            private global::System.Data.DataColumn columnCODUSUARIO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ACESSODataTable() {
                this.TableName = "ACESSO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ACESSODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ACESSODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODMODULOColumn {
                get {
                    return this.columnCODMODULO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODUSUARIOColumn {
                get {
                    return this.columnCODUSUARIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ACESSORow this[int index] {
                get {
                    return ((ACESSORow)(this.Rows[index]));
                }
            }
            
            public event ACESSORowChangeEventHandler ACESSORowChanging;
            
            public event ACESSORowChangeEventHandler ACESSORowChanged;
            
            public event ACESSORowChangeEventHandler ACESSORowDeleting;
            
            public event ACESSORowChangeEventHandler ACESSORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddACESSORow(ACESSORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ACESSORow AddACESSORow(MODULORow parentMODULORowByFK_ACESSO_MODULO, USUARIORow parentUSUARIORowByFK_ACESSO_USUARIO) {
                ACESSORow rowACESSORow = ((ACESSORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentMODULORowByFK_ACESSO_MODULO != null)) {
                    columnValuesArray[0] = parentMODULORowByFK_ACESSO_MODULO[0];
                }
                if ((parentUSUARIORowByFK_ACESSO_USUARIO != null)) {
                    columnValuesArray[1] = parentUSUARIORowByFK_ACESSO_USUARIO[0];
                }
                rowACESSORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowACESSORow);
                return rowACESSORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ACESSORow FindByCODMODULOCODUSUARIO(int CODMODULO, int CODUSUARIO) {
                return ((ACESSORow)(this.Rows.Find(new object[] {
                            CODMODULO,
                            CODUSUARIO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ACESSODataTable cln = ((ACESSODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ACESSODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCODMODULO = base.Columns["CODMODULO"];
                this.columnCODUSUARIO = base.Columns["CODUSUARIO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCODMODULO = new global::System.Data.DataColumn("CODMODULO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODMODULO);
                this.columnCODUSUARIO = new global::System.Data.DataColumn("CODUSUARIO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODUSUARIO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCODMODULO,
                                this.columnCODUSUARIO}, true));
                this.columnCODMODULO.AllowDBNull = false;
                this.columnCODUSUARIO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ACESSORow NewACESSORow() {
                return ((ACESSORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ACESSORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ACESSORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ACESSORowChanged != null)) {
                    this.ACESSORowChanged(this, new ACESSORowChangeEvent(((ACESSORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ACESSORowChanging != null)) {
                    this.ACESSORowChanging(this, new ACESSORowChangeEvent(((ACESSORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ACESSORowDeleted != null)) {
                    this.ACESSORowDeleted(this, new ACESSORowChangeEvent(((ACESSORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ACESSORowDeleting != null)) {
                    this.ACESSORowDeleting(this, new ACESSORowChangeEvent(((ACESSORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveACESSORow(ACESSORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ACESSODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CLIENTEDataTable : global::System.Data.TypedTableBase<CLIENTERow> {
            
            private global::System.Data.DataColumn columnCNPJ;
            
            private global::System.Data.DataColumn columnRAZAOSOCIAL;
            
            private global::System.Data.DataColumn columnNOMEFANTASIA;
            
            private global::System.Data.DataColumn columnTELEFONE;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnIE;
            
            private global::System.Data.DataColumn columnENDERECO;
            
            private global::System.Data.DataColumn columnBAIRRO;
            
            private global::System.Data.DataColumn columnMUNICIPIO;
            
            private global::System.Data.DataColumn columnUF;
            
            private global::System.Data.DataColumn columnCEP;
            
            private global::System.Data.DataColumn columnCODREGIAO;
            
            private global::System.Data.DataColumn columnCODUSUARIO;
            
            private global::System.Data.DataColumn columnAREAATUACAO;
            
            private global::System.Data.DataColumn columnLIMITECRED;
            
            private global::System.Data.DataColumn columnAPROVADOCRED;
            
            private global::System.Data.DataColumn columnATIVO;
            
            private global::System.Data.DataColumn columnNUM;
            
            private global::System.Data.DataColumn columnCOMPLEMENTO;
            
            private global::System.Data.DataColumn columnFAX;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTEDataTable() {
                this.TableName = "CLIENTE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CLIENTEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CLIENTEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CNPJColumn {
                get {
                    return this.columnCNPJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAZAOSOCIALColumn {
                get {
                    return this.columnRAZAOSOCIAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOMEFANTASIAColumn {
                get {
                    return this.columnNOMEFANTASIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TELEFONEColumn {
                get {
                    return this.columnTELEFONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IEColumn {
                get {
                    return this.columnIE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ENDERECOColumn {
                get {
                    return this.columnENDERECO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAIRROColumn {
                get {
                    return this.columnBAIRRO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MUNICIPIOColumn {
                get {
                    return this.columnMUNICIPIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UFColumn {
                get {
                    return this.columnUF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CEPColumn {
                get {
                    return this.columnCEP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODREGIAOColumn {
                get {
                    return this.columnCODREGIAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODUSUARIOColumn {
                get {
                    return this.columnCODUSUARIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AREAATUACAOColumn {
                get {
                    return this.columnAREAATUACAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIMITECREDColumn {
                get {
                    return this.columnLIMITECRED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn APROVADOCREDColumn {
                get {
                    return this.columnAPROVADOCRED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATIVOColumn {
                get {
                    return this.columnATIVO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NUMColumn {
                get {
                    return this.columnNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPLEMENTOColumn {
                get {
                    return this.columnCOMPLEMENTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FAXColumn {
                get {
                    return this.columnFAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTERow this[int index] {
                get {
                    return ((CLIENTERow)(this.Rows[index]));
                }
            }
            
            public event CLIENTERowChangeEventHandler CLIENTERowChanging;
            
            public event CLIENTERowChangeEventHandler CLIENTERowChanged;
            
            public event CLIENTERowChangeEventHandler CLIENTERowDeleting;
            
            public event CLIENTERowChangeEventHandler CLIENTERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCLIENTERow(CLIENTERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTERow AddCLIENTERow(
                        string CNPJ, 
                        string RAZAOSOCIAL, 
                        string NOMEFANTASIA, 
                        string TELEFONE, 
                        string EMAIL, 
                        string IE, 
                        string ENDERECO, 
                        string BAIRRO, 
                        string MUNICIPIO, 
                        string UF, 
                        string CEP, 
                        REGIAORow parentREGIAORowByFK_CLIENTE_REGIAO, 
                        USUARIORow parentUSUARIORowByFK_CLIENTE_USUARIO, 
                        string AREAATUACAO, 
                        double LIMITECRED, 
                        string APROVADOCRED, 
                        string ATIVO, 
                        string NUM, 
                        string COMPLEMENTO, 
                        string FAX) {
                CLIENTERow rowCLIENTERow = ((CLIENTERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CNPJ,
                        RAZAOSOCIAL,
                        NOMEFANTASIA,
                        TELEFONE,
                        EMAIL,
                        IE,
                        ENDERECO,
                        BAIRRO,
                        MUNICIPIO,
                        UF,
                        CEP,
                        null,
                        null,
                        AREAATUACAO,
                        LIMITECRED,
                        APROVADOCRED,
                        ATIVO,
                        NUM,
                        COMPLEMENTO,
                        FAX};
                if ((parentREGIAORowByFK_CLIENTE_REGIAO != null)) {
                    columnValuesArray[11] = parentREGIAORowByFK_CLIENTE_REGIAO[0];
                }
                if ((parentUSUARIORowByFK_CLIENTE_USUARIO != null)) {
                    columnValuesArray[12] = parentUSUARIORowByFK_CLIENTE_USUARIO[0];
                }
                rowCLIENTERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCLIENTERow);
                return rowCLIENTERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTERow FindByCNPJ(string CNPJ) {
                return ((CLIENTERow)(this.Rows.Find(new object[] {
                            CNPJ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CLIENTEDataTable cln = ((CLIENTEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CLIENTEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCNPJ = base.Columns["CNPJ"];
                this.columnRAZAOSOCIAL = base.Columns["RAZAOSOCIAL"];
                this.columnNOMEFANTASIA = base.Columns["NOMEFANTASIA"];
                this.columnTELEFONE = base.Columns["TELEFONE"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnIE = base.Columns["IE"];
                this.columnENDERECO = base.Columns["ENDERECO"];
                this.columnBAIRRO = base.Columns["BAIRRO"];
                this.columnMUNICIPIO = base.Columns["MUNICIPIO"];
                this.columnUF = base.Columns["UF"];
                this.columnCEP = base.Columns["CEP"];
                this.columnCODREGIAO = base.Columns["CODREGIAO"];
                this.columnCODUSUARIO = base.Columns["CODUSUARIO"];
                this.columnAREAATUACAO = base.Columns["AREAATUACAO"];
                this.columnLIMITECRED = base.Columns["LIMITECRED"];
                this.columnAPROVADOCRED = base.Columns["APROVADOCRED"];
                this.columnATIVO = base.Columns["ATIVO"];
                this.columnNUM = base.Columns["NUM"];
                this.columnCOMPLEMENTO = base.Columns["COMPLEMENTO"];
                this.columnFAX = base.Columns["FAX"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCNPJ = new global::System.Data.DataColumn("CNPJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNPJ);
                this.columnRAZAOSOCIAL = new global::System.Data.DataColumn("RAZAOSOCIAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAZAOSOCIAL);
                this.columnNOMEFANTASIA = new global::System.Data.DataColumn("NOMEFANTASIA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOMEFANTASIA);
                this.columnTELEFONE = new global::System.Data.DataColumn("TELEFONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTELEFONE);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnIE = new global::System.Data.DataColumn("IE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIE);
                this.columnENDERECO = new global::System.Data.DataColumn("ENDERECO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENDERECO);
                this.columnBAIRRO = new global::System.Data.DataColumn("BAIRRO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAIRRO);
                this.columnMUNICIPIO = new global::System.Data.DataColumn("MUNICIPIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMUNICIPIO);
                this.columnUF = new global::System.Data.DataColumn("UF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUF);
                this.columnCEP = new global::System.Data.DataColumn("CEP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCEP);
                this.columnCODREGIAO = new global::System.Data.DataColumn("CODREGIAO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODREGIAO);
                this.columnCODUSUARIO = new global::System.Data.DataColumn("CODUSUARIO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODUSUARIO);
                this.columnAREAATUACAO = new global::System.Data.DataColumn("AREAATUACAO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAREAATUACAO);
                this.columnLIMITECRED = new global::System.Data.DataColumn("LIMITECRED", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIMITECRED);
                this.columnAPROVADOCRED = new global::System.Data.DataColumn("APROVADOCRED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPROVADOCRED);
                this.columnATIVO = new global::System.Data.DataColumn("ATIVO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATIVO);
                this.columnNUM = new global::System.Data.DataColumn("NUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM);
                this.columnCOMPLEMENTO = new global::System.Data.DataColumn("COMPLEMENTO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPLEMENTO);
                this.columnFAX = new global::System.Data.DataColumn("FAX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAX);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCNPJ}, true));
                this.columnCNPJ.AllowDBNull = false;
                this.columnCNPJ.Unique = true;
                this.columnCNPJ.MaxLength = 14;
                this.columnRAZAOSOCIAL.AllowDBNull = false;
                this.columnRAZAOSOCIAL.MaxLength = 100;
                this.columnNOMEFANTASIA.AllowDBNull = false;
                this.columnNOMEFANTASIA.MaxLength = 100;
                this.columnTELEFONE.MaxLength = 10;
                this.columnEMAIL.MaxLength = 100;
                this.columnIE.AllowDBNull = false;
                this.columnIE.MaxLength = 20;
                this.columnENDERECO.AllowDBNull = false;
                this.columnENDERECO.MaxLength = 100;
                this.columnBAIRRO.AllowDBNull = false;
                this.columnBAIRRO.MaxLength = 100;
                this.columnMUNICIPIO.AllowDBNull = false;
                this.columnMUNICIPIO.MaxLength = 100;
                this.columnUF.AllowDBNull = false;
                this.columnUF.MaxLength = 2;
                this.columnCEP.AllowDBNull = false;
                this.columnCEP.MaxLength = 8;
                this.columnAREAATUACAO.MaxLength = 100;
                this.columnAPROVADOCRED.MaxLength = 1;
                this.columnATIVO.MaxLength = 1;
                this.columnNUM.AllowDBNull = false;
                this.columnNUM.MaxLength = 40;
                this.columnCOMPLEMENTO.MaxLength = 40;
                this.columnFAX.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTERow NewCLIENTERow() {
                return ((CLIENTERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CLIENTERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CLIENTERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CLIENTERowChanged != null)) {
                    this.CLIENTERowChanged(this, new CLIENTERowChangeEvent(((CLIENTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CLIENTERowChanging != null)) {
                    this.CLIENTERowChanging(this, new CLIENTERowChangeEvent(((CLIENTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CLIENTERowDeleted != null)) {
                    this.CLIENTERowDeleted(this, new CLIENTERowChangeEvent(((CLIENTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CLIENTERowDeleting != null)) {
                    this.CLIENTERowDeleting(this, new CLIENTERowChangeEvent(((CLIENTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCLIENTERow(CLIENTERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CLIENTEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CONDICAOPAGAMENTODataTable : global::System.Data.TypedTableBase<CONDICAOPAGAMENTORow> {
            
            private global::System.Data.DataColumn columnCODCONDICAOPAGAMENTO;
            
            private global::System.Data.DataColumn columnDESCRICAO;
            
            private global::System.Data.DataColumn columnQTDEVEZES;
            
            private global::System.Data.DataColumn columnENTRADA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONDICAOPAGAMENTODataTable() {
                this.TableName = "CONDICAOPAGAMENTO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CONDICAOPAGAMENTODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CONDICAOPAGAMENTODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODCONDICAOPAGAMENTOColumn {
                get {
                    return this.columnCODCONDICAOPAGAMENTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRICAOColumn {
                get {
                    return this.columnDESCRICAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QTDEVEZESColumn {
                get {
                    return this.columnQTDEVEZES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ENTRADAColumn {
                get {
                    return this.columnENTRADA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONDICAOPAGAMENTORow this[int index] {
                get {
                    return ((CONDICAOPAGAMENTORow)(this.Rows[index]));
                }
            }
            
            public event CONDICAOPAGAMENTORowChangeEventHandler CONDICAOPAGAMENTORowChanging;
            
            public event CONDICAOPAGAMENTORowChangeEventHandler CONDICAOPAGAMENTORowChanged;
            
            public event CONDICAOPAGAMENTORowChangeEventHandler CONDICAOPAGAMENTORowDeleting;
            
            public event CONDICAOPAGAMENTORowChangeEventHandler CONDICAOPAGAMENTORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCONDICAOPAGAMENTORow(CONDICAOPAGAMENTORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONDICAOPAGAMENTORow AddCONDICAOPAGAMENTORow(string DESCRICAO, int QTDEVEZES, string ENTRADA) {
                CONDICAOPAGAMENTORow rowCONDICAOPAGAMENTORow = ((CONDICAOPAGAMENTORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DESCRICAO,
                        QTDEVEZES,
                        ENTRADA};
                rowCONDICAOPAGAMENTORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCONDICAOPAGAMENTORow);
                return rowCONDICAOPAGAMENTORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONDICAOPAGAMENTORow FindByCODCONDICAOPAGAMENTO(int CODCONDICAOPAGAMENTO) {
                return ((CONDICAOPAGAMENTORow)(this.Rows.Find(new object[] {
                            CODCONDICAOPAGAMENTO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CONDICAOPAGAMENTODataTable cln = ((CONDICAOPAGAMENTODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CONDICAOPAGAMENTODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCODCONDICAOPAGAMENTO = base.Columns["CODCONDICAOPAGAMENTO"];
                this.columnDESCRICAO = base.Columns["DESCRICAO"];
                this.columnQTDEVEZES = base.Columns["QTDEVEZES"];
                this.columnENTRADA = base.Columns["ENTRADA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCODCONDICAOPAGAMENTO = new global::System.Data.DataColumn("CODCONDICAOPAGAMENTO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODCONDICAOPAGAMENTO);
                this.columnDESCRICAO = new global::System.Data.DataColumn("DESCRICAO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRICAO);
                this.columnQTDEVEZES = new global::System.Data.DataColumn("QTDEVEZES", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQTDEVEZES);
                this.columnENTRADA = new global::System.Data.DataColumn("ENTRADA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRADA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCODCONDICAOPAGAMENTO}, true));
                this.columnCODCONDICAOPAGAMENTO.AutoIncrement = true;
                this.columnCODCONDICAOPAGAMENTO.AutoIncrementSeed = -1;
                this.columnCODCONDICAOPAGAMENTO.AutoIncrementStep = -1;
                this.columnCODCONDICAOPAGAMENTO.AllowDBNull = false;
                this.columnCODCONDICAOPAGAMENTO.ReadOnly = true;
                this.columnCODCONDICAOPAGAMENTO.Unique = true;
                this.columnDESCRICAO.AllowDBNull = false;
                this.columnDESCRICAO.MaxLength = 100;
                this.columnQTDEVEZES.AllowDBNull = false;
                this.columnENTRADA.AllowDBNull = false;
                this.columnENTRADA.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONDICAOPAGAMENTORow NewCONDICAOPAGAMENTORow() {
                return ((CONDICAOPAGAMENTORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CONDICAOPAGAMENTORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CONDICAOPAGAMENTORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CONDICAOPAGAMENTORowChanged != null)) {
                    this.CONDICAOPAGAMENTORowChanged(this, new CONDICAOPAGAMENTORowChangeEvent(((CONDICAOPAGAMENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CONDICAOPAGAMENTORowChanging != null)) {
                    this.CONDICAOPAGAMENTORowChanging(this, new CONDICAOPAGAMENTORowChangeEvent(((CONDICAOPAGAMENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CONDICAOPAGAMENTORowDeleted != null)) {
                    this.CONDICAOPAGAMENTORowDeleted(this, new CONDICAOPAGAMENTORowChangeEvent(((CONDICAOPAGAMENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CONDICAOPAGAMENTORowDeleting != null)) {
                    this.CONDICAOPAGAMENTORowDeleting(this, new CONDICAOPAGAMENTORowChangeEvent(((CONDICAOPAGAMENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCONDICAOPAGAMENTORow(CONDICAOPAGAMENTORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CONDICAOPAGAMENTODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GRUPOPRODUTODataTable : global::System.Data.TypedTableBase<GRUPOPRODUTORow> {
            
            private global::System.Data.DataColumn columnCODGRUPOPRODUTO;
            
            private global::System.Data.DataColumn columnDESCRICAO;
            
            private global::System.Data.DataColumn columnDESCONTO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPOPRODUTODataTable() {
                this.TableName = "GRUPOPRODUTO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GRUPOPRODUTODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GRUPOPRODUTODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODGRUPOPRODUTOColumn {
                get {
                    return this.columnCODGRUPOPRODUTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRICAOColumn {
                get {
                    return this.columnDESCRICAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCONTOColumn {
                get {
                    return this.columnDESCONTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPOPRODUTORow this[int index] {
                get {
                    return ((GRUPOPRODUTORow)(this.Rows[index]));
                }
            }
            
            public event GRUPOPRODUTORowChangeEventHandler GRUPOPRODUTORowChanging;
            
            public event GRUPOPRODUTORowChangeEventHandler GRUPOPRODUTORowChanged;
            
            public event GRUPOPRODUTORowChangeEventHandler GRUPOPRODUTORowDeleting;
            
            public event GRUPOPRODUTORowChangeEventHandler GRUPOPRODUTORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGRUPOPRODUTORow(GRUPOPRODUTORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPOPRODUTORow AddGRUPOPRODUTORow(string DESCRICAO, double DESCONTO) {
                GRUPOPRODUTORow rowGRUPOPRODUTORow = ((GRUPOPRODUTORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DESCRICAO,
                        DESCONTO};
                rowGRUPOPRODUTORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGRUPOPRODUTORow);
                return rowGRUPOPRODUTORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPOPRODUTORow FindByCODGRUPOPRODUTO(int CODGRUPOPRODUTO) {
                return ((GRUPOPRODUTORow)(this.Rows.Find(new object[] {
                            CODGRUPOPRODUTO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GRUPOPRODUTODataTable cln = ((GRUPOPRODUTODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GRUPOPRODUTODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCODGRUPOPRODUTO = base.Columns["CODGRUPOPRODUTO"];
                this.columnDESCRICAO = base.Columns["DESCRICAO"];
                this.columnDESCONTO = base.Columns["DESCONTO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCODGRUPOPRODUTO = new global::System.Data.DataColumn("CODGRUPOPRODUTO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODGRUPOPRODUTO);
                this.columnDESCRICAO = new global::System.Data.DataColumn("DESCRICAO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRICAO);
                this.columnDESCONTO = new global::System.Data.DataColumn("DESCONTO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCONTO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCODGRUPOPRODUTO}, true));
                this.columnCODGRUPOPRODUTO.AutoIncrement = true;
                this.columnCODGRUPOPRODUTO.AutoIncrementSeed = -1;
                this.columnCODGRUPOPRODUTO.AutoIncrementStep = -1;
                this.columnCODGRUPOPRODUTO.AllowDBNull = false;
                this.columnCODGRUPOPRODUTO.ReadOnly = true;
                this.columnCODGRUPOPRODUTO.Unique = true;
                this.columnDESCRICAO.AllowDBNull = false;
                this.columnDESCRICAO.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPOPRODUTORow NewGRUPOPRODUTORow() {
                return ((GRUPOPRODUTORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GRUPOPRODUTORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GRUPOPRODUTORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GRUPOPRODUTORowChanged != null)) {
                    this.GRUPOPRODUTORowChanged(this, new GRUPOPRODUTORowChangeEvent(((GRUPOPRODUTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GRUPOPRODUTORowChanging != null)) {
                    this.GRUPOPRODUTORowChanging(this, new GRUPOPRODUTORowChangeEvent(((GRUPOPRODUTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GRUPOPRODUTORowDeleted != null)) {
                    this.GRUPOPRODUTORowDeleted(this, new GRUPOPRODUTORowChangeEvent(((GRUPOPRODUTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GRUPOPRODUTORowDeleting != null)) {
                    this.GRUPOPRODUTORowDeleting(this, new GRUPOPRODUTORowChangeEvent(((GRUPOPRODUTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGRUPOPRODUTORow(GRUPOPRODUTORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GRUPOPRODUTODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ICMSDataTable : global::System.Data.TypedTableBase<ICMSRow> {
            
            private global::System.Data.DataColumn columnUF;
            
            private global::System.Data.DataColumn columnALIQUOTA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ICMSDataTable() {
                this.TableName = "ICMS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ICMSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ICMSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UFColumn {
                get {
                    return this.columnUF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ALIQUOTAColumn {
                get {
                    return this.columnALIQUOTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ICMSRow this[int index] {
                get {
                    return ((ICMSRow)(this.Rows[index]));
                }
            }
            
            public event ICMSRowChangeEventHandler ICMSRowChanging;
            
            public event ICMSRowChangeEventHandler ICMSRowChanged;
            
            public event ICMSRowChangeEventHandler ICMSRowDeleting;
            
            public event ICMSRowChangeEventHandler ICMSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddICMSRow(ICMSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ICMSRow AddICMSRow(string UF, double ALIQUOTA) {
                ICMSRow rowICMSRow = ((ICMSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UF,
                        ALIQUOTA};
                rowICMSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowICMSRow);
                return rowICMSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ICMSRow FindByUF(string UF) {
                return ((ICMSRow)(this.Rows.Find(new object[] {
                            UF})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ICMSDataTable cln = ((ICMSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ICMSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUF = base.Columns["UF"];
                this.columnALIQUOTA = base.Columns["ALIQUOTA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUF = new global::System.Data.DataColumn("UF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUF);
                this.columnALIQUOTA = new global::System.Data.DataColumn("ALIQUOTA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnALIQUOTA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUF}, true));
                this.columnUF.AllowDBNull = false;
                this.columnUF.Unique = true;
                this.columnUF.MaxLength = 2;
                this.columnALIQUOTA.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ICMSRow NewICMSRow() {
                return ((ICMSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ICMSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ICMSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ICMSRowChanged != null)) {
                    this.ICMSRowChanged(this, new ICMSRowChangeEvent(((ICMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ICMSRowChanging != null)) {
                    this.ICMSRowChanging(this, new ICMSRowChangeEvent(((ICMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ICMSRowDeleted != null)) {
                    this.ICMSRowDeleted(this, new ICMSRowChangeEvent(((ICMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ICMSRowDeleting != null)) {
                    this.ICMSRowDeleting(this, new ICMSRowChangeEvent(((ICMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveICMSRow(ICMSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ICMSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ITEMPEDIDODataTable : global::System.Data.TypedTableBase<ITEMPEDIDORow> {
            
            private global::System.Data.DataColumn columnNRPEDIDO;
            
            private global::System.Data.DataColumn columnCODPRODUTO;
            
            private global::System.Data.DataColumn columnQUANTIDADE;
            
            private global::System.Data.DataColumn columnDESCONTO;
            
            private global::System.Data.DataColumn columnVALOR;
            
            private global::System.Data.DataColumn columnIPI;
            
            private global::System.Data.DataColumn columnITEM;
            
            private global::System.Data.DataColumn columnQUANTIDADELIB;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ITEMPEDIDODataTable() {
                this.TableName = "ITEMPEDIDO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ITEMPEDIDODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ITEMPEDIDODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NRPEDIDOColumn {
                get {
                    return this.columnNRPEDIDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODPRODUTOColumn {
                get {
                    return this.columnCODPRODUTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QUANTIDADEColumn {
                get {
                    return this.columnQUANTIDADE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCONTOColumn {
                get {
                    return this.columnDESCONTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VALORColumn {
                get {
                    return this.columnVALOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IPIColumn {
                get {
                    return this.columnIPI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEMColumn {
                get {
                    return this.columnITEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QUANTIDADELIBColumn {
                get {
                    return this.columnQUANTIDADELIB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ITEMPEDIDORow this[int index] {
                get {
                    return ((ITEMPEDIDORow)(this.Rows[index]));
                }
            }
            
            public event ITEMPEDIDORowChangeEventHandler ITEMPEDIDORowChanging;
            
            public event ITEMPEDIDORowChangeEventHandler ITEMPEDIDORowChanged;
            
            public event ITEMPEDIDORowChangeEventHandler ITEMPEDIDORowDeleting;
            
            public event ITEMPEDIDORowChangeEventHandler ITEMPEDIDORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddITEMPEDIDORow(ITEMPEDIDORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ITEMPEDIDORow AddITEMPEDIDORow(PEDIDORow parentPEDIDORowByFK_ITEMPEDIDO_PEDIDO, PRODUTORow parentPRODUTORowByFK_ITEMPEDIDO_PRODUTO, int QUANTIDADE, double DESCONTO, double VALOR, double IPI, int ITEM, int QUANTIDADELIB) {
                ITEMPEDIDORow rowITEMPEDIDORow = ((ITEMPEDIDORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        QUANTIDADE,
                        DESCONTO,
                        VALOR,
                        IPI,
                        ITEM,
                        QUANTIDADELIB};
                if ((parentPEDIDORowByFK_ITEMPEDIDO_PEDIDO != null)) {
                    columnValuesArray[0] = parentPEDIDORowByFK_ITEMPEDIDO_PEDIDO[0];
                }
                if ((parentPRODUTORowByFK_ITEMPEDIDO_PRODUTO != null)) {
                    columnValuesArray[1] = parentPRODUTORowByFK_ITEMPEDIDO_PRODUTO[0];
                }
                rowITEMPEDIDORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowITEMPEDIDORow);
                return rowITEMPEDIDORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ITEMPEDIDORow FindByNRPEDIDOCODPRODUTO(int NRPEDIDO, int CODPRODUTO) {
                return ((ITEMPEDIDORow)(this.Rows.Find(new object[] {
                            NRPEDIDO,
                            CODPRODUTO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ITEMPEDIDODataTable cln = ((ITEMPEDIDODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ITEMPEDIDODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNRPEDIDO = base.Columns["NRPEDIDO"];
                this.columnCODPRODUTO = base.Columns["CODPRODUTO"];
                this.columnQUANTIDADE = base.Columns["QUANTIDADE"];
                this.columnDESCONTO = base.Columns["DESCONTO"];
                this.columnVALOR = base.Columns["VALOR"];
                this.columnIPI = base.Columns["IPI"];
                this.columnITEM = base.Columns["ITEM"];
                this.columnQUANTIDADELIB = base.Columns["QUANTIDADELIB"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNRPEDIDO = new global::System.Data.DataColumn("NRPEDIDO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNRPEDIDO);
                this.columnCODPRODUTO = new global::System.Data.DataColumn("CODPRODUTO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODPRODUTO);
                this.columnQUANTIDADE = new global::System.Data.DataColumn("QUANTIDADE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANTIDADE);
                this.columnDESCONTO = new global::System.Data.DataColumn("DESCONTO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCONTO);
                this.columnVALOR = new global::System.Data.DataColumn("VALOR", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALOR);
                this.columnIPI = new global::System.Data.DataColumn("IPI", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIPI);
                this.columnITEM = new global::System.Data.DataColumn("ITEM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM);
                this.columnQUANTIDADELIB = new global::System.Data.DataColumn("QUANTIDADELIB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANTIDADELIB);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNRPEDIDO,
                                this.columnCODPRODUTO}, true));
                this.columnNRPEDIDO.AllowDBNull = false;
                this.columnCODPRODUTO.AllowDBNull = false;
                this.columnQUANTIDADE.AllowDBNull = false;
                this.columnVALOR.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ITEMPEDIDORow NewITEMPEDIDORow() {
                return ((ITEMPEDIDORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ITEMPEDIDORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ITEMPEDIDORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ITEMPEDIDORowChanged != null)) {
                    this.ITEMPEDIDORowChanged(this, new ITEMPEDIDORowChangeEvent(((ITEMPEDIDORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ITEMPEDIDORowChanging != null)) {
                    this.ITEMPEDIDORowChanging(this, new ITEMPEDIDORowChangeEvent(((ITEMPEDIDORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ITEMPEDIDORowDeleted != null)) {
                    this.ITEMPEDIDORowDeleted(this, new ITEMPEDIDORowChangeEvent(((ITEMPEDIDORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ITEMPEDIDORowDeleting != null)) {
                    this.ITEMPEDIDORowDeleting(this, new ITEMPEDIDORowChangeEvent(((ITEMPEDIDORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveITEMPEDIDORow(ITEMPEDIDORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ITEMPEDIDODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MODULODataTable : global::System.Data.TypedTableBase<MODULORow> {
            
            private global::System.Data.DataColumn columnCODMODULO;
            
            private global::System.Data.DataColumn columnDESCRICAO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MODULODataTable() {
                this.TableName = "MODULO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MODULODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MODULODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODMODULOColumn {
                get {
                    return this.columnCODMODULO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRICAOColumn {
                get {
                    return this.columnDESCRICAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MODULORow this[int index] {
                get {
                    return ((MODULORow)(this.Rows[index]));
                }
            }
            
            public event MODULORowChangeEventHandler MODULORowChanging;
            
            public event MODULORowChangeEventHandler MODULORowChanged;
            
            public event MODULORowChangeEventHandler MODULORowDeleting;
            
            public event MODULORowChangeEventHandler MODULORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMODULORow(MODULORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MODULORow AddMODULORow(string DESCRICAO) {
                MODULORow rowMODULORow = ((MODULORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DESCRICAO};
                rowMODULORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMODULORow);
                return rowMODULORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MODULORow FindByCODMODULO(int CODMODULO) {
                return ((MODULORow)(this.Rows.Find(new object[] {
                            CODMODULO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MODULODataTable cln = ((MODULODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MODULODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCODMODULO = base.Columns["CODMODULO"];
                this.columnDESCRICAO = base.Columns["DESCRICAO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCODMODULO = new global::System.Data.DataColumn("CODMODULO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODMODULO);
                this.columnDESCRICAO = new global::System.Data.DataColumn("DESCRICAO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRICAO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCODMODULO}, true));
                this.columnCODMODULO.AutoIncrement = true;
                this.columnCODMODULO.AutoIncrementSeed = -1;
                this.columnCODMODULO.AutoIncrementStep = -1;
                this.columnCODMODULO.AllowDBNull = false;
                this.columnCODMODULO.ReadOnly = true;
                this.columnCODMODULO.Unique = true;
                this.columnDESCRICAO.AllowDBNull = false;
                this.columnDESCRICAO.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MODULORow NewMODULORow() {
                return ((MODULORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MODULORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MODULORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MODULORowChanged != null)) {
                    this.MODULORowChanged(this, new MODULORowChangeEvent(((MODULORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MODULORowChanging != null)) {
                    this.MODULORowChanging(this, new MODULORowChangeEvent(((MODULORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MODULORowDeleted != null)) {
                    this.MODULORowDeleted(this, new MODULORowChangeEvent(((MODULORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MODULORowDeleting != null)) {
                    this.MODULORowDeleting(this, new MODULORowChangeEvent(((MODULORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMODULORow(MODULORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MODULODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PEDIDODataTable : global::System.Data.TypedTableBase<PEDIDORow> {
            
            private global::System.Data.DataColumn columnNRPEDIDO;
            
            private global::System.Data.DataColumn columnTIPO;
            
            private global::System.Data.DataColumn columnDATAEMISSAO;
            
            private global::System.Data.DataColumn columnDATAENTREGA;
            
            private global::System.Data.DataColumn columnCODCONDICAOPAGAMENTO;
            
            private global::System.Data.DataColumn columnSITUACAO;
            
            private global::System.Data.DataColumn columnCODVENDEDOR;
            
            private global::System.Data.DataColumn columnCODCLIENTE;
            
            private global::System.Data.DataColumn columnCODTRANSPORTADORA;
            
            private global::System.Data.DataColumn columnVALORFRETE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PEDIDODataTable() {
                this.TableName = "PEDIDO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PEDIDODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PEDIDODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NRPEDIDOColumn {
                get {
                    return this.columnNRPEDIDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIPOColumn {
                get {
                    return this.columnTIPO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATAEMISSAOColumn {
                get {
                    return this.columnDATAEMISSAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATAENTREGAColumn {
                get {
                    return this.columnDATAENTREGA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODCONDICAOPAGAMENTOColumn {
                get {
                    return this.columnCODCONDICAOPAGAMENTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SITUACAOColumn {
                get {
                    return this.columnSITUACAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODVENDEDORColumn {
                get {
                    return this.columnCODVENDEDOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODCLIENTEColumn {
                get {
                    return this.columnCODCLIENTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODTRANSPORTADORAColumn {
                get {
                    return this.columnCODTRANSPORTADORA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VALORFRETEColumn {
                get {
                    return this.columnVALORFRETE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PEDIDORow this[int index] {
                get {
                    return ((PEDIDORow)(this.Rows[index]));
                }
            }
            
            public event PEDIDORowChangeEventHandler PEDIDORowChanging;
            
            public event PEDIDORowChangeEventHandler PEDIDORowChanged;
            
            public event PEDIDORowChangeEventHandler PEDIDORowDeleting;
            
            public event PEDIDORowChangeEventHandler PEDIDORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPEDIDORow(PEDIDORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PEDIDORow AddPEDIDORow(string TIPO, System.DateTime DATAEMISSAO, System.DateTime DATAENTREGA, CONDICAOPAGAMENTORow parentCONDICAOPAGAMENTORowByFK_PEDIDO_PAGAMENTO, string SITUACAO, VENDEDORRow parentVENDEDORRowByFK_PEDIDO_VENDEDOR, CLIENTERow parentCLIENTERowByFK_PEDIDO_CLIENTE, TRANSPORTADORARow parentTRANSPORTADORARowByFK_PEDIDO_TRANSPORTADORA, double VALORFRETE) {
                PEDIDORow rowPEDIDORow = ((PEDIDORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TIPO,
                        DATAEMISSAO,
                        DATAENTREGA,
                        null,
                        SITUACAO,
                        null,
                        null,
                        null,
                        VALORFRETE};
                if ((parentCONDICAOPAGAMENTORowByFK_PEDIDO_PAGAMENTO != null)) {
                    columnValuesArray[4] = parentCONDICAOPAGAMENTORowByFK_PEDIDO_PAGAMENTO[0];
                }
                if ((parentVENDEDORRowByFK_PEDIDO_VENDEDOR != null)) {
                    columnValuesArray[6] = parentVENDEDORRowByFK_PEDIDO_VENDEDOR[0];
                }
                if ((parentCLIENTERowByFK_PEDIDO_CLIENTE != null)) {
                    columnValuesArray[7] = parentCLIENTERowByFK_PEDIDO_CLIENTE[0];
                }
                if ((parentTRANSPORTADORARowByFK_PEDIDO_TRANSPORTADORA != null)) {
                    columnValuesArray[8] = parentTRANSPORTADORARowByFK_PEDIDO_TRANSPORTADORA[0];
                }
                rowPEDIDORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPEDIDORow);
                return rowPEDIDORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PEDIDORow FindByNRPEDIDO(int NRPEDIDO) {
                return ((PEDIDORow)(this.Rows.Find(new object[] {
                            NRPEDIDO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PEDIDODataTable cln = ((PEDIDODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PEDIDODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNRPEDIDO = base.Columns["NRPEDIDO"];
                this.columnTIPO = base.Columns["TIPO"];
                this.columnDATAEMISSAO = base.Columns["DATAEMISSAO"];
                this.columnDATAENTREGA = base.Columns["DATAENTREGA"];
                this.columnCODCONDICAOPAGAMENTO = base.Columns["CODCONDICAOPAGAMENTO"];
                this.columnSITUACAO = base.Columns["SITUACAO"];
                this.columnCODVENDEDOR = base.Columns["CODVENDEDOR"];
                this.columnCODCLIENTE = base.Columns["CODCLIENTE"];
                this.columnCODTRANSPORTADORA = base.Columns["CODTRANSPORTADORA"];
                this.columnVALORFRETE = base.Columns["VALORFRETE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNRPEDIDO = new global::System.Data.DataColumn("NRPEDIDO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNRPEDIDO);
                this.columnTIPO = new global::System.Data.DataColumn("TIPO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO);
                this.columnDATAEMISSAO = new global::System.Data.DataColumn("DATAEMISSAO", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATAEMISSAO);
                this.columnDATAENTREGA = new global::System.Data.DataColumn("DATAENTREGA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATAENTREGA);
                this.columnCODCONDICAOPAGAMENTO = new global::System.Data.DataColumn("CODCONDICAOPAGAMENTO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODCONDICAOPAGAMENTO);
                this.columnSITUACAO = new global::System.Data.DataColumn("SITUACAO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSITUACAO);
                this.columnCODVENDEDOR = new global::System.Data.DataColumn("CODVENDEDOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODVENDEDOR);
                this.columnCODCLIENTE = new global::System.Data.DataColumn("CODCLIENTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODCLIENTE);
                this.columnCODTRANSPORTADORA = new global::System.Data.DataColumn("CODTRANSPORTADORA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODTRANSPORTADORA);
                this.columnVALORFRETE = new global::System.Data.DataColumn("VALORFRETE", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALORFRETE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNRPEDIDO}, true));
                this.columnNRPEDIDO.AutoIncrement = true;
                this.columnNRPEDIDO.AutoIncrementSeed = -1;
                this.columnNRPEDIDO.AutoIncrementStep = -1;
                this.columnNRPEDIDO.AllowDBNull = false;
                this.columnNRPEDIDO.ReadOnly = true;
                this.columnNRPEDIDO.Unique = true;
                this.columnTIPO.AllowDBNull = false;
                this.columnTIPO.MaxLength = 1;
                this.columnCODCONDICAOPAGAMENTO.AllowDBNull = false;
                this.columnSITUACAO.MaxLength = 1;
                this.columnCODVENDEDOR.AllowDBNull = false;
                this.columnCODVENDEDOR.MaxLength = 11;
                this.columnCODCLIENTE.AllowDBNull = false;
                this.columnCODCLIENTE.MaxLength = 14;
                this.columnCODTRANSPORTADORA.AllowDBNull = false;
                this.columnCODTRANSPORTADORA.MaxLength = 14;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PEDIDORow NewPEDIDORow() {
                return ((PEDIDORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PEDIDORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PEDIDORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PEDIDORowChanged != null)) {
                    this.PEDIDORowChanged(this, new PEDIDORowChangeEvent(((PEDIDORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PEDIDORowChanging != null)) {
                    this.PEDIDORowChanging(this, new PEDIDORowChangeEvent(((PEDIDORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PEDIDORowDeleted != null)) {
                    this.PEDIDORowDeleted(this, new PEDIDORowChangeEvent(((PEDIDORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PEDIDORowDeleting != null)) {
                    this.PEDIDORowDeleting(this, new PEDIDORowChangeEvent(((PEDIDORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePEDIDORow(PEDIDORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PEDIDODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PRODUTODataTable : global::System.Data.TypedTableBase<PRODUTORow> {
            
            private global::System.Data.DataColumn columnCODPRODUTO;
            
            private global::System.Data.DataColumn columnDESCRICAO;
            
            private global::System.Data.DataColumn columnDATACADASTRO;
            
            private global::System.Data.DataColumn columnPRECOCUSTO;
            
            private global::System.Data.DataColumn columnPESOLIQUIDO;
            
            private global::System.Data.DataColumn columnCODGRUPOPRODUTO;
            
            private global::System.Data.DataColumn columnPRECOVENDA;
            
            private global::System.Data.DataColumn columnESTOQUEATUAL;
            
            private global::System.Data.DataColumn columnESTOQUEMIN;
            
            private global::System.Data.DataColumn columnIPI;
            
            private global::System.Data.DataColumn columnATIVO;
            
            private global::System.Data.DataColumn columnCODUNIDADEMEDIDA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUTODataTable() {
                this.TableName = "PRODUTO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PRODUTODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PRODUTODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODPRODUTOColumn {
                get {
                    return this.columnCODPRODUTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRICAOColumn {
                get {
                    return this.columnDESCRICAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATACADASTROColumn {
                get {
                    return this.columnDATACADASTRO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRECOCUSTOColumn {
                get {
                    return this.columnPRECOCUSTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PESOLIQUIDOColumn {
                get {
                    return this.columnPESOLIQUIDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODGRUPOPRODUTOColumn {
                get {
                    return this.columnCODGRUPOPRODUTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRECOVENDAColumn {
                get {
                    return this.columnPRECOVENDA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ESTOQUEATUALColumn {
                get {
                    return this.columnESTOQUEATUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ESTOQUEMINColumn {
                get {
                    return this.columnESTOQUEMIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IPIColumn {
                get {
                    return this.columnIPI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATIVOColumn {
                get {
                    return this.columnATIVO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODUNIDADEMEDIDAColumn {
                get {
                    return this.columnCODUNIDADEMEDIDA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUTORow this[int index] {
                get {
                    return ((PRODUTORow)(this.Rows[index]));
                }
            }
            
            public event PRODUTORowChangeEventHandler PRODUTORowChanging;
            
            public event PRODUTORowChangeEventHandler PRODUTORowChanged;
            
            public event PRODUTORowChangeEventHandler PRODUTORowDeleting;
            
            public event PRODUTORowChangeEventHandler PRODUTORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPRODUTORow(PRODUTORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUTORow AddPRODUTORow(string DESCRICAO, System.DateTime DATACADASTRO, double PRECOCUSTO, double PESOLIQUIDO, GRUPOPRODUTORow parentGRUPOPRODUTORowByFK_PRODUTO_GRUPO, double PRECOVENDA, double ESTOQUEATUAL, double ESTOQUEMIN, double IPI, string ATIVO, UNIDADEMEDIDARow parentUNIDADEMEDIDARowByFK_PRODUTO_UNIDADE_MEDIDA) {
                PRODUTORow rowPRODUTORow = ((PRODUTORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DESCRICAO,
                        DATACADASTRO,
                        PRECOCUSTO,
                        PESOLIQUIDO,
                        null,
                        PRECOVENDA,
                        ESTOQUEATUAL,
                        ESTOQUEMIN,
                        IPI,
                        ATIVO,
                        null};
                if ((parentGRUPOPRODUTORowByFK_PRODUTO_GRUPO != null)) {
                    columnValuesArray[5] = parentGRUPOPRODUTORowByFK_PRODUTO_GRUPO[0];
                }
                if ((parentUNIDADEMEDIDARowByFK_PRODUTO_UNIDADE_MEDIDA != null)) {
                    columnValuesArray[11] = parentUNIDADEMEDIDARowByFK_PRODUTO_UNIDADE_MEDIDA[0];
                }
                rowPRODUTORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPRODUTORow);
                return rowPRODUTORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUTORow FindByCODPRODUTO(int CODPRODUTO) {
                return ((PRODUTORow)(this.Rows.Find(new object[] {
                            CODPRODUTO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PRODUTODataTable cln = ((PRODUTODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PRODUTODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCODPRODUTO = base.Columns["CODPRODUTO"];
                this.columnDESCRICAO = base.Columns["DESCRICAO"];
                this.columnDATACADASTRO = base.Columns["DATACADASTRO"];
                this.columnPRECOCUSTO = base.Columns["PRECOCUSTO"];
                this.columnPESOLIQUIDO = base.Columns["PESOLIQUIDO"];
                this.columnCODGRUPOPRODUTO = base.Columns["CODGRUPOPRODUTO"];
                this.columnPRECOVENDA = base.Columns["PRECOVENDA"];
                this.columnESTOQUEATUAL = base.Columns["ESTOQUEATUAL"];
                this.columnESTOQUEMIN = base.Columns["ESTOQUEMIN"];
                this.columnIPI = base.Columns["IPI"];
                this.columnATIVO = base.Columns["ATIVO"];
                this.columnCODUNIDADEMEDIDA = base.Columns["CODUNIDADEMEDIDA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCODPRODUTO = new global::System.Data.DataColumn("CODPRODUTO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODPRODUTO);
                this.columnDESCRICAO = new global::System.Data.DataColumn("DESCRICAO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRICAO);
                this.columnDATACADASTRO = new global::System.Data.DataColumn("DATACADASTRO", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATACADASTRO);
                this.columnPRECOCUSTO = new global::System.Data.DataColumn("PRECOCUSTO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRECOCUSTO);
                this.columnPESOLIQUIDO = new global::System.Data.DataColumn("PESOLIQUIDO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPESOLIQUIDO);
                this.columnCODGRUPOPRODUTO = new global::System.Data.DataColumn("CODGRUPOPRODUTO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODGRUPOPRODUTO);
                this.columnPRECOVENDA = new global::System.Data.DataColumn("PRECOVENDA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRECOVENDA);
                this.columnESTOQUEATUAL = new global::System.Data.DataColumn("ESTOQUEATUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTOQUEATUAL);
                this.columnESTOQUEMIN = new global::System.Data.DataColumn("ESTOQUEMIN", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTOQUEMIN);
                this.columnIPI = new global::System.Data.DataColumn("IPI", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIPI);
                this.columnATIVO = new global::System.Data.DataColumn("ATIVO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATIVO);
                this.columnCODUNIDADEMEDIDA = new global::System.Data.DataColumn("CODUNIDADEMEDIDA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODUNIDADEMEDIDA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCODPRODUTO}, true));
                this.columnCODPRODUTO.AutoIncrement = true;
                this.columnCODPRODUTO.AutoIncrementSeed = -1;
                this.columnCODPRODUTO.AutoIncrementStep = -1;
                this.columnCODPRODUTO.AllowDBNull = false;
                this.columnCODPRODUTO.ReadOnly = true;
                this.columnCODPRODUTO.Unique = true;
                this.columnDESCRICAO.AllowDBNull = false;
                this.columnDESCRICAO.MaxLength = 100;
                this.columnDATACADASTRO.AllowDBNull = false;
                this.columnPRECOCUSTO.AllowDBNull = false;
                this.columnPESOLIQUIDO.AllowDBNull = false;
                this.columnCODGRUPOPRODUTO.AllowDBNull = false;
                this.columnPRECOVENDA.AllowDBNull = false;
                this.columnATIVO.MaxLength = 1;
                this.columnCODUNIDADEMEDIDA.MaxLength = 3;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUTORow NewPRODUTORow() {
                return ((PRODUTORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PRODUTORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PRODUTORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PRODUTORowChanged != null)) {
                    this.PRODUTORowChanged(this, new PRODUTORowChangeEvent(((PRODUTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PRODUTORowChanging != null)) {
                    this.PRODUTORowChanging(this, new PRODUTORowChangeEvent(((PRODUTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PRODUTORowDeleted != null)) {
                    this.PRODUTORowDeleted(this, new PRODUTORowChangeEvent(((PRODUTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PRODUTORowDeleting != null)) {
                    this.PRODUTORowDeleting(this, new PRODUTORowChangeEvent(((PRODUTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePRODUTORow(PRODUTORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PRODUTODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class REGIAODataTable : global::System.Data.TypedTableBase<REGIAORow> {
            
            private global::System.Data.DataColumn columnCODREGIAO;
            
            private global::System.Data.DataColumn columnDESCRICAO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGIAODataTable() {
                this.TableName = "REGIAO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal REGIAODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected REGIAODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODREGIAOColumn {
                get {
                    return this.columnCODREGIAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRICAOColumn {
                get {
                    return this.columnDESCRICAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGIAORow this[int index] {
                get {
                    return ((REGIAORow)(this.Rows[index]));
                }
            }
            
            public event REGIAORowChangeEventHandler REGIAORowChanging;
            
            public event REGIAORowChangeEventHandler REGIAORowChanged;
            
            public event REGIAORowChangeEventHandler REGIAORowDeleting;
            
            public event REGIAORowChangeEventHandler REGIAORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddREGIAORow(REGIAORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGIAORow AddREGIAORow(string DESCRICAO) {
                REGIAORow rowREGIAORow = ((REGIAORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DESCRICAO};
                rowREGIAORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowREGIAORow);
                return rowREGIAORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGIAORow FindByCODREGIAO(int CODREGIAO) {
                return ((REGIAORow)(this.Rows.Find(new object[] {
                            CODREGIAO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                REGIAODataTable cln = ((REGIAODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new REGIAODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCODREGIAO = base.Columns["CODREGIAO"];
                this.columnDESCRICAO = base.Columns["DESCRICAO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCODREGIAO = new global::System.Data.DataColumn("CODREGIAO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODREGIAO);
                this.columnDESCRICAO = new global::System.Data.DataColumn("DESCRICAO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRICAO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCODREGIAO}, true));
                this.columnCODREGIAO.AutoIncrement = true;
                this.columnCODREGIAO.AutoIncrementSeed = -1;
                this.columnCODREGIAO.AutoIncrementStep = -1;
                this.columnCODREGIAO.AllowDBNull = false;
                this.columnCODREGIAO.ReadOnly = true;
                this.columnCODREGIAO.Unique = true;
                this.columnDESCRICAO.AllowDBNull = false;
                this.columnDESCRICAO.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGIAORow NewREGIAORow() {
                return ((REGIAORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new REGIAORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(REGIAORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.REGIAORowChanged != null)) {
                    this.REGIAORowChanged(this, new REGIAORowChangeEvent(((REGIAORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.REGIAORowChanging != null)) {
                    this.REGIAORowChanging(this, new REGIAORowChangeEvent(((REGIAORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.REGIAORowDeleted != null)) {
                    this.REGIAORowDeleted(this, new REGIAORowChangeEvent(((REGIAORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.REGIAORowDeleting != null)) {
                    this.REGIAORowDeleting(this, new REGIAORowChangeEvent(((REGIAORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveREGIAORow(REGIAORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "REGIAODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TRANSPORTADORADataTable : global::System.Data.TypedTableBase<TRANSPORTADORARow> {
            
            private global::System.Data.DataColumn columnCNPJ;
            
            private global::System.Data.DataColumn columnNOME;
            
            private global::System.Data.DataColumn columnNOMEREDUZIDO;
            
            private global::System.Data.DataColumn columnENDERECO;
            
            private global::System.Data.DataColumn columnBAIRRO;
            
            private global::System.Data.DataColumn columnUF;
            
            private global::System.Data.DataColumn columnMUNICIPIO;
            
            private global::System.Data.DataColumn columnCEP;
            
            private global::System.Data.DataColumn columnTELEFONE;
            
            private global::System.Data.DataColumn columnIE;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnNUM;
            
            private global::System.Data.DataColumn columnCOMPLEMENTO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSPORTADORADataTable() {
                this.TableName = "TRANSPORTADORA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TRANSPORTADORADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TRANSPORTADORADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CNPJColumn {
                get {
                    return this.columnCNPJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOMEColumn {
                get {
                    return this.columnNOME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOMEREDUZIDOColumn {
                get {
                    return this.columnNOMEREDUZIDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ENDERECOColumn {
                get {
                    return this.columnENDERECO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAIRROColumn {
                get {
                    return this.columnBAIRRO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UFColumn {
                get {
                    return this.columnUF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MUNICIPIOColumn {
                get {
                    return this.columnMUNICIPIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CEPColumn {
                get {
                    return this.columnCEP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TELEFONEColumn {
                get {
                    return this.columnTELEFONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IEColumn {
                get {
                    return this.columnIE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NUMColumn {
                get {
                    return this.columnNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPLEMENTOColumn {
                get {
                    return this.columnCOMPLEMENTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSPORTADORARow this[int index] {
                get {
                    return ((TRANSPORTADORARow)(this.Rows[index]));
                }
            }
            
            public event TRANSPORTADORARowChangeEventHandler TRANSPORTADORARowChanging;
            
            public event TRANSPORTADORARowChangeEventHandler TRANSPORTADORARowChanged;
            
            public event TRANSPORTADORARowChangeEventHandler TRANSPORTADORARowDeleting;
            
            public event TRANSPORTADORARowChangeEventHandler TRANSPORTADORARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTRANSPORTADORARow(TRANSPORTADORARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSPORTADORARow AddTRANSPORTADORARow(string CNPJ, string NOME, string NOMEREDUZIDO, string ENDERECO, string BAIRRO, string UF, string MUNICIPIO, string CEP, string TELEFONE, string IE, string EMAIL, string NUM, string COMPLEMENTO) {
                TRANSPORTADORARow rowTRANSPORTADORARow = ((TRANSPORTADORARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CNPJ,
                        NOME,
                        NOMEREDUZIDO,
                        ENDERECO,
                        BAIRRO,
                        UF,
                        MUNICIPIO,
                        CEP,
                        TELEFONE,
                        IE,
                        EMAIL,
                        NUM,
                        COMPLEMENTO};
                rowTRANSPORTADORARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTRANSPORTADORARow);
                return rowTRANSPORTADORARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSPORTADORARow FindByCNPJ(string CNPJ) {
                return ((TRANSPORTADORARow)(this.Rows.Find(new object[] {
                            CNPJ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TRANSPORTADORADataTable cln = ((TRANSPORTADORADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TRANSPORTADORADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCNPJ = base.Columns["CNPJ"];
                this.columnNOME = base.Columns["NOME"];
                this.columnNOMEREDUZIDO = base.Columns["NOMEREDUZIDO"];
                this.columnENDERECO = base.Columns["ENDERECO"];
                this.columnBAIRRO = base.Columns["BAIRRO"];
                this.columnUF = base.Columns["UF"];
                this.columnMUNICIPIO = base.Columns["MUNICIPIO"];
                this.columnCEP = base.Columns["CEP"];
                this.columnTELEFONE = base.Columns["TELEFONE"];
                this.columnIE = base.Columns["IE"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnNUM = base.Columns["NUM"];
                this.columnCOMPLEMENTO = base.Columns["COMPLEMENTO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCNPJ = new global::System.Data.DataColumn("CNPJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNPJ);
                this.columnNOME = new global::System.Data.DataColumn("NOME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOME);
                this.columnNOMEREDUZIDO = new global::System.Data.DataColumn("NOMEREDUZIDO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOMEREDUZIDO);
                this.columnENDERECO = new global::System.Data.DataColumn("ENDERECO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENDERECO);
                this.columnBAIRRO = new global::System.Data.DataColumn("BAIRRO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAIRRO);
                this.columnUF = new global::System.Data.DataColumn("UF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUF);
                this.columnMUNICIPIO = new global::System.Data.DataColumn("MUNICIPIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMUNICIPIO);
                this.columnCEP = new global::System.Data.DataColumn("CEP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCEP);
                this.columnTELEFONE = new global::System.Data.DataColumn("TELEFONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTELEFONE);
                this.columnIE = new global::System.Data.DataColumn("IE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIE);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnNUM = new global::System.Data.DataColumn("NUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM);
                this.columnCOMPLEMENTO = new global::System.Data.DataColumn("COMPLEMENTO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPLEMENTO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCNPJ}, true));
                this.columnCNPJ.AllowDBNull = false;
                this.columnCNPJ.Unique = true;
                this.columnCNPJ.MaxLength = 14;
                this.columnNOME.AllowDBNull = false;
                this.columnNOME.MaxLength = 100;
                this.columnNOMEREDUZIDO.AllowDBNull = false;
                this.columnNOMEREDUZIDO.MaxLength = 100;
                this.columnENDERECO.AllowDBNull = false;
                this.columnENDERECO.MaxLength = 100;
                this.columnBAIRRO.AllowDBNull = false;
                this.columnBAIRRO.MaxLength = 100;
                this.columnUF.AllowDBNull = false;
                this.columnUF.MaxLength = 100;
                this.columnMUNICIPIO.AllowDBNull = false;
                this.columnMUNICIPIO.MaxLength = 100;
                this.columnCEP.AllowDBNull = false;
                this.columnCEP.MaxLength = 8;
                this.columnTELEFONE.AllowDBNull = false;
                this.columnTELEFONE.MaxLength = 10;
                this.columnIE.AllowDBNull = false;
                this.columnIE.MaxLength = 11;
                this.columnEMAIL.AllowDBNull = false;
                this.columnEMAIL.MaxLength = 100;
                this.columnNUM.AllowDBNull = false;
                this.columnNUM.MaxLength = 40;
                this.columnCOMPLEMENTO.MaxLength = 40;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSPORTADORARow NewTRANSPORTADORARow() {
                return ((TRANSPORTADORARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TRANSPORTADORARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TRANSPORTADORARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TRANSPORTADORARowChanged != null)) {
                    this.TRANSPORTADORARowChanged(this, new TRANSPORTADORARowChangeEvent(((TRANSPORTADORARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TRANSPORTADORARowChanging != null)) {
                    this.TRANSPORTADORARowChanging(this, new TRANSPORTADORARowChangeEvent(((TRANSPORTADORARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TRANSPORTADORARowDeleted != null)) {
                    this.TRANSPORTADORARowDeleted(this, new TRANSPORTADORARowChangeEvent(((TRANSPORTADORARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TRANSPORTADORARowDeleting != null)) {
                    this.TRANSPORTADORARowDeleting(this, new TRANSPORTADORARowChangeEvent(((TRANSPORTADORARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTRANSPORTADORARow(TRANSPORTADORARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TRANSPORTADORADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TRANSPORTADORAVIADataTable : global::System.Data.TypedTableBase<TRANSPORTADORAVIARow> {
            
            private global::System.Data.DataColumn columnCODVIATRANSPORTE;
            
            private global::System.Data.DataColumn columnCODTRANSPORTADORA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSPORTADORAVIADataTable() {
                this.TableName = "TRANSPORTADORAVIA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TRANSPORTADORAVIADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TRANSPORTADORAVIADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODVIATRANSPORTEColumn {
                get {
                    return this.columnCODVIATRANSPORTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODTRANSPORTADORAColumn {
                get {
                    return this.columnCODTRANSPORTADORA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSPORTADORAVIARow this[int index] {
                get {
                    return ((TRANSPORTADORAVIARow)(this.Rows[index]));
                }
            }
            
            public event TRANSPORTADORAVIARowChangeEventHandler TRANSPORTADORAVIARowChanging;
            
            public event TRANSPORTADORAVIARowChangeEventHandler TRANSPORTADORAVIARowChanged;
            
            public event TRANSPORTADORAVIARowChangeEventHandler TRANSPORTADORAVIARowDeleting;
            
            public event TRANSPORTADORAVIARowChangeEventHandler TRANSPORTADORAVIARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTRANSPORTADORAVIARow(TRANSPORTADORAVIARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSPORTADORAVIARow AddTRANSPORTADORAVIARow(VIATRANSPORTERow parentVIATRANSPORTERowByFK_TRANSPORTADORAVIA_VIATRANSPORTE, TRANSPORTADORARow parentTRANSPORTADORARowByFK_TRANSPORTADORAVIA_TRANSPORTADORA) {
                TRANSPORTADORAVIARow rowTRANSPORTADORAVIARow = ((TRANSPORTADORAVIARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentVIATRANSPORTERowByFK_TRANSPORTADORAVIA_VIATRANSPORTE != null)) {
                    columnValuesArray[0] = parentVIATRANSPORTERowByFK_TRANSPORTADORAVIA_VIATRANSPORTE[0];
                }
                if ((parentTRANSPORTADORARowByFK_TRANSPORTADORAVIA_TRANSPORTADORA != null)) {
                    columnValuesArray[1] = parentTRANSPORTADORARowByFK_TRANSPORTADORAVIA_TRANSPORTADORA[0];
                }
                rowTRANSPORTADORAVIARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTRANSPORTADORAVIARow);
                return rowTRANSPORTADORAVIARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSPORTADORAVIARow FindByCODVIATRANSPORTECODTRANSPORTADORA(string CODVIATRANSPORTE, string CODTRANSPORTADORA) {
                return ((TRANSPORTADORAVIARow)(this.Rows.Find(new object[] {
                            CODVIATRANSPORTE,
                            CODTRANSPORTADORA})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TRANSPORTADORAVIADataTable cln = ((TRANSPORTADORAVIADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TRANSPORTADORAVIADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCODVIATRANSPORTE = base.Columns["CODVIATRANSPORTE"];
                this.columnCODTRANSPORTADORA = base.Columns["CODTRANSPORTADORA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCODVIATRANSPORTE = new global::System.Data.DataColumn("CODVIATRANSPORTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODVIATRANSPORTE);
                this.columnCODTRANSPORTADORA = new global::System.Data.DataColumn("CODTRANSPORTADORA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODTRANSPORTADORA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCODVIATRANSPORTE,
                                this.columnCODTRANSPORTADORA}, true));
                this.columnCODVIATRANSPORTE.AllowDBNull = false;
                this.columnCODVIATRANSPORTE.MaxLength = 3;
                this.columnCODTRANSPORTADORA.AllowDBNull = false;
                this.columnCODTRANSPORTADORA.MaxLength = 14;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSPORTADORAVIARow NewTRANSPORTADORAVIARow() {
                return ((TRANSPORTADORAVIARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TRANSPORTADORAVIARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TRANSPORTADORAVIARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TRANSPORTADORAVIARowChanged != null)) {
                    this.TRANSPORTADORAVIARowChanged(this, new TRANSPORTADORAVIARowChangeEvent(((TRANSPORTADORAVIARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TRANSPORTADORAVIARowChanging != null)) {
                    this.TRANSPORTADORAVIARowChanging(this, new TRANSPORTADORAVIARowChangeEvent(((TRANSPORTADORAVIARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TRANSPORTADORAVIARowDeleted != null)) {
                    this.TRANSPORTADORAVIARowDeleted(this, new TRANSPORTADORAVIARowChangeEvent(((TRANSPORTADORAVIARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TRANSPORTADORAVIARowDeleting != null)) {
                    this.TRANSPORTADORAVIARowDeleting(this, new TRANSPORTADORAVIARowChangeEvent(((TRANSPORTADORAVIARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTRANSPORTADORAVIARow(TRANSPORTADORAVIARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TRANSPORTADORAVIADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UNIDADEMEDIDADataTable : global::System.Data.TypedTableBase<UNIDADEMEDIDARow> {
            
            private global::System.Data.DataColumn columnCODUNIDADEMEDIDA;
            
            private global::System.Data.DataColumn columnDESCRICAO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADEMEDIDADataTable() {
                this.TableName = "UNIDADEMEDIDA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UNIDADEMEDIDADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UNIDADEMEDIDADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODUNIDADEMEDIDAColumn {
                get {
                    return this.columnCODUNIDADEMEDIDA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRICAOColumn {
                get {
                    return this.columnDESCRICAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADEMEDIDARow this[int index] {
                get {
                    return ((UNIDADEMEDIDARow)(this.Rows[index]));
                }
            }
            
            public event UNIDADEMEDIDARowChangeEventHandler UNIDADEMEDIDARowChanging;
            
            public event UNIDADEMEDIDARowChangeEventHandler UNIDADEMEDIDARowChanged;
            
            public event UNIDADEMEDIDARowChangeEventHandler UNIDADEMEDIDARowDeleting;
            
            public event UNIDADEMEDIDARowChangeEventHandler UNIDADEMEDIDARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUNIDADEMEDIDARow(UNIDADEMEDIDARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADEMEDIDARow AddUNIDADEMEDIDARow(string CODUNIDADEMEDIDA, string DESCRICAO) {
                UNIDADEMEDIDARow rowUNIDADEMEDIDARow = ((UNIDADEMEDIDARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CODUNIDADEMEDIDA,
                        DESCRICAO};
                rowUNIDADEMEDIDARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUNIDADEMEDIDARow);
                return rowUNIDADEMEDIDARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADEMEDIDARow FindByCODUNIDADEMEDIDA(string CODUNIDADEMEDIDA) {
                return ((UNIDADEMEDIDARow)(this.Rows.Find(new object[] {
                            CODUNIDADEMEDIDA})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UNIDADEMEDIDADataTable cln = ((UNIDADEMEDIDADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UNIDADEMEDIDADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCODUNIDADEMEDIDA = base.Columns["CODUNIDADEMEDIDA"];
                this.columnDESCRICAO = base.Columns["DESCRICAO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCODUNIDADEMEDIDA = new global::System.Data.DataColumn("CODUNIDADEMEDIDA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODUNIDADEMEDIDA);
                this.columnDESCRICAO = new global::System.Data.DataColumn("DESCRICAO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRICAO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCODUNIDADEMEDIDA}, true));
                this.columnCODUNIDADEMEDIDA.AllowDBNull = false;
                this.columnCODUNIDADEMEDIDA.Unique = true;
                this.columnCODUNIDADEMEDIDA.MaxLength = 3;
                this.columnDESCRICAO.AllowDBNull = false;
                this.columnDESCRICAO.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADEMEDIDARow NewUNIDADEMEDIDARow() {
                return ((UNIDADEMEDIDARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UNIDADEMEDIDARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UNIDADEMEDIDARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UNIDADEMEDIDARowChanged != null)) {
                    this.UNIDADEMEDIDARowChanged(this, new UNIDADEMEDIDARowChangeEvent(((UNIDADEMEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UNIDADEMEDIDARowChanging != null)) {
                    this.UNIDADEMEDIDARowChanging(this, new UNIDADEMEDIDARowChangeEvent(((UNIDADEMEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UNIDADEMEDIDARowDeleted != null)) {
                    this.UNIDADEMEDIDARowDeleted(this, new UNIDADEMEDIDARowChangeEvent(((UNIDADEMEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UNIDADEMEDIDARowDeleting != null)) {
                    this.UNIDADEMEDIDARowDeleting(this, new UNIDADEMEDIDARowChangeEvent(((UNIDADEMEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUNIDADEMEDIDARow(UNIDADEMEDIDARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UNIDADEMEDIDADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class USUARIODataTable : global::System.Data.TypedTableBase<USUARIORow> {
            
            private global::System.Data.DataColumn columnCODUSUARIO;
            
            private global::System.Data.DataColumn columnUSUARIO;
            
            private global::System.Data.DataColumn columnSENHA;
            
            private global::System.Data.DataColumn columnPRIVILEGIADO;
            
            private global::System.Data.DataColumn columnBLOQUEADO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIODataTable() {
                this.TableName = "USUARIO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal USUARIODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected USUARIODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODUSUARIOColumn {
                get {
                    return this.columnCODUSUARIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USUARIOColumn {
                get {
                    return this.columnUSUARIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENHAColumn {
                get {
                    return this.columnSENHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRIVILEGIADOColumn {
                get {
                    return this.columnPRIVILEGIADO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLOQUEADOColumn {
                get {
                    return this.columnBLOQUEADO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIORow this[int index] {
                get {
                    return ((USUARIORow)(this.Rows[index]));
                }
            }
            
            public event USUARIORowChangeEventHandler USUARIORowChanging;
            
            public event USUARIORowChangeEventHandler USUARIORowChanged;
            
            public event USUARIORowChangeEventHandler USUARIORowDeleting;
            
            public event USUARIORowChangeEventHandler USUARIORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUSUARIORow(USUARIORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIORow AddUSUARIORow(string USUARIO, string SENHA, string PRIVILEGIADO, string BLOQUEADO) {
                USUARIORow rowUSUARIORow = ((USUARIORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        USUARIO,
                        SENHA,
                        PRIVILEGIADO,
                        BLOQUEADO};
                rowUSUARIORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUSUARIORow);
                return rowUSUARIORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIORow FindByCODUSUARIO(int CODUSUARIO) {
                return ((USUARIORow)(this.Rows.Find(new object[] {
                            CODUSUARIO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                USUARIODataTable cln = ((USUARIODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new USUARIODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCODUSUARIO = base.Columns["CODUSUARIO"];
                this.columnUSUARIO = base.Columns["USUARIO"];
                this.columnSENHA = base.Columns["SENHA"];
                this.columnPRIVILEGIADO = base.Columns["PRIVILEGIADO"];
                this.columnBLOQUEADO = base.Columns["BLOQUEADO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCODUSUARIO = new global::System.Data.DataColumn("CODUSUARIO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODUSUARIO);
                this.columnUSUARIO = new global::System.Data.DataColumn("USUARIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSUARIO);
                this.columnSENHA = new global::System.Data.DataColumn("SENHA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENHA);
                this.columnPRIVILEGIADO = new global::System.Data.DataColumn("PRIVILEGIADO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRIVILEGIADO);
                this.columnBLOQUEADO = new global::System.Data.DataColumn("BLOQUEADO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLOQUEADO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCODUSUARIO}, true));
                this.columnCODUSUARIO.AutoIncrement = true;
                this.columnCODUSUARIO.AutoIncrementSeed = -1;
                this.columnCODUSUARIO.AutoIncrementStep = -1;
                this.columnCODUSUARIO.AllowDBNull = false;
                this.columnCODUSUARIO.ReadOnly = true;
                this.columnCODUSUARIO.Unique = true;
                this.columnUSUARIO.AllowDBNull = false;
                this.columnUSUARIO.MaxLength = 30;
                this.columnSENHA.AllowDBNull = false;
                this.columnSENHA.MaxLength = 12;
                this.columnPRIVILEGIADO.MaxLength = 1;
                this.columnBLOQUEADO.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIORow NewUSUARIORow() {
                return ((USUARIORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new USUARIORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(USUARIORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.USUARIORowChanged != null)) {
                    this.USUARIORowChanged(this, new USUARIORowChangeEvent(((USUARIORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.USUARIORowChanging != null)) {
                    this.USUARIORowChanging(this, new USUARIORowChangeEvent(((USUARIORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.USUARIORowDeleted != null)) {
                    this.USUARIORowDeleted(this, new USUARIORowChangeEvent(((USUARIORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.USUARIORowDeleting != null)) {
                    this.USUARIORowDeleting(this, new USUARIORowChangeEvent(((USUARIORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUSUARIORow(USUARIORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "USUARIODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VENDEDORDataTable : global::System.Data.TypedTableBase<VENDEDORRow> {
            
            private global::System.Data.DataColumn columnCPF;
            
            private global::System.Data.DataColumn columnNOME;
            
            private global::System.Data.DataColumn columnENDERECO;
            
            private global::System.Data.DataColumn columnBAIRRO;
            
            private global::System.Data.DataColumn columnMUNICIPIO;
            
            private global::System.Data.DataColumn columnUF;
            
            private global::System.Data.DataColumn columnCEP;
            
            private global::System.Data.DataColumn columnTELEFONE;
            
            private global::System.Data.DataColumn columnFAX;
            
            private global::System.Data.DataColumn columnRG;
            
            private global::System.Data.DataColumn columnCODUSUARIO;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnCOMISSAO;
            
            private global::System.Data.DataColumn columnATIVO;
            
            private global::System.Data.DataColumn columnSEXO;
            
            private global::System.Data.DataColumn columnCODREGIAO;
            
            private global::System.Data.DataColumn columnNUM;
            
            private global::System.Data.DataColumn columnCOMPLEMENTO;
            
            private global::System.Data.DataColumn columnCELULAR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VENDEDORDataTable() {
                this.TableName = "VENDEDOR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VENDEDORDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected VENDEDORDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CPFColumn {
                get {
                    return this.columnCPF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOMEColumn {
                get {
                    return this.columnNOME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ENDERECOColumn {
                get {
                    return this.columnENDERECO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAIRROColumn {
                get {
                    return this.columnBAIRRO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MUNICIPIOColumn {
                get {
                    return this.columnMUNICIPIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UFColumn {
                get {
                    return this.columnUF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CEPColumn {
                get {
                    return this.columnCEP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TELEFONEColumn {
                get {
                    return this.columnTELEFONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FAXColumn {
                get {
                    return this.columnFAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RGColumn {
                get {
                    return this.columnRG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODUSUARIOColumn {
                get {
                    return this.columnCODUSUARIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMISSAOColumn {
                get {
                    return this.columnCOMISSAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATIVOColumn {
                get {
                    return this.columnATIVO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEXOColumn {
                get {
                    return this.columnSEXO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODREGIAOColumn {
                get {
                    return this.columnCODREGIAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NUMColumn {
                get {
                    return this.columnNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPLEMENTOColumn {
                get {
                    return this.columnCOMPLEMENTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CELULARColumn {
                get {
                    return this.columnCELULAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VENDEDORRow this[int index] {
                get {
                    return ((VENDEDORRow)(this.Rows[index]));
                }
            }
            
            public event VENDEDORRowChangeEventHandler VENDEDORRowChanging;
            
            public event VENDEDORRowChangeEventHandler VENDEDORRowChanged;
            
            public event VENDEDORRowChangeEventHandler VENDEDORRowDeleting;
            
            public event VENDEDORRowChangeEventHandler VENDEDORRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVENDEDORRow(VENDEDORRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VENDEDORRow AddVENDEDORRow(
                        string CPF, 
                        string NOME, 
                        string ENDERECO, 
                        string BAIRRO, 
                        string MUNICIPIO, 
                        string UF, 
                        string CEP, 
                        string TELEFONE, 
                        string FAX, 
                        string RG, 
                        USUARIORow parentUSUARIORowByFK_VENDEDOR_USUARIO, 
                        string EMAIL, 
                        double COMISSAO, 
                        string ATIVO, 
                        string SEXO, 
                        REGIAORow parentREGIAORowByFK_VENDEDOR_REGIAO, 
                        string NUM, 
                        string COMPLEMENTO, 
                        string CELULAR) {
                VENDEDORRow rowVENDEDORRow = ((VENDEDORRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CPF,
                        NOME,
                        ENDERECO,
                        BAIRRO,
                        MUNICIPIO,
                        UF,
                        CEP,
                        TELEFONE,
                        FAX,
                        RG,
                        null,
                        EMAIL,
                        COMISSAO,
                        ATIVO,
                        SEXO,
                        null,
                        NUM,
                        COMPLEMENTO,
                        CELULAR};
                if ((parentUSUARIORowByFK_VENDEDOR_USUARIO != null)) {
                    columnValuesArray[10] = parentUSUARIORowByFK_VENDEDOR_USUARIO[0];
                }
                if ((parentREGIAORowByFK_VENDEDOR_REGIAO != null)) {
                    columnValuesArray[15] = parentREGIAORowByFK_VENDEDOR_REGIAO[0];
                }
                rowVENDEDORRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVENDEDORRow);
                return rowVENDEDORRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VENDEDORRow FindByCPF(string CPF) {
                return ((VENDEDORRow)(this.Rows.Find(new object[] {
                            CPF})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                VENDEDORDataTable cln = ((VENDEDORDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VENDEDORDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCPF = base.Columns["CPF"];
                this.columnNOME = base.Columns["NOME"];
                this.columnENDERECO = base.Columns["ENDERECO"];
                this.columnBAIRRO = base.Columns["BAIRRO"];
                this.columnMUNICIPIO = base.Columns["MUNICIPIO"];
                this.columnUF = base.Columns["UF"];
                this.columnCEP = base.Columns["CEP"];
                this.columnTELEFONE = base.Columns["TELEFONE"];
                this.columnFAX = base.Columns["FAX"];
                this.columnRG = base.Columns["RG"];
                this.columnCODUSUARIO = base.Columns["CODUSUARIO"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnCOMISSAO = base.Columns["COMISSAO"];
                this.columnATIVO = base.Columns["ATIVO"];
                this.columnSEXO = base.Columns["SEXO"];
                this.columnCODREGIAO = base.Columns["CODREGIAO"];
                this.columnNUM = base.Columns["NUM"];
                this.columnCOMPLEMENTO = base.Columns["COMPLEMENTO"];
                this.columnCELULAR = base.Columns["CELULAR"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCPF = new global::System.Data.DataColumn("CPF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPF);
                this.columnNOME = new global::System.Data.DataColumn("NOME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOME);
                this.columnENDERECO = new global::System.Data.DataColumn("ENDERECO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENDERECO);
                this.columnBAIRRO = new global::System.Data.DataColumn("BAIRRO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAIRRO);
                this.columnMUNICIPIO = new global::System.Data.DataColumn("MUNICIPIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMUNICIPIO);
                this.columnUF = new global::System.Data.DataColumn("UF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUF);
                this.columnCEP = new global::System.Data.DataColumn("CEP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCEP);
                this.columnTELEFONE = new global::System.Data.DataColumn("TELEFONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTELEFONE);
                this.columnFAX = new global::System.Data.DataColumn("FAX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAX);
                this.columnRG = new global::System.Data.DataColumn("RG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRG);
                this.columnCODUSUARIO = new global::System.Data.DataColumn("CODUSUARIO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODUSUARIO);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnCOMISSAO = new global::System.Data.DataColumn("COMISSAO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMISSAO);
                this.columnATIVO = new global::System.Data.DataColumn("ATIVO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATIVO);
                this.columnSEXO = new global::System.Data.DataColumn("SEXO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEXO);
                this.columnCODREGIAO = new global::System.Data.DataColumn("CODREGIAO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODREGIAO);
                this.columnNUM = new global::System.Data.DataColumn("NUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM);
                this.columnCOMPLEMENTO = new global::System.Data.DataColumn("COMPLEMENTO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPLEMENTO);
                this.columnCELULAR = new global::System.Data.DataColumn("CELULAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCELULAR);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCPF}, true));
                this.columnCPF.AllowDBNull = false;
                this.columnCPF.Unique = true;
                this.columnCPF.MaxLength = 11;
                this.columnNOME.AllowDBNull = false;
                this.columnNOME.MaxLength = 100;
                this.columnENDERECO.AllowDBNull = false;
                this.columnENDERECO.MaxLength = 100;
                this.columnBAIRRO.AllowDBNull = false;
                this.columnBAIRRO.MaxLength = 100;
                this.columnMUNICIPIO.AllowDBNull = false;
                this.columnMUNICIPIO.MaxLength = 100;
                this.columnUF.AllowDBNull = false;
                this.columnUF.MaxLength = 2;
                this.columnCEP.AllowDBNull = false;
                this.columnCEP.MaxLength = 8;
                this.columnTELEFONE.MaxLength = 10;
                this.columnFAX.MaxLength = 10;
                this.columnRG.AllowDBNull = false;
                this.columnRG.MaxLength = 9;
                this.columnEMAIL.MaxLength = 100;
                this.columnATIVO.MaxLength = 1;
                this.columnSEXO.MaxLength = 1;
                this.columnNUM.AllowDBNull = false;
                this.columnNUM.MaxLength = 40;
                this.columnCOMPLEMENTO.MaxLength = 40;
                this.columnCELULAR.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VENDEDORRow NewVENDEDORRow() {
                return ((VENDEDORRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VENDEDORRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(VENDEDORRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VENDEDORRowChanged != null)) {
                    this.VENDEDORRowChanged(this, new VENDEDORRowChangeEvent(((VENDEDORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VENDEDORRowChanging != null)) {
                    this.VENDEDORRowChanging(this, new VENDEDORRowChangeEvent(((VENDEDORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VENDEDORRowDeleted != null)) {
                    this.VENDEDORRowDeleted(this, new VENDEDORRowChangeEvent(((VENDEDORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VENDEDORRowDeleting != null)) {
                    this.VENDEDORRowDeleting(this, new VENDEDORRowChangeEvent(((VENDEDORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVENDEDORRow(VENDEDORRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VENDEDORDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VIATRANSPORTEDataTable : global::System.Data.TypedTableBase<VIATRANSPORTERow> {
            
            private global::System.Data.DataColumn columnCODVIATRANSPORTE;
            
            private global::System.Data.DataColumn columnDESCRICAO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VIATRANSPORTEDataTable() {
                this.TableName = "VIATRANSPORTE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VIATRANSPORTEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected VIATRANSPORTEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODVIATRANSPORTEColumn {
                get {
                    return this.columnCODVIATRANSPORTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRICAOColumn {
                get {
                    return this.columnDESCRICAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VIATRANSPORTERow this[int index] {
                get {
                    return ((VIATRANSPORTERow)(this.Rows[index]));
                }
            }
            
            public event VIATRANSPORTERowChangeEventHandler VIATRANSPORTERowChanging;
            
            public event VIATRANSPORTERowChangeEventHandler VIATRANSPORTERowChanged;
            
            public event VIATRANSPORTERowChangeEventHandler VIATRANSPORTERowDeleting;
            
            public event VIATRANSPORTERowChangeEventHandler VIATRANSPORTERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVIATRANSPORTERow(VIATRANSPORTERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VIATRANSPORTERow AddVIATRANSPORTERow(string CODVIATRANSPORTE, string DESCRICAO) {
                VIATRANSPORTERow rowVIATRANSPORTERow = ((VIATRANSPORTERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CODVIATRANSPORTE,
                        DESCRICAO};
                rowVIATRANSPORTERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVIATRANSPORTERow);
                return rowVIATRANSPORTERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VIATRANSPORTERow FindByCODVIATRANSPORTE(string CODVIATRANSPORTE) {
                return ((VIATRANSPORTERow)(this.Rows.Find(new object[] {
                            CODVIATRANSPORTE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                VIATRANSPORTEDataTable cln = ((VIATRANSPORTEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VIATRANSPORTEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCODVIATRANSPORTE = base.Columns["CODVIATRANSPORTE"];
                this.columnDESCRICAO = base.Columns["DESCRICAO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCODVIATRANSPORTE = new global::System.Data.DataColumn("CODVIATRANSPORTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODVIATRANSPORTE);
                this.columnDESCRICAO = new global::System.Data.DataColumn("DESCRICAO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRICAO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCODVIATRANSPORTE}, true));
                this.columnCODVIATRANSPORTE.AllowDBNull = false;
                this.columnCODVIATRANSPORTE.Unique = true;
                this.columnCODVIATRANSPORTE.MaxLength = 3;
                this.columnDESCRICAO.AllowDBNull = false;
                this.columnDESCRICAO.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VIATRANSPORTERow NewVIATRANSPORTERow() {
                return ((VIATRANSPORTERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VIATRANSPORTERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(VIATRANSPORTERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VIATRANSPORTERowChanged != null)) {
                    this.VIATRANSPORTERowChanged(this, new VIATRANSPORTERowChangeEvent(((VIATRANSPORTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VIATRANSPORTERowChanging != null)) {
                    this.VIATRANSPORTERowChanging(this, new VIATRANSPORTERowChangeEvent(((VIATRANSPORTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VIATRANSPORTERowDeleted != null)) {
                    this.VIATRANSPORTERowDeleted(this, new VIATRANSPORTERowChangeEvent(((VIATRANSPORTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VIATRANSPORTERowDeleting != null)) {
                    this.VIATRANSPORTERowDeleting(this, new VIATRANSPORTERowChangeEvent(((VIATRANSPORTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVIATRANSPORTERow(VIATRANSPORTERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VIATRANSPORTEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ATUCUBODataTable : global::System.Data.TypedTableBase<ATUCUBORow> {
            
            private global::System.Data.DataColumn columnNRATUALIZACAO;
            
            private global::System.Data.DataColumn columnCODUSUARIO;
            
            private global::System.Data.DataColumn columnDATAATUALIZACAO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATUCUBODataTable() {
                this.TableName = "ATUCUBO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ATUCUBODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ATUCUBODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NRATUALIZACAOColumn {
                get {
                    return this.columnNRATUALIZACAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODUSUARIOColumn {
                get {
                    return this.columnCODUSUARIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATAATUALIZACAOColumn {
                get {
                    return this.columnDATAATUALIZACAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATUCUBORow this[int index] {
                get {
                    return ((ATUCUBORow)(this.Rows[index]));
                }
            }
            
            public event ATUCUBORowChangeEventHandler ATUCUBORowChanging;
            
            public event ATUCUBORowChangeEventHandler ATUCUBORowChanged;
            
            public event ATUCUBORowChangeEventHandler ATUCUBORowDeleting;
            
            public event ATUCUBORowChangeEventHandler ATUCUBORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddATUCUBORow(ATUCUBORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATUCUBORow AddATUCUBORow(USUARIORow parentUSUARIORowByFK_ATUCUBO_USUARIO, System.DateTime DATAATUALIZACAO) {
                ATUCUBORow rowATUCUBORow = ((ATUCUBORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        DATAATUALIZACAO};
                if ((parentUSUARIORowByFK_ATUCUBO_USUARIO != null)) {
                    columnValuesArray[1] = parentUSUARIORowByFK_ATUCUBO_USUARIO[0];
                }
                rowATUCUBORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowATUCUBORow);
                return rowATUCUBORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATUCUBORow FindByNRATUALIZACAO(int NRATUALIZACAO) {
                return ((ATUCUBORow)(this.Rows.Find(new object[] {
                            NRATUALIZACAO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ATUCUBODataTable cln = ((ATUCUBODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ATUCUBODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNRATUALIZACAO = base.Columns["NRATUALIZACAO"];
                this.columnCODUSUARIO = base.Columns["CODUSUARIO"];
                this.columnDATAATUALIZACAO = base.Columns["DATAATUALIZACAO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNRATUALIZACAO = new global::System.Data.DataColumn("NRATUALIZACAO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNRATUALIZACAO);
                this.columnCODUSUARIO = new global::System.Data.DataColumn("CODUSUARIO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODUSUARIO);
                this.columnDATAATUALIZACAO = new global::System.Data.DataColumn("DATAATUALIZACAO", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATAATUALIZACAO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNRATUALIZACAO}, true));
                this.columnNRATUALIZACAO.AutoIncrement = true;
                this.columnNRATUALIZACAO.AutoIncrementSeed = -1;
                this.columnNRATUALIZACAO.AutoIncrementStep = -1;
                this.columnNRATUALIZACAO.AllowDBNull = false;
                this.columnNRATUALIZACAO.ReadOnly = true;
                this.columnNRATUALIZACAO.Unique = true;
                this.columnCODUSUARIO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATUCUBORow NewATUCUBORow() {
                return ((ATUCUBORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ATUCUBORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ATUCUBORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ATUCUBORowChanged != null)) {
                    this.ATUCUBORowChanged(this, new ATUCUBORowChangeEvent(((ATUCUBORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ATUCUBORowChanging != null)) {
                    this.ATUCUBORowChanging(this, new ATUCUBORowChangeEvent(((ATUCUBORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ATUCUBORowDeleted != null)) {
                    this.ATUCUBORowDeleted(this, new ATUCUBORowChangeEvent(((ATUCUBORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ATUCUBORowDeleting != null)) {
                    this.ATUCUBORowDeleting(this, new ATUCUBORowChangeEvent(((ATUCUBORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveATUCUBORow(ATUCUBORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ATUCUBODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class modeloDataTable : global::System.Data.TypedTableBase<modeloRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnestrutura;
            
            private global::System.Data.DataColumn columndataCriacao;
            
            private global::System.Data.DataColumn columnalgoritmo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public modeloDataTable() {
                this.TableName = "modelo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal modeloDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected modeloDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn estruturaColumn {
                get {
                    return this.columnestrutura;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dataCriacaoColumn {
                get {
                    return this.columndataCriacao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn algoritmoColumn {
                get {
                    return this.columnalgoritmo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public modeloRow this[int index] {
                get {
                    return ((modeloRow)(this.Rows[index]));
                }
            }
            
            public event modeloRowChangeEventHandler modeloRowChanging;
            
            public event modeloRowChangeEventHandler modeloRowChanged;
            
            public event modeloRowChangeEventHandler modeloRowDeleting;
            
            public event modeloRowChangeEventHandler modeloRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddmodeloRow(modeloRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public modeloRow AddmodeloRow(string estrutura, System.DateTime dataCriacao, string algoritmo) {
                modeloRow rowmodeloRow = ((modeloRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        estrutura,
                        dataCriacao,
                        algoritmo};
                rowmodeloRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmodeloRow);
                return rowmodeloRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public modeloRow FindByid(int id) {
                return ((modeloRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                modeloDataTable cln = ((modeloDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new modeloDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnestrutura = base.Columns["estrutura"];
                this.columndataCriacao = base.Columns["dataCriacao"];
                this.columnalgoritmo = base.Columns["algoritmo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnestrutura = new global::System.Data.DataColumn("estrutura", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnestrutura);
                this.columndataCriacao = new global::System.Data.DataColumn("dataCriacao", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndataCriacao);
                this.columnalgoritmo = new global::System.Data.DataColumn("algoritmo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalgoritmo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnestrutura.AllowDBNull = false;
                this.columnestrutura.MaxLength = 100;
                this.columnalgoritmo.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public modeloRow NewmodeloRow() {
                return ((modeloRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new modeloRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(modeloRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.modeloRowChanged != null)) {
                    this.modeloRowChanged(this, new modeloRowChangeEvent(((modeloRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.modeloRowChanging != null)) {
                    this.modeloRowChanging(this, new modeloRowChangeEvent(((modeloRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.modeloRowDeleted != null)) {
                    this.modeloRowDeleted(this, new modeloRowChangeEvent(((modeloRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.modeloRowDeleting != null)) {
                    this.modeloRowDeleting(this, new modeloRowChangeEvent(((modeloRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovemodeloRow(modeloRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "modeloDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class modeloCampoDataTable : global::System.Data.TypedTableBase<modeloCampoRow> {
            
            private global::System.Data.DataColumn columnidModelo;
            
            private global::System.Data.DataColumn columncampo;
            
            private global::System.Data.DataColumn columntipo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public modeloCampoDataTable() {
                this.TableName = "modeloCampo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal modeloCampoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected modeloCampoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idModeloColumn {
                get {
                    return this.columnidModelo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn campoColumn {
                get {
                    return this.columncampo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tipoColumn {
                get {
                    return this.columntipo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public modeloCampoRow this[int index] {
                get {
                    return ((modeloCampoRow)(this.Rows[index]));
                }
            }
            
            public event modeloCampoRowChangeEventHandler modeloCampoRowChanging;
            
            public event modeloCampoRowChangeEventHandler modeloCampoRowChanged;
            
            public event modeloCampoRowChangeEventHandler modeloCampoRowDeleting;
            
            public event modeloCampoRowChangeEventHandler modeloCampoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddmodeloCampoRow(modeloCampoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public modeloCampoRow AddmodeloCampoRow(modeloRow parentmodeloRowByFK_modelo_modeloCampo, string campo, string tipo) {
                modeloCampoRow rowmodeloCampoRow = ((modeloCampoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        campo,
                        tipo};
                if ((parentmodeloRowByFK_modelo_modeloCampo != null)) {
                    columnValuesArray[0] = parentmodeloRowByFK_modelo_modeloCampo[0];
                }
                rowmodeloCampoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmodeloCampoRow);
                return rowmodeloCampoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public modeloCampoRow FindByidModelocampo(int idModelo, string campo) {
                return ((modeloCampoRow)(this.Rows.Find(new object[] {
                            idModelo,
                            campo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                modeloCampoDataTable cln = ((modeloCampoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new modeloCampoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidModelo = base.Columns["idModelo"];
                this.columncampo = base.Columns["campo"];
                this.columntipo = base.Columns["tipo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidModelo = new global::System.Data.DataColumn("idModelo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidModelo);
                this.columncampo = new global::System.Data.DataColumn("campo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncampo);
                this.columntipo = new global::System.Data.DataColumn("tipo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntipo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidModelo,
                                this.columncampo}, true));
                this.columnidModelo.AllowDBNull = false;
                this.columncampo.AllowDBNull = false;
                this.columncampo.MaxLength = 100;
                this.columntipo.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public modeloCampoRow NewmodeloCampoRow() {
                return ((modeloCampoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new modeloCampoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(modeloCampoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.modeloCampoRowChanged != null)) {
                    this.modeloCampoRowChanged(this, new modeloCampoRowChangeEvent(((modeloCampoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.modeloCampoRowChanging != null)) {
                    this.modeloCampoRowChanging(this, new modeloCampoRowChangeEvent(((modeloCampoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.modeloCampoRowDeleted != null)) {
                    this.modeloCampoRowDeleted(this, new modeloCampoRowChangeEvent(((modeloCampoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.modeloCampoRowDeleting != null)) {
                    this.modeloCampoRowDeleting(this, new modeloCampoRowChangeEvent(((modeloCampoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovemodeloCampoRow(modeloCampoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "modeloCampoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NOTAFISCALDataTable : global::System.Data.TypedTableBase<NOTAFISCALRow> {
            
            private global::System.Data.DataColumn columnNrNotaFiscal;
            
            private global::System.Data.DataColumn columnRazaoSocial;
            
            private global::System.Data.DataColumn columnSerie;
            
            private global::System.Data.DataColumn columnDataEmissao;
            
            private global::System.Data.DataColumn columnIE;
            
            private global::System.Data.DataColumn columnTelefone;
            
            private global::System.Data.DataColumn columnEndereco;
            
            private global::System.Data.DataColumn columnBairro;
            
            private global::System.Data.DataColumn columnMunicipio;
            
            private global::System.Data.DataColumn columnIcms;
            
            private global::System.Data.DataColumn columnTipo;
            
            private global::System.Data.DataColumn columnCNPJ;
            
            private global::System.Data.DataColumn columnTipoFrete;
            
            private global::System.Data.DataColumn columnValorFrete;
            
            private global::System.Data.DataColumn columnCodVendedor;
            
            private global::System.Data.DataColumn columnCodTransportadora;
            
            private global::System.Data.DataColumn columnNrPedido;
            
            private global::System.Data.DataColumn columnValorNota;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NOTAFISCALDataTable() {
                this.TableName = "NOTAFISCAL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NOTAFISCALDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected NOTAFISCALDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NrNotaFiscalColumn {
                get {
                    return this.columnNrNotaFiscal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RazaoSocialColumn {
                get {
                    return this.columnRazaoSocial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SerieColumn {
                get {
                    return this.columnSerie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataEmissaoColumn {
                get {
                    return this.columnDataEmissao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IEColumn {
                get {
                    return this.columnIE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelefoneColumn {
                get {
                    return this.columnTelefone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnderecoColumn {
                get {
                    return this.columnEndereco;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BairroColumn {
                get {
                    return this.columnBairro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MunicipioColumn {
                get {
                    return this.columnMunicipio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IcmsColumn {
                get {
                    return this.columnIcms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoColumn {
                get {
                    return this.columnTipo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CNPJColumn {
                get {
                    return this.columnCNPJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoFreteColumn {
                get {
                    return this.columnTipoFrete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValorFreteColumn {
                get {
                    return this.columnValorFrete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodVendedorColumn {
                get {
                    return this.columnCodVendedor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodTransportadoraColumn {
                get {
                    return this.columnCodTransportadora;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NrPedidoColumn {
                get {
                    return this.columnNrPedido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValorNotaColumn {
                get {
                    return this.columnValorNota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NOTAFISCALRow this[int index] {
                get {
                    return ((NOTAFISCALRow)(this.Rows[index]));
                }
            }
            
            public event NOTAFISCALRowChangeEventHandler NOTAFISCALRowChanging;
            
            public event NOTAFISCALRowChangeEventHandler NOTAFISCALRowChanged;
            
            public event NOTAFISCALRowChangeEventHandler NOTAFISCALRowDeleting;
            
            public event NOTAFISCALRowChangeEventHandler NOTAFISCALRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddNOTAFISCALRow(NOTAFISCALRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NOTAFISCALRow AddNOTAFISCALRow(
                        int NrNotaFiscal, 
                        string RazaoSocial, 
                        string Serie, 
                        System.DateTime DataEmissao, 
                        string IE, 
                        string Telefone, 
                        string Endereco, 
                        string Bairro, 
                        string Municipio, 
                        double Icms, 
                        string Tipo, 
                        string CNPJ, 
                        string TipoFrete, 
                        double ValorFrete, 
                        string CodVendedor, 
                        string CodTransportadora, 
                        int NrPedido, 
                        double ValorNota) {
                NOTAFISCALRow rowNOTAFISCALRow = ((NOTAFISCALRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NrNotaFiscal,
                        RazaoSocial,
                        Serie,
                        DataEmissao,
                        IE,
                        Telefone,
                        Endereco,
                        Bairro,
                        Municipio,
                        Icms,
                        Tipo,
                        CNPJ,
                        TipoFrete,
                        ValorFrete,
                        CodVendedor,
                        CodTransportadora,
                        NrPedido,
                        ValorNota};
                rowNOTAFISCALRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNOTAFISCALRow);
                return rowNOTAFISCALRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NOTAFISCALRow FindByNrNotaFiscal(int NrNotaFiscal) {
                return ((NOTAFISCALRow)(this.Rows.Find(new object[] {
                            NrNotaFiscal})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                NOTAFISCALDataTable cln = ((NOTAFISCALDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NOTAFISCALDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNrNotaFiscal = base.Columns["NrNotaFiscal"];
                this.columnRazaoSocial = base.Columns["RazaoSocial"];
                this.columnSerie = base.Columns["Serie"];
                this.columnDataEmissao = base.Columns["DataEmissao"];
                this.columnIE = base.Columns["IE"];
                this.columnTelefone = base.Columns["Telefone"];
                this.columnEndereco = base.Columns["Endereco"];
                this.columnBairro = base.Columns["Bairro"];
                this.columnMunicipio = base.Columns["Municipio"];
                this.columnIcms = base.Columns["Icms"];
                this.columnTipo = base.Columns["Tipo"];
                this.columnCNPJ = base.Columns["CNPJ"];
                this.columnTipoFrete = base.Columns["TipoFrete"];
                this.columnValorFrete = base.Columns["ValorFrete"];
                this.columnCodVendedor = base.Columns["CodVendedor"];
                this.columnCodTransportadora = base.Columns["CodTransportadora"];
                this.columnNrPedido = base.Columns["NrPedido"];
                this.columnValorNota = base.Columns["ValorNota"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNrNotaFiscal = new global::System.Data.DataColumn("NrNotaFiscal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNrNotaFiscal);
                this.columnRazaoSocial = new global::System.Data.DataColumn("RazaoSocial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRazaoSocial);
                this.columnSerie = new global::System.Data.DataColumn("Serie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerie);
                this.columnDataEmissao = new global::System.Data.DataColumn("DataEmissao", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataEmissao);
                this.columnIE = new global::System.Data.DataColumn("IE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIE);
                this.columnTelefone = new global::System.Data.DataColumn("Telefone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelefone);
                this.columnEndereco = new global::System.Data.DataColumn("Endereco", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndereco);
                this.columnBairro = new global::System.Data.DataColumn("Bairro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBairro);
                this.columnMunicipio = new global::System.Data.DataColumn("Municipio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMunicipio);
                this.columnIcms = new global::System.Data.DataColumn("Icms", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIcms);
                this.columnTipo = new global::System.Data.DataColumn("Tipo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipo);
                this.columnCNPJ = new global::System.Data.DataColumn("CNPJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNPJ);
                this.columnTipoFrete = new global::System.Data.DataColumn("TipoFrete", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoFrete);
                this.columnValorFrete = new global::System.Data.DataColumn("ValorFrete", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValorFrete);
                this.columnCodVendedor = new global::System.Data.DataColumn("CodVendedor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodVendedor);
                this.columnCodTransportadora = new global::System.Data.DataColumn("CodTransportadora", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodTransportadora);
                this.columnNrPedido = new global::System.Data.DataColumn("NrPedido", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNrPedido);
                this.columnValorNota = new global::System.Data.DataColumn("ValorNota", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValorNota);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNrNotaFiscal}, true));
                this.columnNrNotaFiscal.AllowDBNull = false;
                this.columnNrNotaFiscal.Unique = true;
                this.columnRazaoSocial.MaxLength = 100;
                this.columnSerie.MaxLength = 2;
                this.columnIE.MaxLength = 20;
                this.columnTelefone.MaxLength = 20;
                this.columnEndereco.MaxLength = 100;
                this.columnBairro.MaxLength = 100;
                this.columnMunicipio.MaxLength = 100;
                this.columnTipo.MaxLength = 1;
                this.columnCNPJ.MaxLength = 14;
                this.columnTipoFrete.MaxLength = 100;
                this.columnCodVendedor.MaxLength = 11;
                this.columnCodTransportadora.MaxLength = 14;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NOTAFISCALRow NewNOTAFISCALRow() {
                return ((NOTAFISCALRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NOTAFISCALRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(NOTAFISCALRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NOTAFISCALRowChanged != null)) {
                    this.NOTAFISCALRowChanged(this, new NOTAFISCALRowChangeEvent(((NOTAFISCALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NOTAFISCALRowChanging != null)) {
                    this.NOTAFISCALRowChanging(this, new NOTAFISCALRowChangeEvent(((NOTAFISCALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NOTAFISCALRowDeleted != null)) {
                    this.NOTAFISCALRowDeleted(this, new NOTAFISCALRowChangeEvent(((NOTAFISCALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NOTAFISCALRowDeleting != null)) {
                    this.NOTAFISCALRowDeleting(this, new NOTAFISCALRowChangeEvent(((NOTAFISCALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveNOTAFISCALRow(NOTAFISCALRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NOTAFISCALDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ItemNotaFiscalDataTable : global::System.Data.TypedTableBase<ItemNotaFiscalRow> {
            
            private global::System.Data.DataColumn columnDescricao;
            
            private global::System.Data.DataColumn columnQuantidade;
            
            private global::System.Data.DataColumn columnDesconto;
            
            private global::System.Data.DataColumn columnValor;
            
            private global::System.Data.DataColumn columnIPI;
            
            private global::System.Data.DataColumn columnCodProduto;
            
            private global::System.Data.DataColumn columnCodUnidadeMedida;
            
            private global::System.Data.DataColumn columnNrNotaFiscal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemNotaFiscalDataTable() {
                this.TableName = "ItemNotaFiscal";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemNotaFiscalDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ItemNotaFiscalDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescricaoColumn {
                get {
                    return this.columnDescricao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantidadeColumn {
                get {
                    return this.columnQuantidade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescontoColumn {
                get {
                    return this.columnDesconto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValorColumn {
                get {
                    return this.columnValor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IPIColumn {
                get {
                    return this.columnIPI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodProdutoColumn {
                get {
                    return this.columnCodProduto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodUnidadeMedidaColumn {
                get {
                    return this.columnCodUnidadeMedida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NrNotaFiscalColumn {
                get {
                    return this.columnNrNotaFiscal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemNotaFiscalRow this[int index] {
                get {
                    return ((ItemNotaFiscalRow)(this.Rows[index]));
                }
            }
            
            public event ItemNotaFiscalRowChangeEventHandler ItemNotaFiscalRowChanging;
            
            public event ItemNotaFiscalRowChangeEventHandler ItemNotaFiscalRowChanged;
            
            public event ItemNotaFiscalRowChangeEventHandler ItemNotaFiscalRowDeleting;
            
            public event ItemNotaFiscalRowChangeEventHandler ItemNotaFiscalRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddItemNotaFiscalRow(ItemNotaFiscalRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemNotaFiscalRow AddItemNotaFiscalRow(string Descricao, int Quantidade, double Desconto, double Valor, double IPI, int CodProduto, string CodUnidadeMedida, NOTAFISCALRow parentNOTAFISCALRowByFK_ItemNotaFiscal_NOTA_FISCAL) {
                ItemNotaFiscalRow rowItemNotaFiscalRow = ((ItemNotaFiscalRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Descricao,
                        Quantidade,
                        Desconto,
                        Valor,
                        IPI,
                        CodProduto,
                        CodUnidadeMedida,
                        null};
                if ((parentNOTAFISCALRowByFK_ItemNotaFiscal_NOTA_FISCAL != null)) {
                    columnValuesArray[7] = parentNOTAFISCALRowByFK_ItemNotaFiscal_NOTA_FISCAL[0];
                }
                rowItemNotaFiscalRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowItemNotaFiscalRow);
                return rowItemNotaFiscalRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemNotaFiscalRow FindByCodProdutoNrNotaFiscal(int CodProduto, int NrNotaFiscal) {
                return ((ItemNotaFiscalRow)(this.Rows.Find(new object[] {
                            CodProduto,
                            NrNotaFiscal})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ItemNotaFiscalDataTable cln = ((ItemNotaFiscalDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ItemNotaFiscalDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDescricao = base.Columns["Descricao"];
                this.columnQuantidade = base.Columns["Quantidade"];
                this.columnDesconto = base.Columns["Desconto"];
                this.columnValor = base.Columns["Valor"];
                this.columnIPI = base.Columns["IPI"];
                this.columnCodProduto = base.Columns["CodProduto"];
                this.columnCodUnidadeMedida = base.Columns["CodUnidadeMedida"];
                this.columnNrNotaFiscal = base.Columns["NrNotaFiscal"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDescricao = new global::System.Data.DataColumn("Descricao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescricao);
                this.columnQuantidade = new global::System.Data.DataColumn("Quantidade", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantidade);
                this.columnDesconto = new global::System.Data.DataColumn("Desconto", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesconto);
                this.columnValor = new global::System.Data.DataColumn("Valor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValor);
                this.columnIPI = new global::System.Data.DataColumn("IPI", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIPI);
                this.columnCodProduto = new global::System.Data.DataColumn("CodProduto", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodProduto);
                this.columnCodUnidadeMedida = new global::System.Data.DataColumn("CodUnidadeMedida", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodUnidadeMedida);
                this.columnNrNotaFiscal = new global::System.Data.DataColumn("NrNotaFiscal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNrNotaFiscal);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCodProduto,
                                this.columnNrNotaFiscal}, true));
                this.columnDescricao.MaxLength = 100;
                this.columnCodProduto.AllowDBNull = false;
                this.columnCodUnidadeMedida.MaxLength = 3;
                this.columnNrNotaFiscal.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemNotaFiscalRow NewItemNotaFiscalRow() {
                return ((ItemNotaFiscalRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ItemNotaFiscalRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ItemNotaFiscalRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ItemNotaFiscalRowChanged != null)) {
                    this.ItemNotaFiscalRowChanged(this, new ItemNotaFiscalRowChangeEvent(((ItemNotaFiscalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ItemNotaFiscalRowChanging != null)) {
                    this.ItemNotaFiscalRowChanging(this, new ItemNotaFiscalRowChangeEvent(((ItemNotaFiscalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ItemNotaFiscalRowDeleted != null)) {
                    this.ItemNotaFiscalRowDeleted(this, new ItemNotaFiscalRowChangeEvent(((ItemNotaFiscalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ItemNotaFiscalRowDeleting != null)) {
                    this.ItemNotaFiscalRowDeleting(this, new ItemNotaFiscalRowChangeEvent(((ItemNotaFiscalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveItemNotaFiscalRow(ItemNotaFiscalRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ItemNotaFiscalDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RelPedidoDataTable : global::System.Data.TypedTableBase<RelPedidoRow> {
            
            private global::System.Data.DataColumn columnNRPEDIDO;
            
            private global::System.Data.DataColumn columnTIPO;
            
            private global::System.Data.DataColumn columnSITUACAO;
            
            private global::System.Data.DataColumn columnRAZAOSOCIAL;
            
            private global::System.Data.DataColumn columnDATAEMISSAO;
            
            private global::System.Data.DataColumn columnDATAENTREGA;
            
            private global::System.Data.DataColumn columnCODPRODUTO;
            
            private global::System.Data.DataColumn columnDESCRICAO;
            
            private global::System.Data.DataColumn columnQUANTIDADE;
            
            private global::System.Data.DataColumn columnVALOR;
            
            private global::System.Data.DataColumn columnValorTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelPedidoDataTable() {
                this.TableName = "RelPedido";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RelPedidoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RelPedidoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NRPEDIDOColumn {
                get {
                    return this.columnNRPEDIDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIPOColumn {
                get {
                    return this.columnTIPO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SITUACAOColumn {
                get {
                    return this.columnSITUACAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAZAOSOCIALColumn {
                get {
                    return this.columnRAZAOSOCIAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATAEMISSAOColumn {
                get {
                    return this.columnDATAEMISSAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATAENTREGAColumn {
                get {
                    return this.columnDATAENTREGA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODPRODUTOColumn {
                get {
                    return this.columnCODPRODUTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRICAOColumn {
                get {
                    return this.columnDESCRICAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QUANTIDADEColumn {
                get {
                    return this.columnQUANTIDADE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VALORColumn {
                get {
                    return this.columnVALOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValorTotalColumn {
                get {
                    return this.columnValorTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelPedidoRow this[int index] {
                get {
                    return ((RelPedidoRow)(this.Rows[index]));
                }
            }
            
            public event RelPedidoRowChangeEventHandler RelPedidoRowChanging;
            
            public event RelPedidoRowChangeEventHandler RelPedidoRowChanged;
            
            public event RelPedidoRowChangeEventHandler RelPedidoRowDeleting;
            
            public event RelPedidoRowChangeEventHandler RelPedidoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRelPedidoRow(RelPedidoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelPedidoRow AddRelPedidoRow(string NRPEDIDO, string TIPO, string SITUACAO, string RAZAOSOCIAL, System.DateTime DATAEMISSAO, System.DateTime DATAENTREGA, string CODPRODUTO, string DESCRICAO, string QUANTIDADE, double VALOR, double ValorTotal) {
                RelPedidoRow rowRelPedidoRow = ((RelPedidoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NRPEDIDO,
                        TIPO,
                        SITUACAO,
                        RAZAOSOCIAL,
                        DATAEMISSAO,
                        DATAENTREGA,
                        CODPRODUTO,
                        DESCRICAO,
                        QUANTIDADE,
                        VALOR,
                        ValorTotal};
                rowRelPedidoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRelPedidoRow);
                return rowRelPedidoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RelPedidoDataTable cln = ((RelPedidoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RelPedidoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNRPEDIDO = base.Columns["NRPEDIDO"];
                this.columnTIPO = base.Columns["TIPO"];
                this.columnSITUACAO = base.Columns["SITUACAO"];
                this.columnRAZAOSOCIAL = base.Columns["RAZAOSOCIAL"];
                this.columnDATAEMISSAO = base.Columns["DATAEMISSAO"];
                this.columnDATAENTREGA = base.Columns["DATAENTREGA"];
                this.columnCODPRODUTO = base.Columns["CODPRODUTO"];
                this.columnDESCRICAO = base.Columns["DESCRICAO"];
                this.columnQUANTIDADE = base.Columns["QUANTIDADE"];
                this.columnVALOR = base.Columns["VALOR"];
                this.columnValorTotal = base.Columns["ValorTotal"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNRPEDIDO = new global::System.Data.DataColumn("NRPEDIDO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNRPEDIDO);
                this.columnTIPO = new global::System.Data.DataColumn("TIPO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO);
                this.columnSITUACAO = new global::System.Data.DataColumn("SITUACAO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSITUACAO);
                this.columnRAZAOSOCIAL = new global::System.Data.DataColumn("RAZAOSOCIAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAZAOSOCIAL);
                this.columnDATAEMISSAO = new global::System.Data.DataColumn("DATAEMISSAO", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATAEMISSAO);
                this.columnDATAENTREGA = new global::System.Data.DataColumn("DATAENTREGA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATAENTREGA);
                this.columnCODPRODUTO = new global::System.Data.DataColumn("CODPRODUTO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODPRODUTO);
                this.columnDESCRICAO = new global::System.Data.DataColumn("DESCRICAO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRICAO);
                this.columnQUANTIDADE = new global::System.Data.DataColumn("QUANTIDADE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANTIDADE);
                this.columnVALOR = new global::System.Data.DataColumn("VALOR", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALOR);
                this.columnValorTotal = new global::System.Data.DataColumn("ValorTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValorTotal);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelPedidoRow NewRelPedidoRow() {
                return ((RelPedidoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RelPedidoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RelPedidoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RelPedidoRowChanged != null)) {
                    this.RelPedidoRowChanged(this, new RelPedidoRowChangeEvent(((RelPedidoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RelPedidoRowChanging != null)) {
                    this.RelPedidoRowChanging(this, new RelPedidoRowChangeEvent(((RelPedidoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RelPedidoRowDeleted != null)) {
                    this.RelPedidoRowDeleted(this, new RelPedidoRowChangeEvent(((RelPedidoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RelPedidoRowDeleting != null)) {
                    this.RelPedidoRowDeleting(this, new RelPedidoRowChangeEvent(((RelPedidoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRelPedidoRow(RelPedidoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RelPedidoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RelVendedorDataTable : global::System.Data.TypedTableBase<RelVendedorRow> {
            
            private global::System.Data.DataColumn columnCPF;
            
            private global::System.Data.DataColumn columnNome;
            
            private global::System.Data.DataColumn columnNrPedido;
            
            private global::System.Data.DataColumn columndtEmissao;
            
            private global::System.Data.DataColumn columnComissao;
            
            private global::System.Data.DataColumn columnValorPedido;
            
            private global::System.Data.DataColumn columnValorComissao;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelVendedorDataTable() {
                this.TableName = "RelVendedor";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RelVendedorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RelVendedorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CPFColumn {
                get {
                    return this.columnCPF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NomeColumn {
                get {
                    return this.columnNome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NrPedidoColumn {
                get {
                    return this.columnNrPedido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dtEmissaoColumn {
                get {
                    return this.columndtEmissao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComissaoColumn {
                get {
                    return this.columnComissao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValorPedidoColumn {
                get {
                    return this.columnValorPedido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValorComissaoColumn {
                get {
                    return this.columnValorComissao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelVendedorRow this[int index] {
                get {
                    return ((RelVendedorRow)(this.Rows[index]));
                }
            }
            
            public event RelVendedorRowChangeEventHandler RelVendedorRowChanging;
            
            public event RelVendedorRowChangeEventHandler RelVendedorRowChanged;
            
            public event RelVendedorRowChangeEventHandler RelVendedorRowDeleting;
            
            public event RelVendedorRowChangeEventHandler RelVendedorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRelVendedorRow(RelVendedorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelVendedorRow AddRelVendedorRow(string CPF, string Nome, string NrPedido, System.DateTime dtEmissao, double Comissao, double ValorPedido, double ValorComissao) {
                RelVendedorRow rowRelVendedorRow = ((RelVendedorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CPF,
                        Nome,
                        NrPedido,
                        dtEmissao,
                        Comissao,
                        ValorPedido,
                        ValorComissao};
                rowRelVendedorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRelVendedorRow);
                return rowRelVendedorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RelVendedorDataTable cln = ((RelVendedorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RelVendedorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCPF = base.Columns["CPF"];
                this.columnNome = base.Columns["Nome"];
                this.columnNrPedido = base.Columns["NrPedido"];
                this.columndtEmissao = base.Columns["dtEmissao"];
                this.columnComissao = base.Columns["Comissao"];
                this.columnValorPedido = base.Columns["ValorPedido"];
                this.columnValorComissao = base.Columns["ValorComissao"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCPF = new global::System.Data.DataColumn("CPF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPF);
                this.columnNome = new global::System.Data.DataColumn("Nome", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNome);
                this.columnNrPedido = new global::System.Data.DataColumn("NrPedido", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNrPedido);
                this.columndtEmissao = new global::System.Data.DataColumn("dtEmissao", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndtEmissao);
                this.columnComissao = new global::System.Data.DataColumn("Comissao", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComissao);
                this.columnValorPedido = new global::System.Data.DataColumn("ValorPedido", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValorPedido);
                this.columnValorComissao = new global::System.Data.DataColumn("ValorComissao", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValorComissao);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelVendedorRow NewRelVendedorRow() {
                return ((RelVendedorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RelVendedorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RelVendedorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RelVendedorRowChanged != null)) {
                    this.RelVendedorRowChanged(this, new RelVendedorRowChangeEvent(((RelVendedorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RelVendedorRowChanging != null)) {
                    this.RelVendedorRowChanging(this, new RelVendedorRowChangeEvent(((RelVendedorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RelVendedorRowDeleted != null)) {
                    this.RelVendedorRowDeleted(this, new RelVendedorRowChangeEvent(((RelVendedorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RelVendedorRowDeleting != null)) {
                    this.RelVendedorRowDeleting(this, new RelVendedorRowChangeEvent(((RelVendedorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRelVendedorRow(RelVendedorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RelVendedorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RelEstoqueDataTable : global::System.Data.TypedTableBase<RelEstoqueRow> {
            
            private global::System.Data.DataColumn columnCODPRODUTO;
            
            private global::System.Data.DataColumn columnDESCRICAO;
            
            private global::System.Data.DataColumn columnDATACADASTRO;
            
            private global::System.Data.DataColumn columnPRECOCUSTO;
            
            private global::System.Data.DataColumn columnCODGRUPOPRODUTO;
            
            private global::System.Data.DataColumn columnGRPDESC;
            
            private global::System.Data.DataColumn columnESTOQUEATUAL;
            
            private global::System.Data.DataColumn columnESTOQUEMIN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelEstoqueDataTable() {
                this.TableName = "RelEstoque";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RelEstoqueDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RelEstoqueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODPRODUTOColumn {
                get {
                    return this.columnCODPRODUTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRICAOColumn {
                get {
                    return this.columnDESCRICAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATACADASTROColumn {
                get {
                    return this.columnDATACADASTRO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRECOCUSTOColumn {
                get {
                    return this.columnPRECOCUSTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODGRUPOPRODUTOColumn {
                get {
                    return this.columnCODGRUPOPRODUTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GRPDESCColumn {
                get {
                    return this.columnGRPDESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ESTOQUEATUALColumn {
                get {
                    return this.columnESTOQUEATUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ESTOQUEMINColumn {
                get {
                    return this.columnESTOQUEMIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelEstoqueRow this[int index] {
                get {
                    return ((RelEstoqueRow)(this.Rows[index]));
                }
            }
            
            public event RelEstoqueRowChangeEventHandler RelEstoqueRowChanging;
            
            public event RelEstoqueRowChangeEventHandler RelEstoqueRowChanged;
            
            public event RelEstoqueRowChangeEventHandler RelEstoqueRowDeleting;
            
            public event RelEstoqueRowChangeEventHandler RelEstoqueRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRelEstoqueRow(RelEstoqueRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelEstoqueRow AddRelEstoqueRow(int CODPRODUTO, string DESCRICAO, System.DateTime DATACADASTRO, double PRECOCUSTO, int CODGRUPOPRODUTO, string GRPDESC, int ESTOQUEATUAL, int ESTOQUEMIN) {
                RelEstoqueRow rowRelEstoqueRow = ((RelEstoqueRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CODPRODUTO,
                        DESCRICAO,
                        DATACADASTRO,
                        PRECOCUSTO,
                        CODGRUPOPRODUTO,
                        GRPDESC,
                        ESTOQUEATUAL,
                        ESTOQUEMIN};
                rowRelEstoqueRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRelEstoqueRow);
                return rowRelEstoqueRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RelEstoqueDataTable cln = ((RelEstoqueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RelEstoqueDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCODPRODUTO = base.Columns["CODPRODUTO"];
                this.columnDESCRICAO = base.Columns["DESCRICAO"];
                this.columnDATACADASTRO = base.Columns["DATACADASTRO"];
                this.columnPRECOCUSTO = base.Columns["PRECOCUSTO"];
                this.columnCODGRUPOPRODUTO = base.Columns["CODGRUPOPRODUTO"];
                this.columnGRPDESC = base.Columns["GRPDESC"];
                this.columnESTOQUEATUAL = base.Columns["ESTOQUEATUAL"];
                this.columnESTOQUEMIN = base.Columns["ESTOQUEMIN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCODPRODUTO = new global::System.Data.DataColumn("CODPRODUTO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODPRODUTO);
                this.columnDESCRICAO = new global::System.Data.DataColumn("DESCRICAO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRICAO);
                this.columnDATACADASTRO = new global::System.Data.DataColumn("DATACADASTRO", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATACADASTRO);
                this.columnPRECOCUSTO = new global::System.Data.DataColumn("PRECOCUSTO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRECOCUSTO);
                this.columnCODGRUPOPRODUTO = new global::System.Data.DataColumn("CODGRUPOPRODUTO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODGRUPOPRODUTO);
                this.columnGRPDESC = new global::System.Data.DataColumn("GRPDESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRPDESC);
                this.columnESTOQUEATUAL = new global::System.Data.DataColumn("ESTOQUEATUAL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTOQUEATUAL);
                this.columnESTOQUEMIN = new global::System.Data.DataColumn("ESTOQUEMIN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTOQUEMIN);
                this.columnCODPRODUTO.Caption = "CodProduto";
                this.columnDESCRICAO.Caption = "DescricaoProd";
                this.columnDATACADASTRO.Caption = "DataCadastro";
                this.columnPRECOCUSTO.Caption = "PrecoCusto";
                this.columnCODGRUPOPRODUTO.Caption = "CodGrpProduto";
                this.columnGRPDESC.Caption = "GrpDescricao";
                this.columnESTOQUEATUAL.Caption = "EstoqueAtual";
                this.columnESTOQUEMIN.Caption = "EstoqueMin";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelEstoqueRow NewRelEstoqueRow() {
                return ((RelEstoqueRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RelEstoqueRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RelEstoqueRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RelEstoqueRowChanged != null)) {
                    this.RelEstoqueRowChanged(this, new RelEstoqueRowChangeEvent(((RelEstoqueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RelEstoqueRowChanging != null)) {
                    this.RelEstoqueRowChanging(this, new RelEstoqueRowChangeEvent(((RelEstoqueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RelEstoqueRowDeleted != null)) {
                    this.RelEstoqueRowDeleted(this, new RelEstoqueRowChangeEvent(((RelEstoqueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RelEstoqueRowDeleting != null)) {
                    this.RelEstoqueRowDeleting(this, new RelEstoqueRowChangeEvent(((RelEstoqueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRelEstoqueRow(RelEstoqueRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RelEstoqueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RelProdutoDataTable : global::System.Data.TypedTableBase<RelProdutoRow> {
            
            private global::System.Data.DataColumn columnGRUPO;
            
            private global::System.Data.DataColumn columnPRODUTO;
            
            private global::System.Data.DataColumn columnDATACADASTRO;
            
            private global::System.Data.DataColumn columnPRECOCUSTO;
            
            private global::System.Data.DataColumn columnPRECOVENDA;
            
            private global::System.Data.DataColumn columnESTOQUEATUAL;
            
            private global::System.Data.DataColumn columnESTOQUEMIN;
            
            private global::System.Data.DataColumn columnIPI;
            
            private global::System.Data.DataColumn columnDESCONTO;
            
            private global::System.Data.DataColumn columnCODPROD;
            
            private global::System.Data.DataColumn columnCODGRUPO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelProdutoDataTable() {
                this.TableName = "RelProduto";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RelProdutoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RelProdutoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GRUPOColumn {
                get {
                    return this.columnGRUPO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUTOColumn {
                get {
                    return this.columnPRODUTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATACADASTROColumn {
                get {
                    return this.columnDATACADASTRO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRECOCUSTOColumn {
                get {
                    return this.columnPRECOCUSTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRECOVENDAColumn {
                get {
                    return this.columnPRECOVENDA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ESTOQUEATUALColumn {
                get {
                    return this.columnESTOQUEATUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ESTOQUEMINColumn {
                get {
                    return this.columnESTOQUEMIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IPIColumn {
                get {
                    return this.columnIPI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCONTOColumn {
                get {
                    return this.columnDESCONTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODPRODColumn {
                get {
                    return this.columnCODPROD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODGRUPOColumn {
                get {
                    return this.columnCODGRUPO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelProdutoRow this[int index] {
                get {
                    return ((RelProdutoRow)(this.Rows[index]));
                }
            }
            
            public event RelProdutoRowChangeEventHandler RelProdutoRowChanging;
            
            public event RelProdutoRowChangeEventHandler RelProdutoRowChanged;
            
            public event RelProdutoRowChangeEventHandler RelProdutoRowDeleting;
            
            public event RelProdutoRowChangeEventHandler RelProdutoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRelProdutoRow(RelProdutoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelProdutoRow AddRelProdutoRow(string GRUPO, string PRODUTO, System.DateTime DATACADASTRO, double PRECOCUSTO, double PRECOVENDA, string ESTOQUEATUAL, string ESTOQUEMIN, double IPI, double DESCONTO, string CODPROD, string CODGRUPO) {
                RelProdutoRow rowRelProdutoRow = ((RelProdutoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GRUPO,
                        PRODUTO,
                        DATACADASTRO,
                        PRECOCUSTO,
                        PRECOVENDA,
                        ESTOQUEATUAL,
                        ESTOQUEMIN,
                        IPI,
                        DESCONTO,
                        CODPROD,
                        CODGRUPO};
                rowRelProdutoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRelProdutoRow);
                return rowRelProdutoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RelProdutoDataTable cln = ((RelProdutoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RelProdutoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGRUPO = base.Columns["GRUPO"];
                this.columnPRODUTO = base.Columns["PRODUTO"];
                this.columnDATACADASTRO = base.Columns["DATACADASTRO"];
                this.columnPRECOCUSTO = base.Columns["PRECOCUSTO"];
                this.columnPRECOVENDA = base.Columns["PRECOVENDA"];
                this.columnESTOQUEATUAL = base.Columns["ESTOQUEATUAL"];
                this.columnESTOQUEMIN = base.Columns["ESTOQUEMIN"];
                this.columnIPI = base.Columns["IPI"];
                this.columnDESCONTO = base.Columns["DESCONTO"];
                this.columnCODPROD = base.Columns["CODPROD"];
                this.columnCODGRUPO = base.Columns["CODGRUPO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGRUPO = new global::System.Data.DataColumn("GRUPO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRUPO);
                this.columnPRODUTO = new global::System.Data.DataColumn("PRODUTO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUTO);
                this.columnDATACADASTRO = new global::System.Data.DataColumn("DATACADASTRO", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATACADASTRO);
                this.columnPRECOCUSTO = new global::System.Data.DataColumn("PRECOCUSTO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRECOCUSTO);
                this.columnPRECOVENDA = new global::System.Data.DataColumn("PRECOVENDA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRECOVENDA);
                this.columnESTOQUEATUAL = new global::System.Data.DataColumn("ESTOQUEATUAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTOQUEATUAL);
                this.columnESTOQUEMIN = new global::System.Data.DataColumn("ESTOQUEMIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTOQUEMIN);
                this.columnIPI = new global::System.Data.DataColumn("IPI", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIPI);
                this.columnDESCONTO = new global::System.Data.DataColumn("DESCONTO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCONTO);
                this.columnCODPROD = new global::System.Data.DataColumn("CODPROD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODPROD);
                this.columnCODGRUPO = new global::System.Data.DataColumn("CODGRUPO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODGRUPO);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelProdutoRow NewRelProdutoRow() {
                return ((RelProdutoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RelProdutoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RelProdutoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RelProdutoRowChanged != null)) {
                    this.RelProdutoRowChanged(this, new RelProdutoRowChangeEvent(((RelProdutoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RelProdutoRowChanging != null)) {
                    this.RelProdutoRowChanging(this, new RelProdutoRowChangeEvent(((RelProdutoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RelProdutoRowDeleted != null)) {
                    this.RelProdutoRowDeleted(this, new RelProdutoRowChangeEvent(((RelProdutoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RelProdutoRowDeleting != null)) {
                    this.RelProdutoRowDeleting(this, new RelProdutoRowChangeEvent(((RelProdutoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRelProdutoRow(RelProdutoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RelProdutoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RelNotaFiscalDataTable : global::System.Data.TypedTableBase<RelNotaFiscalRow> {
            
            private global::System.Data.DataColumn columnNrNotaFiscal;
            
            private global::System.Data.DataColumn columnRazaoSocial;
            
            private global::System.Data.DataColumn columnSerie;
            
            private global::System.Data.DataColumn columnDataEmissao;
            
            private global::System.Data.DataColumn columnIE;
            
            private global::System.Data.DataColumn columnTelefone;
            
            private global::System.Data.DataColumn columnEndereco;
            
            private global::System.Data.DataColumn columnBairro;
            
            private global::System.Data.DataColumn columnMunicipio;
            
            private global::System.Data.DataColumn columnICMS;
            
            private global::System.Data.DataColumn columnTipo;
            
            private global::System.Data.DataColumn columnCNPJ;
            
            private global::System.Data.DataColumn columnTipoFrete;
            
            private global::System.Data.DataColumn columnValorFrete;
            
            private global::System.Data.DataColumn columnCodVendedor;
            
            private global::System.Data.DataColumn columnCodTransportadora;
            
            private global::System.Data.DataColumn columnDescricaoTransp;
            
            private global::System.Data.DataColumn columnUfTrans;
            
            private global::System.Data.DataColumn columnCnpjTrans;
            
            private global::System.Data.DataColumn columnEnderecoTrans;
            
            private global::System.Data.DataColumn columnMunicipioTrans;
            
            private global::System.Data.DataColumn columnIeTrans;
            
            private global::System.Data.DataColumn columnNrPedido;
            
            private global::System.Data.DataColumn columnDescricao;
            
            private global::System.Data.DataColumn columnQuantidade;
            
            private global::System.Data.DataColumn columnDesconto;
            
            private global::System.Data.DataColumn columnValor;
            
            private global::System.Data.DataColumn columnIPI;
            
            private global::System.Data.DataColumn columnCodProduto;
            
            private global::System.Data.DataColumn columnCodIUnidadeMedida;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelNotaFiscalDataTable() {
                this.TableName = "RelNotaFiscal";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RelNotaFiscalDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RelNotaFiscalDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NrNotaFiscalColumn {
                get {
                    return this.columnNrNotaFiscal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RazaoSocialColumn {
                get {
                    return this.columnRazaoSocial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SerieColumn {
                get {
                    return this.columnSerie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataEmissaoColumn {
                get {
                    return this.columnDataEmissao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IEColumn {
                get {
                    return this.columnIE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelefoneColumn {
                get {
                    return this.columnTelefone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnderecoColumn {
                get {
                    return this.columnEndereco;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BairroColumn {
                get {
                    return this.columnBairro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MunicipioColumn {
                get {
                    return this.columnMunicipio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ICMSColumn {
                get {
                    return this.columnICMS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoColumn {
                get {
                    return this.columnTipo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CNPJColumn {
                get {
                    return this.columnCNPJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoFreteColumn {
                get {
                    return this.columnTipoFrete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValorFreteColumn {
                get {
                    return this.columnValorFrete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodVendedorColumn {
                get {
                    return this.columnCodVendedor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodTransportadoraColumn {
                get {
                    return this.columnCodTransportadora;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescricaoTranspColumn {
                get {
                    return this.columnDescricaoTransp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UfTransColumn {
                get {
                    return this.columnUfTrans;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CnpjTransColumn {
                get {
                    return this.columnCnpjTrans;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnderecoTransColumn {
                get {
                    return this.columnEnderecoTrans;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MunicipioTransColumn {
                get {
                    return this.columnMunicipioTrans;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IeTransColumn {
                get {
                    return this.columnIeTrans;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NrPedidoColumn {
                get {
                    return this.columnNrPedido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescricaoColumn {
                get {
                    return this.columnDescricao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantidadeColumn {
                get {
                    return this.columnQuantidade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescontoColumn {
                get {
                    return this.columnDesconto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValorColumn {
                get {
                    return this.columnValor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IPIColumn {
                get {
                    return this.columnIPI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodProdutoColumn {
                get {
                    return this.columnCodProduto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodIUnidadeMedidaColumn {
                get {
                    return this.columnCodIUnidadeMedida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelNotaFiscalRow this[int index] {
                get {
                    return ((RelNotaFiscalRow)(this.Rows[index]));
                }
            }
            
            public event RelNotaFiscalRowChangeEventHandler RelNotaFiscalRowChanging;
            
            public event RelNotaFiscalRowChangeEventHandler RelNotaFiscalRowChanged;
            
            public event RelNotaFiscalRowChangeEventHandler RelNotaFiscalRowDeleting;
            
            public event RelNotaFiscalRowChangeEventHandler RelNotaFiscalRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRelNotaFiscalRow(RelNotaFiscalRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelNotaFiscalRow AddRelNotaFiscalRow(
                        string NrNotaFiscal, 
                        string RazaoSocial, 
                        string Serie, 
                        System.DateTime DataEmissao, 
                        string IE, 
                        string Telefone, 
                        string Endereco, 
                        string Bairro, 
                        string Municipio, 
                        double ICMS, 
                        string Tipo, 
                        string CNPJ, 
                        string TipoFrete, 
                        double ValorFrete, 
                        string CodVendedor, 
                        string CodTransportadora, 
                        string DescricaoTransp, 
                        string UfTrans, 
                        string CnpjTrans, 
                        string EnderecoTrans, 
                        string MunicipioTrans, 
                        string IeTrans, 
                        int NrPedido, 
                        string Descricao, 
                        int Quantidade, 
                        double Desconto, 
                        double Valor, 
                        double IPI, 
                        int CodProduto, 
                        int CodIUnidadeMedida) {
                RelNotaFiscalRow rowRelNotaFiscalRow = ((RelNotaFiscalRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NrNotaFiscal,
                        RazaoSocial,
                        Serie,
                        DataEmissao,
                        IE,
                        Telefone,
                        Endereco,
                        Bairro,
                        Municipio,
                        ICMS,
                        Tipo,
                        CNPJ,
                        TipoFrete,
                        ValorFrete,
                        CodVendedor,
                        CodTransportadora,
                        DescricaoTransp,
                        UfTrans,
                        CnpjTrans,
                        EnderecoTrans,
                        MunicipioTrans,
                        IeTrans,
                        NrPedido,
                        Descricao,
                        Quantidade,
                        Desconto,
                        Valor,
                        IPI,
                        CodProduto,
                        CodIUnidadeMedida};
                rowRelNotaFiscalRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRelNotaFiscalRow);
                return rowRelNotaFiscalRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RelNotaFiscalDataTable cln = ((RelNotaFiscalDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RelNotaFiscalDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNrNotaFiscal = base.Columns["NrNotaFiscal"];
                this.columnRazaoSocial = base.Columns["RazaoSocial"];
                this.columnSerie = base.Columns["Serie"];
                this.columnDataEmissao = base.Columns["DataEmissao"];
                this.columnIE = base.Columns["IE"];
                this.columnTelefone = base.Columns["Telefone"];
                this.columnEndereco = base.Columns["Endereco"];
                this.columnBairro = base.Columns["Bairro"];
                this.columnMunicipio = base.Columns["Municipio"];
                this.columnICMS = base.Columns["ICMS"];
                this.columnTipo = base.Columns["Tipo"];
                this.columnCNPJ = base.Columns["CNPJ"];
                this.columnTipoFrete = base.Columns["TipoFrete"];
                this.columnValorFrete = base.Columns["ValorFrete"];
                this.columnCodVendedor = base.Columns["CodVendedor"];
                this.columnCodTransportadora = base.Columns["CodTransportadora"];
                this.columnDescricaoTransp = base.Columns["DescricaoTransp"];
                this.columnUfTrans = base.Columns["UfTrans"];
                this.columnCnpjTrans = base.Columns["CnpjTrans"];
                this.columnEnderecoTrans = base.Columns["EnderecoTrans"];
                this.columnMunicipioTrans = base.Columns["MunicipioTrans"];
                this.columnIeTrans = base.Columns["IeTrans"];
                this.columnNrPedido = base.Columns["NrPedido"];
                this.columnDescricao = base.Columns["Descricao"];
                this.columnQuantidade = base.Columns["Quantidade"];
                this.columnDesconto = base.Columns["Desconto"];
                this.columnValor = base.Columns["Valor"];
                this.columnIPI = base.Columns["IPI"];
                this.columnCodProduto = base.Columns["CodProduto"];
                this.columnCodIUnidadeMedida = base.Columns["CodIUnidadeMedida"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNrNotaFiscal = new global::System.Data.DataColumn("NrNotaFiscal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNrNotaFiscal);
                this.columnRazaoSocial = new global::System.Data.DataColumn("RazaoSocial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRazaoSocial);
                this.columnSerie = new global::System.Data.DataColumn("Serie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerie);
                this.columnDataEmissao = new global::System.Data.DataColumn("DataEmissao", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataEmissao);
                this.columnIE = new global::System.Data.DataColumn("IE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIE);
                this.columnTelefone = new global::System.Data.DataColumn("Telefone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelefone);
                this.columnEndereco = new global::System.Data.DataColumn("Endereco", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndereco);
                this.columnBairro = new global::System.Data.DataColumn("Bairro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBairro);
                this.columnMunicipio = new global::System.Data.DataColumn("Municipio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMunicipio);
                this.columnICMS = new global::System.Data.DataColumn("ICMS", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICMS);
                this.columnTipo = new global::System.Data.DataColumn("Tipo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipo);
                this.columnCNPJ = new global::System.Data.DataColumn("CNPJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNPJ);
                this.columnTipoFrete = new global::System.Data.DataColumn("TipoFrete", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoFrete);
                this.columnValorFrete = new global::System.Data.DataColumn("ValorFrete", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValorFrete);
                this.columnCodVendedor = new global::System.Data.DataColumn("CodVendedor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodVendedor);
                this.columnCodTransportadora = new global::System.Data.DataColumn("CodTransportadora", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodTransportadora);
                this.columnDescricaoTransp = new global::System.Data.DataColumn("DescricaoTransp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescricaoTransp);
                this.columnUfTrans = new global::System.Data.DataColumn("UfTrans", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUfTrans);
                this.columnCnpjTrans = new global::System.Data.DataColumn("CnpjTrans", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCnpjTrans);
                this.columnEnderecoTrans = new global::System.Data.DataColumn("EnderecoTrans", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnderecoTrans);
                this.columnMunicipioTrans = new global::System.Data.DataColumn("MunicipioTrans", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMunicipioTrans);
                this.columnIeTrans = new global::System.Data.DataColumn("IeTrans", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIeTrans);
                this.columnNrPedido = new global::System.Data.DataColumn("NrPedido", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNrPedido);
                this.columnDescricao = new global::System.Data.DataColumn("Descricao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescricao);
                this.columnQuantidade = new global::System.Data.DataColumn("Quantidade", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantidade);
                this.columnDesconto = new global::System.Data.DataColumn("Desconto", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesconto);
                this.columnValor = new global::System.Data.DataColumn("Valor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValor);
                this.columnIPI = new global::System.Data.DataColumn("IPI", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIPI);
                this.columnCodProduto = new global::System.Data.DataColumn("CodProduto", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodProduto);
                this.columnCodIUnidadeMedida = new global::System.Data.DataColumn("CodIUnidadeMedida", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodIUnidadeMedida);
                this.columnNrNotaFiscal.Caption = "NRPEDIDO";
                this.columnRazaoSocial.Caption = "TIPO";
                this.columnSerie.Caption = "SITUACAO";
                this.columnDataEmissao.Caption = "RAZAOSOCIAL";
                this.columnIE.Caption = "DATAEMISSAO";
                this.columnTelefone.Caption = "DATAENTREGA";
                this.columnEndereco.Caption = "CODPRODUTO";
                this.columnBairro.Caption = "DESCRICAO";
                this.columnMunicipio.Caption = "QUANTIDADE";
                this.columnICMS.Caption = "VALOR";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelNotaFiscalRow NewRelNotaFiscalRow() {
                return ((RelNotaFiscalRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RelNotaFiscalRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RelNotaFiscalRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RelNotaFiscalRowChanged != null)) {
                    this.RelNotaFiscalRowChanged(this, new RelNotaFiscalRowChangeEvent(((RelNotaFiscalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RelNotaFiscalRowChanging != null)) {
                    this.RelNotaFiscalRowChanging(this, new RelNotaFiscalRowChangeEvent(((RelNotaFiscalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RelNotaFiscalRowDeleted != null)) {
                    this.RelNotaFiscalRowDeleted(this, new RelNotaFiscalRowChangeEvent(((RelNotaFiscalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RelNotaFiscalRowDeleting != null)) {
                    this.RelNotaFiscalRowDeleting(this, new RelNotaFiscalRowChangeEvent(((RelNotaFiscalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRelNotaFiscalRow(RelNotaFiscalRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                COMERCIALDataSet ds = new COMERCIALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RelNotaFiscalDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ACESSORow : global::System.Data.DataRow {
            
            private ACESSODataTable tableACESSO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ACESSORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableACESSO = ((ACESSODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CODMODULO {
                get {
                    return ((int)(this[this.tableACESSO.CODMODULOColumn]));
                }
                set {
                    this[this.tableACESSO.CODMODULOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CODUSUARIO {
                get {
                    return ((int)(this[this.tableACESSO.CODUSUARIOColumn]));
                }
                set {
                    this[this.tableACESSO.CODUSUARIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MODULORow MODULORow {
                get {
                    return ((MODULORow)(this.GetParentRow(this.Table.ParentRelations["FK_ACESSO_MODULO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ACESSO_MODULO"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIORow USUARIORow {
                get {
                    return ((USUARIORow)(this.GetParentRow(this.Table.ParentRelations["FK_ACESSO_USUARIO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ACESSO_USUARIO"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CLIENTERow : global::System.Data.DataRow {
            
            private CLIENTEDataTable tableCLIENTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CLIENTERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCLIENTE = ((CLIENTEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CNPJ {
                get {
                    return ((string)(this[this.tableCLIENTE.CNPJColumn]));
                }
                set {
                    this[this.tableCLIENTE.CNPJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RAZAOSOCIAL {
                get {
                    return ((string)(this[this.tableCLIENTE.RAZAOSOCIALColumn]));
                }
                set {
                    this[this.tableCLIENTE.RAZAOSOCIALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOMEFANTASIA {
                get {
                    return ((string)(this[this.tableCLIENTE.NOMEFANTASIAColumn]));
                }
                set {
                    this[this.tableCLIENTE.NOMEFANTASIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TELEFONE {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.TELEFONEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TELEFONE\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.TELEFONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAIL\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IE {
                get {
                    return ((string)(this[this.tableCLIENTE.IEColumn]));
                }
                set {
                    this[this.tableCLIENTE.IEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ENDERECO {
                get {
                    return ((string)(this[this.tableCLIENTE.ENDERECOColumn]));
                }
                set {
                    this[this.tableCLIENTE.ENDERECOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BAIRRO {
                get {
                    return ((string)(this[this.tableCLIENTE.BAIRROColumn]));
                }
                set {
                    this[this.tableCLIENTE.BAIRROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MUNICIPIO {
                get {
                    return ((string)(this[this.tableCLIENTE.MUNICIPIOColumn]));
                }
                set {
                    this[this.tableCLIENTE.MUNICIPIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UF {
                get {
                    return ((string)(this[this.tableCLIENTE.UFColumn]));
                }
                set {
                    this[this.tableCLIENTE.UFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CEP {
                get {
                    return ((string)(this[this.tableCLIENTE.CEPColumn]));
                }
                set {
                    this[this.tableCLIENTE.CEPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CODREGIAO {
                get {
                    try {
                        return ((int)(this[this.tableCLIENTE.CODREGIAOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODREGIAO\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.CODREGIAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CODUSUARIO {
                get {
                    try {
                        return ((int)(this[this.tableCLIENTE.CODUSUARIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODUSUARIO\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.CODUSUARIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AREAATUACAO {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.AREAATUACAOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AREAATUACAO\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.AREAATUACAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LIMITECRED {
                get {
                    try {
                        return ((double)(this[this.tableCLIENTE.LIMITECREDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LIMITECRED\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.LIMITECREDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string APROVADOCRED {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.APROVADOCREDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'APROVADOCRED\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.APROVADOCREDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATIVO {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.ATIVOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ATIVO\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.ATIVOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NUM {
                get {
                    return ((string)(this[this.tableCLIENTE.NUMColumn]));
                }
                set {
                    this[this.tableCLIENTE.NUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPLEMENTO {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.COMPLEMENTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMPLEMENTO\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.COMPLEMENTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FAX {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.FAXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FAX\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.FAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGIAORow REGIAORow {
                get {
                    return ((REGIAORow)(this.GetParentRow(this.Table.ParentRelations["FK_CLIENTE_REGIAO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CLIENTE_REGIAO"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIORow USUARIORow {
                get {
                    return ((USUARIORow)(this.GetParentRow(this.Table.ParentRelations["FK_CLIENTE_USUARIO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CLIENTE_USUARIO"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTELEFONENull() {
                return this.IsNull(this.tableCLIENTE.TELEFONEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTELEFONENull() {
                this[this.tableCLIENTE.TELEFONEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAILNull() {
                return this.IsNull(this.tableCLIENTE.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAILNull() {
                this[this.tableCLIENTE.EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODREGIAONull() {
                return this.IsNull(this.tableCLIENTE.CODREGIAOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODREGIAONull() {
                this[this.tableCLIENTE.CODREGIAOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODUSUARIONull() {
                return this.IsNull(this.tableCLIENTE.CODUSUARIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODUSUARIONull() {
                this[this.tableCLIENTE.CODUSUARIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAREAATUACAONull() {
                return this.IsNull(this.tableCLIENTE.AREAATUACAOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAREAATUACAONull() {
                this[this.tableCLIENTE.AREAATUACAOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLIMITECREDNull() {
                return this.IsNull(this.tableCLIENTE.LIMITECREDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLIMITECREDNull() {
                this[this.tableCLIENTE.LIMITECREDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAPROVADOCREDNull() {
                return this.IsNull(this.tableCLIENTE.APROVADOCREDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAPROVADOCREDNull() {
                this[this.tableCLIENTE.APROVADOCREDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATIVONull() {
                return this.IsNull(this.tableCLIENTE.ATIVOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATIVONull() {
                this[this.tableCLIENTE.ATIVOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPLEMENTONull() {
                return this.IsNull(this.tableCLIENTE.COMPLEMENTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPLEMENTONull() {
                this[this.tableCLIENTE.COMPLEMENTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFAXNull() {
                return this.IsNull(this.tableCLIENTE.FAXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFAXNull() {
                this[this.tableCLIENTE.FAXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PEDIDORow[] GetPEDIDORows() {
                if ((this.Table.ChildRelations["FK_PEDIDO_CLIENTE"] == null)) {
                    return new PEDIDORow[0];
                }
                else {
                    return ((PEDIDORow[])(base.GetChildRows(this.Table.ChildRelations["FK_PEDIDO_CLIENTE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CONDICAOPAGAMENTORow : global::System.Data.DataRow {
            
            private CONDICAOPAGAMENTODataTable tableCONDICAOPAGAMENTO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CONDICAOPAGAMENTORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCONDICAOPAGAMENTO = ((CONDICAOPAGAMENTODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CODCONDICAOPAGAMENTO {
                get {
                    return ((int)(this[this.tableCONDICAOPAGAMENTO.CODCONDICAOPAGAMENTOColumn]));
                }
                set {
                    this[this.tableCONDICAOPAGAMENTO.CODCONDICAOPAGAMENTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRICAO {
                get {
                    return ((string)(this[this.tableCONDICAOPAGAMENTO.DESCRICAOColumn]));
                }
                set {
                    this[this.tableCONDICAOPAGAMENTO.DESCRICAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QTDEVEZES {
                get {
                    return ((int)(this[this.tableCONDICAOPAGAMENTO.QTDEVEZESColumn]));
                }
                set {
                    this[this.tableCONDICAOPAGAMENTO.QTDEVEZESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ENTRADA {
                get {
                    return ((string)(this[this.tableCONDICAOPAGAMENTO.ENTRADAColumn]));
                }
                set {
                    this[this.tableCONDICAOPAGAMENTO.ENTRADAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PEDIDORow[] GetPEDIDORows() {
                if ((this.Table.ChildRelations["FK_PEDIDO_PAGAMENTO"] == null)) {
                    return new PEDIDORow[0];
                }
                else {
                    return ((PEDIDORow[])(base.GetChildRows(this.Table.ChildRelations["FK_PEDIDO_PAGAMENTO"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GRUPOPRODUTORow : global::System.Data.DataRow {
            
            private GRUPOPRODUTODataTable tableGRUPOPRODUTO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GRUPOPRODUTORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGRUPOPRODUTO = ((GRUPOPRODUTODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CODGRUPOPRODUTO {
                get {
                    return ((int)(this[this.tableGRUPOPRODUTO.CODGRUPOPRODUTOColumn]));
                }
                set {
                    this[this.tableGRUPOPRODUTO.CODGRUPOPRODUTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRICAO {
                get {
                    return ((string)(this[this.tableGRUPOPRODUTO.DESCRICAOColumn]));
                }
                set {
                    this[this.tableGRUPOPRODUTO.DESCRICAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DESCONTO {
                get {
                    try {
                        return ((double)(this[this.tableGRUPOPRODUTO.DESCONTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCONTO\' in table \'GRUPOPRODUTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGRUPOPRODUTO.DESCONTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCONTONull() {
                return this.IsNull(this.tableGRUPOPRODUTO.DESCONTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCONTONull() {
                this[this.tableGRUPOPRODUTO.DESCONTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUTORow[] GetPRODUTORows() {
                if ((this.Table.ChildRelations["FK_PRODUTO_GRUPO"] == null)) {
                    return new PRODUTORow[0];
                }
                else {
                    return ((PRODUTORow[])(base.GetChildRows(this.Table.ChildRelations["FK_PRODUTO_GRUPO"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ICMSRow : global::System.Data.DataRow {
            
            private ICMSDataTable tableICMS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ICMSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableICMS = ((ICMSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UF {
                get {
                    return ((string)(this[this.tableICMS.UFColumn]));
                }
                set {
                    this[this.tableICMS.UFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ALIQUOTA {
                get {
                    return ((double)(this[this.tableICMS.ALIQUOTAColumn]));
                }
                set {
                    this[this.tableICMS.ALIQUOTAColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ITEMPEDIDORow : global::System.Data.DataRow {
            
            private ITEMPEDIDODataTable tableITEMPEDIDO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ITEMPEDIDORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableITEMPEDIDO = ((ITEMPEDIDODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NRPEDIDO {
                get {
                    return ((int)(this[this.tableITEMPEDIDO.NRPEDIDOColumn]));
                }
                set {
                    this[this.tableITEMPEDIDO.NRPEDIDOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CODPRODUTO {
                get {
                    return ((int)(this[this.tableITEMPEDIDO.CODPRODUTOColumn]));
                }
                set {
                    this[this.tableITEMPEDIDO.CODPRODUTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QUANTIDADE {
                get {
                    return ((int)(this[this.tableITEMPEDIDO.QUANTIDADEColumn]));
                }
                set {
                    this[this.tableITEMPEDIDO.QUANTIDADEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DESCONTO {
                get {
                    try {
                        return ((double)(this[this.tableITEMPEDIDO.DESCONTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCONTO\' in table \'ITEMPEDIDO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableITEMPEDIDO.DESCONTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double VALOR {
                get {
                    return ((double)(this[this.tableITEMPEDIDO.VALORColumn]));
                }
                set {
                    this[this.tableITEMPEDIDO.VALORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double IPI {
                get {
                    try {
                        return ((double)(this[this.tableITEMPEDIDO.IPIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IPI\' in table \'ITEMPEDIDO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableITEMPEDIDO.IPIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ITEM {
                get {
                    try {
                        return ((int)(this[this.tableITEMPEDIDO.ITEMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITEM\' in table \'ITEMPEDIDO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableITEMPEDIDO.ITEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QUANTIDADELIB {
                get {
                    try {
                        return ((int)(this[this.tableITEMPEDIDO.QUANTIDADELIBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QUANTIDADELIB\' in table \'ITEMPEDIDO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableITEMPEDIDO.QUANTIDADELIBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PEDIDORow PEDIDORow {
                get {
                    return ((PEDIDORow)(this.GetParentRow(this.Table.ParentRelations["FK_ITEMPEDIDO_PEDIDO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ITEMPEDIDO_PEDIDO"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUTORow PRODUTORow {
                get {
                    return ((PRODUTORow)(this.GetParentRow(this.Table.ParentRelations["FK_ITEMPEDIDO_PRODUTO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ITEMPEDIDO_PRODUTO"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCONTONull() {
                return this.IsNull(this.tableITEMPEDIDO.DESCONTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCONTONull() {
                this[this.tableITEMPEDIDO.DESCONTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIPINull() {
                return this.IsNull(this.tableITEMPEDIDO.IPIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIPINull() {
                this[this.tableITEMPEDIDO.IPIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEMNull() {
                return this.IsNull(this.tableITEMPEDIDO.ITEMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEMNull() {
                this[this.tableITEMPEDIDO.ITEMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQUANTIDADELIBNull() {
                return this.IsNull(this.tableITEMPEDIDO.QUANTIDADELIBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQUANTIDADELIBNull() {
                this[this.tableITEMPEDIDO.QUANTIDADELIBColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MODULORow : global::System.Data.DataRow {
            
            private MODULODataTable tableMODULO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MODULORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMODULO = ((MODULODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CODMODULO {
                get {
                    return ((int)(this[this.tableMODULO.CODMODULOColumn]));
                }
                set {
                    this[this.tableMODULO.CODMODULOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRICAO {
                get {
                    return ((string)(this[this.tableMODULO.DESCRICAOColumn]));
                }
                set {
                    this[this.tableMODULO.DESCRICAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ACESSORow[] GetACESSORows() {
                if ((this.Table.ChildRelations["FK_ACESSO_MODULO"] == null)) {
                    return new ACESSORow[0];
                }
                else {
                    return ((ACESSORow[])(base.GetChildRows(this.Table.ChildRelations["FK_ACESSO_MODULO"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PEDIDORow : global::System.Data.DataRow {
            
            private PEDIDODataTable tablePEDIDO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PEDIDORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePEDIDO = ((PEDIDODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NRPEDIDO {
                get {
                    return ((int)(this[this.tablePEDIDO.NRPEDIDOColumn]));
                }
                set {
                    this[this.tablePEDIDO.NRPEDIDOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIPO {
                get {
                    return ((string)(this[this.tablePEDIDO.TIPOColumn]));
                }
                set {
                    this[this.tablePEDIDO.TIPOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATAEMISSAO {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePEDIDO.DATAEMISSAOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATAEMISSAO\' in table \'PEDIDO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePEDIDO.DATAEMISSAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATAENTREGA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePEDIDO.DATAENTREGAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATAENTREGA\' in table \'PEDIDO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePEDIDO.DATAENTREGAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CODCONDICAOPAGAMENTO {
                get {
                    return ((int)(this[this.tablePEDIDO.CODCONDICAOPAGAMENTOColumn]));
                }
                set {
                    this[this.tablePEDIDO.CODCONDICAOPAGAMENTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SITUACAO {
                get {
                    try {
                        return ((string)(this[this.tablePEDIDO.SITUACAOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SITUACAO\' in table \'PEDIDO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePEDIDO.SITUACAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CODVENDEDOR {
                get {
                    return ((string)(this[this.tablePEDIDO.CODVENDEDORColumn]));
                }
                set {
                    this[this.tablePEDIDO.CODVENDEDORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CODCLIENTE {
                get {
                    return ((string)(this[this.tablePEDIDO.CODCLIENTEColumn]));
                }
                set {
                    this[this.tablePEDIDO.CODCLIENTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CODTRANSPORTADORA {
                get {
                    return ((string)(this[this.tablePEDIDO.CODTRANSPORTADORAColumn]));
                }
                set {
                    this[this.tablePEDIDO.CODTRANSPORTADORAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double VALORFRETE {
                get {
                    try {
                        return ((double)(this[this.tablePEDIDO.VALORFRETEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VALORFRETE\' in table \'PEDIDO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePEDIDO.VALORFRETEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTERow CLIENTERow {
                get {
                    return ((CLIENTERow)(this.GetParentRow(this.Table.ParentRelations["FK_PEDIDO_CLIENTE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_PEDIDO_CLIENTE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONDICAOPAGAMENTORow CONDICAOPAGAMENTORow {
                get {
                    return ((CONDICAOPAGAMENTORow)(this.GetParentRow(this.Table.ParentRelations["FK_PEDIDO_PAGAMENTO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_PEDIDO_PAGAMENTO"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSPORTADORARow TRANSPORTADORARow {
                get {
                    return ((TRANSPORTADORARow)(this.GetParentRow(this.Table.ParentRelations["FK_PEDIDO_TRANSPORTADORA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_PEDIDO_TRANSPORTADORA"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VENDEDORRow VENDEDORRow {
                get {
                    return ((VENDEDORRow)(this.GetParentRow(this.Table.ParentRelations["FK_PEDIDO_VENDEDOR"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_PEDIDO_VENDEDOR"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATAEMISSAONull() {
                return this.IsNull(this.tablePEDIDO.DATAEMISSAOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATAEMISSAONull() {
                this[this.tablePEDIDO.DATAEMISSAOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATAENTREGANull() {
                return this.IsNull(this.tablePEDIDO.DATAENTREGAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATAENTREGANull() {
                this[this.tablePEDIDO.DATAENTREGAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSITUACAONull() {
                return this.IsNull(this.tablePEDIDO.SITUACAOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSITUACAONull() {
                this[this.tablePEDIDO.SITUACAOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVALORFRETENull() {
                return this.IsNull(this.tablePEDIDO.VALORFRETEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVALORFRETENull() {
                this[this.tablePEDIDO.VALORFRETEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ITEMPEDIDORow[] GetITEMPEDIDORows() {
                if ((this.Table.ChildRelations["FK_ITEMPEDIDO_PEDIDO"] == null)) {
                    return new ITEMPEDIDORow[0];
                }
                else {
                    return ((ITEMPEDIDORow[])(base.GetChildRows(this.Table.ChildRelations["FK_ITEMPEDIDO_PEDIDO"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PRODUTORow : global::System.Data.DataRow {
            
            private PRODUTODataTable tablePRODUTO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PRODUTORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePRODUTO = ((PRODUTODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CODPRODUTO {
                get {
                    return ((int)(this[this.tablePRODUTO.CODPRODUTOColumn]));
                }
                set {
                    this[this.tablePRODUTO.CODPRODUTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRICAO {
                get {
                    return ((string)(this[this.tablePRODUTO.DESCRICAOColumn]));
                }
                set {
                    this[this.tablePRODUTO.DESCRICAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATACADASTRO {
                get {
                    return ((global::System.DateTime)(this[this.tablePRODUTO.DATACADASTROColumn]));
                }
                set {
                    this[this.tablePRODUTO.DATACADASTROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PRECOCUSTO {
                get {
                    return ((double)(this[this.tablePRODUTO.PRECOCUSTOColumn]));
                }
                set {
                    this[this.tablePRODUTO.PRECOCUSTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PESOLIQUIDO {
                get {
                    return ((double)(this[this.tablePRODUTO.PESOLIQUIDOColumn]));
                }
                set {
                    this[this.tablePRODUTO.PESOLIQUIDOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CODGRUPOPRODUTO {
                get {
                    return ((int)(this[this.tablePRODUTO.CODGRUPOPRODUTOColumn]));
                }
                set {
                    this[this.tablePRODUTO.CODGRUPOPRODUTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PRECOVENDA {
                get {
                    return ((double)(this[this.tablePRODUTO.PRECOVENDAColumn]));
                }
                set {
                    this[this.tablePRODUTO.PRECOVENDAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ESTOQUEATUAL {
                get {
                    try {
                        return ((double)(this[this.tablePRODUTO.ESTOQUEATUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ESTOQUEATUAL\' in table \'PRODUTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRODUTO.ESTOQUEATUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ESTOQUEMIN {
                get {
                    try {
                        return ((double)(this[this.tablePRODUTO.ESTOQUEMINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ESTOQUEMIN\' in table \'PRODUTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRODUTO.ESTOQUEMINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double IPI {
                get {
                    try {
                        return ((double)(this[this.tablePRODUTO.IPIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IPI\' in table \'PRODUTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRODUTO.IPIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATIVO {
                get {
                    try {
                        return ((string)(this[this.tablePRODUTO.ATIVOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ATIVO\' in table \'PRODUTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRODUTO.ATIVOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CODUNIDADEMEDIDA {
                get {
                    try {
                        return ((string)(this[this.tablePRODUTO.CODUNIDADEMEDIDAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODUNIDADEMEDIDA\' in table \'PRODUTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRODUTO.CODUNIDADEMEDIDAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPOPRODUTORow GRUPOPRODUTORow {
                get {
                    return ((GRUPOPRODUTORow)(this.GetParentRow(this.Table.ParentRelations["FK_PRODUTO_GRUPO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_PRODUTO_GRUPO"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADEMEDIDARow UNIDADEMEDIDARow {
                get {
                    return ((UNIDADEMEDIDARow)(this.GetParentRow(this.Table.ParentRelations["FK_PRODUTO_UNIDADE_MEDIDA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_PRODUTO_UNIDADE_MEDIDA"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsESTOQUEATUALNull() {
                return this.IsNull(this.tablePRODUTO.ESTOQUEATUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetESTOQUEATUALNull() {
                this[this.tablePRODUTO.ESTOQUEATUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsESTOQUEMINNull() {
                return this.IsNull(this.tablePRODUTO.ESTOQUEMINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetESTOQUEMINNull() {
                this[this.tablePRODUTO.ESTOQUEMINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIPINull() {
                return this.IsNull(this.tablePRODUTO.IPIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIPINull() {
                this[this.tablePRODUTO.IPIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATIVONull() {
                return this.IsNull(this.tablePRODUTO.ATIVOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATIVONull() {
                this[this.tablePRODUTO.ATIVOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODUNIDADEMEDIDANull() {
                return this.IsNull(this.tablePRODUTO.CODUNIDADEMEDIDAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODUNIDADEMEDIDANull() {
                this[this.tablePRODUTO.CODUNIDADEMEDIDAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ITEMPEDIDORow[] GetITEMPEDIDORows() {
                if ((this.Table.ChildRelations["FK_ITEMPEDIDO_PRODUTO"] == null)) {
                    return new ITEMPEDIDORow[0];
                }
                else {
                    return ((ITEMPEDIDORow[])(base.GetChildRows(this.Table.ChildRelations["FK_ITEMPEDIDO_PRODUTO"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class REGIAORow : global::System.Data.DataRow {
            
            private REGIAODataTable tableREGIAO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal REGIAORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableREGIAO = ((REGIAODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CODREGIAO {
                get {
                    return ((int)(this[this.tableREGIAO.CODREGIAOColumn]));
                }
                set {
                    this[this.tableREGIAO.CODREGIAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRICAO {
                get {
                    return ((string)(this[this.tableREGIAO.DESCRICAOColumn]));
                }
                set {
                    this[this.tableREGIAO.DESCRICAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTERow[] GetCLIENTERows() {
                if ((this.Table.ChildRelations["FK_CLIENTE_REGIAO"] == null)) {
                    return new CLIENTERow[0];
                }
                else {
                    return ((CLIENTERow[])(base.GetChildRows(this.Table.ChildRelations["FK_CLIENTE_REGIAO"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VENDEDORRow[] GetVENDEDORRows() {
                if ((this.Table.ChildRelations["FK_VENDEDOR_REGIAO"] == null)) {
                    return new VENDEDORRow[0];
                }
                else {
                    return ((VENDEDORRow[])(base.GetChildRows(this.Table.ChildRelations["FK_VENDEDOR_REGIAO"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TRANSPORTADORARow : global::System.Data.DataRow {
            
            private TRANSPORTADORADataTable tableTRANSPORTADORA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TRANSPORTADORARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTRANSPORTADORA = ((TRANSPORTADORADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CNPJ {
                get {
                    return ((string)(this[this.tableTRANSPORTADORA.CNPJColumn]));
                }
                set {
                    this[this.tableTRANSPORTADORA.CNPJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOME {
                get {
                    return ((string)(this[this.tableTRANSPORTADORA.NOMEColumn]));
                }
                set {
                    this[this.tableTRANSPORTADORA.NOMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOMEREDUZIDO {
                get {
                    return ((string)(this[this.tableTRANSPORTADORA.NOMEREDUZIDOColumn]));
                }
                set {
                    this[this.tableTRANSPORTADORA.NOMEREDUZIDOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ENDERECO {
                get {
                    return ((string)(this[this.tableTRANSPORTADORA.ENDERECOColumn]));
                }
                set {
                    this[this.tableTRANSPORTADORA.ENDERECOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BAIRRO {
                get {
                    return ((string)(this[this.tableTRANSPORTADORA.BAIRROColumn]));
                }
                set {
                    this[this.tableTRANSPORTADORA.BAIRROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UF {
                get {
                    return ((string)(this[this.tableTRANSPORTADORA.UFColumn]));
                }
                set {
                    this[this.tableTRANSPORTADORA.UFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MUNICIPIO {
                get {
                    return ((string)(this[this.tableTRANSPORTADORA.MUNICIPIOColumn]));
                }
                set {
                    this[this.tableTRANSPORTADORA.MUNICIPIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CEP {
                get {
                    return ((string)(this[this.tableTRANSPORTADORA.CEPColumn]));
                }
                set {
                    this[this.tableTRANSPORTADORA.CEPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TELEFONE {
                get {
                    return ((string)(this[this.tableTRANSPORTADORA.TELEFONEColumn]));
                }
                set {
                    this[this.tableTRANSPORTADORA.TELEFONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IE {
                get {
                    return ((string)(this[this.tableTRANSPORTADORA.IEColumn]));
                }
                set {
                    this[this.tableTRANSPORTADORA.IEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAIL {
                get {
                    return ((string)(this[this.tableTRANSPORTADORA.EMAILColumn]));
                }
                set {
                    this[this.tableTRANSPORTADORA.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NUM {
                get {
                    return ((string)(this[this.tableTRANSPORTADORA.NUMColumn]));
                }
                set {
                    this[this.tableTRANSPORTADORA.NUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPLEMENTO {
                get {
                    try {
                        return ((string)(this[this.tableTRANSPORTADORA.COMPLEMENTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMPLEMENTO\' in table \'TRANSPORTADORA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTRANSPORTADORA.COMPLEMENTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPLEMENTONull() {
                return this.IsNull(this.tableTRANSPORTADORA.COMPLEMENTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPLEMENTONull() {
                this[this.tableTRANSPORTADORA.COMPLEMENTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PEDIDORow[] GetPEDIDORows() {
                if ((this.Table.ChildRelations["FK_PEDIDO_TRANSPORTADORA"] == null)) {
                    return new PEDIDORow[0];
                }
                else {
                    return ((PEDIDORow[])(base.GetChildRows(this.Table.ChildRelations["FK_PEDIDO_TRANSPORTADORA"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSPORTADORAVIARow[] GetTRANSPORTADORAVIARows() {
                if ((this.Table.ChildRelations["FK_TRANSPORTADORAVIA_TRANSPORTADORA"] == null)) {
                    return new TRANSPORTADORAVIARow[0];
                }
                else {
                    return ((TRANSPORTADORAVIARow[])(base.GetChildRows(this.Table.ChildRelations["FK_TRANSPORTADORAVIA_TRANSPORTADORA"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TRANSPORTADORAVIARow : global::System.Data.DataRow {
            
            private TRANSPORTADORAVIADataTable tableTRANSPORTADORAVIA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TRANSPORTADORAVIARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTRANSPORTADORAVIA = ((TRANSPORTADORAVIADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CODVIATRANSPORTE {
                get {
                    return ((string)(this[this.tableTRANSPORTADORAVIA.CODVIATRANSPORTEColumn]));
                }
                set {
                    this[this.tableTRANSPORTADORAVIA.CODVIATRANSPORTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CODTRANSPORTADORA {
                get {
                    return ((string)(this[this.tableTRANSPORTADORAVIA.CODTRANSPORTADORAColumn]));
                }
                set {
                    this[this.tableTRANSPORTADORAVIA.CODTRANSPORTADORAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSPORTADORARow TRANSPORTADORARow {
                get {
                    return ((TRANSPORTADORARow)(this.GetParentRow(this.Table.ParentRelations["FK_TRANSPORTADORAVIA_TRANSPORTADORA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TRANSPORTADORAVIA_TRANSPORTADORA"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VIATRANSPORTERow VIATRANSPORTERow {
                get {
                    return ((VIATRANSPORTERow)(this.GetParentRow(this.Table.ParentRelations["FK_TRANSPORTADORAVIA_VIATRANSPORTE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TRANSPORTADORAVIA_VIATRANSPORTE"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UNIDADEMEDIDARow : global::System.Data.DataRow {
            
            private UNIDADEMEDIDADataTable tableUNIDADEMEDIDA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UNIDADEMEDIDARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUNIDADEMEDIDA = ((UNIDADEMEDIDADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CODUNIDADEMEDIDA {
                get {
                    return ((string)(this[this.tableUNIDADEMEDIDA.CODUNIDADEMEDIDAColumn]));
                }
                set {
                    this[this.tableUNIDADEMEDIDA.CODUNIDADEMEDIDAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRICAO {
                get {
                    return ((string)(this[this.tableUNIDADEMEDIDA.DESCRICAOColumn]));
                }
                set {
                    this[this.tableUNIDADEMEDIDA.DESCRICAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUTORow[] GetPRODUTORows() {
                if ((this.Table.ChildRelations["FK_PRODUTO_UNIDADE_MEDIDA"] == null)) {
                    return new PRODUTORow[0];
                }
                else {
                    return ((PRODUTORow[])(base.GetChildRows(this.Table.ChildRelations["FK_PRODUTO_UNIDADE_MEDIDA"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class USUARIORow : global::System.Data.DataRow {
            
            private USUARIODataTable tableUSUARIO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal USUARIORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUSUARIO = ((USUARIODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CODUSUARIO {
                get {
                    return ((int)(this[this.tableUSUARIO.CODUSUARIOColumn]));
                }
                set {
                    this[this.tableUSUARIO.CODUSUARIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USUARIO {
                get {
                    return ((string)(this[this.tableUSUARIO.USUARIOColumn]));
                }
                set {
                    this[this.tableUSUARIO.USUARIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SENHA {
                get {
                    return ((string)(this[this.tableUSUARIO.SENHAColumn]));
                }
                set {
                    this[this.tableUSUARIO.SENHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRIVILEGIADO {
                get {
                    try {
                        return ((string)(this[this.tableUSUARIO.PRIVILEGIADOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRIVILEGIADO\' in table \'USUARIO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUSUARIO.PRIVILEGIADOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLOQUEADO {
                get {
                    try {
                        return ((string)(this[this.tableUSUARIO.BLOQUEADOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BLOQUEADO\' in table \'USUARIO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUSUARIO.BLOQUEADOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRIVILEGIADONull() {
                return this.IsNull(this.tableUSUARIO.PRIVILEGIADOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRIVILEGIADONull() {
                this[this.tableUSUARIO.PRIVILEGIADOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLOQUEADONull() {
                return this.IsNull(this.tableUSUARIO.BLOQUEADOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLOQUEADONull() {
                this[this.tableUSUARIO.BLOQUEADOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ACESSORow[] GetACESSORows() {
                if ((this.Table.ChildRelations["FK_ACESSO_USUARIO"] == null)) {
                    return new ACESSORow[0];
                }
                else {
                    return ((ACESSORow[])(base.GetChildRows(this.Table.ChildRelations["FK_ACESSO_USUARIO"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTERow[] GetCLIENTERows() {
                if ((this.Table.ChildRelations["FK_CLIENTE_USUARIO"] == null)) {
                    return new CLIENTERow[0];
                }
                else {
                    return ((CLIENTERow[])(base.GetChildRows(this.Table.ChildRelations["FK_CLIENTE_USUARIO"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VENDEDORRow[] GetVENDEDORRows() {
                if ((this.Table.ChildRelations["FK_VENDEDOR_USUARIO"] == null)) {
                    return new VENDEDORRow[0];
                }
                else {
                    return ((VENDEDORRow[])(base.GetChildRows(this.Table.ChildRelations["FK_VENDEDOR_USUARIO"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATUCUBORow[] GetATUCUBORows() {
                if ((this.Table.ChildRelations["FK_ATUCUBO_USUARIO"] == null)) {
                    return new ATUCUBORow[0];
                }
                else {
                    return ((ATUCUBORow[])(base.GetChildRows(this.Table.ChildRelations["FK_ATUCUBO_USUARIO"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class VENDEDORRow : global::System.Data.DataRow {
            
            private VENDEDORDataTable tableVENDEDOR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VENDEDORRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVENDEDOR = ((VENDEDORDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CPF {
                get {
                    return ((string)(this[this.tableVENDEDOR.CPFColumn]));
                }
                set {
                    this[this.tableVENDEDOR.CPFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOME {
                get {
                    return ((string)(this[this.tableVENDEDOR.NOMEColumn]));
                }
                set {
                    this[this.tableVENDEDOR.NOMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ENDERECO {
                get {
                    return ((string)(this[this.tableVENDEDOR.ENDERECOColumn]));
                }
                set {
                    this[this.tableVENDEDOR.ENDERECOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BAIRRO {
                get {
                    return ((string)(this[this.tableVENDEDOR.BAIRROColumn]));
                }
                set {
                    this[this.tableVENDEDOR.BAIRROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MUNICIPIO {
                get {
                    return ((string)(this[this.tableVENDEDOR.MUNICIPIOColumn]));
                }
                set {
                    this[this.tableVENDEDOR.MUNICIPIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UF {
                get {
                    return ((string)(this[this.tableVENDEDOR.UFColumn]));
                }
                set {
                    this[this.tableVENDEDOR.UFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CEP {
                get {
                    return ((string)(this[this.tableVENDEDOR.CEPColumn]));
                }
                set {
                    this[this.tableVENDEDOR.CEPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TELEFONE {
                get {
                    try {
                        return ((string)(this[this.tableVENDEDOR.TELEFONEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TELEFONE\' in table \'VENDEDOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVENDEDOR.TELEFONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FAX {
                get {
                    try {
                        return ((string)(this[this.tableVENDEDOR.FAXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FAX\' in table \'VENDEDOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVENDEDOR.FAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RG {
                get {
                    return ((string)(this[this.tableVENDEDOR.RGColumn]));
                }
                set {
                    this[this.tableVENDEDOR.RGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CODUSUARIO {
                get {
                    try {
                        return ((int)(this[this.tableVENDEDOR.CODUSUARIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODUSUARIO\' in table \'VENDEDOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVENDEDOR.CODUSUARIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tableVENDEDOR.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAIL\' in table \'VENDEDOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVENDEDOR.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double COMISSAO {
                get {
                    try {
                        return ((double)(this[this.tableVENDEDOR.COMISSAOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMISSAO\' in table \'VENDEDOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVENDEDOR.COMISSAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATIVO {
                get {
                    try {
                        return ((string)(this[this.tableVENDEDOR.ATIVOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ATIVO\' in table \'VENDEDOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVENDEDOR.ATIVOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEXO {
                get {
                    try {
                        return ((string)(this[this.tableVENDEDOR.SEXOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEXO\' in table \'VENDEDOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVENDEDOR.SEXOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CODREGIAO {
                get {
                    try {
                        return ((int)(this[this.tableVENDEDOR.CODREGIAOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODREGIAO\' in table \'VENDEDOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVENDEDOR.CODREGIAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NUM {
                get {
                    return ((string)(this[this.tableVENDEDOR.NUMColumn]));
                }
                set {
                    this[this.tableVENDEDOR.NUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPLEMENTO {
                get {
                    try {
                        return ((string)(this[this.tableVENDEDOR.COMPLEMENTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMPLEMENTO\' in table \'VENDEDOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVENDEDOR.COMPLEMENTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CELULAR {
                get {
                    try {
                        return ((string)(this[this.tableVENDEDOR.CELULARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CELULAR\' in table \'VENDEDOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVENDEDOR.CELULARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGIAORow REGIAORow {
                get {
                    return ((REGIAORow)(this.GetParentRow(this.Table.ParentRelations["FK_VENDEDOR_REGIAO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_VENDEDOR_REGIAO"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIORow USUARIORow {
                get {
                    return ((USUARIORow)(this.GetParentRow(this.Table.ParentRelations["FK_VENDEDOR_USUARIO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_VENDEDOR_USUARIO"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTELEFONENull() {
                return this.IsNull(this.tableVENDEDOR.TELEFONEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTELEFONENull() {
                this[this.tableVENDEDOR.TELEFONEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFAXNull() {
                return this.IsNull(this.tableVENDEDOR.FAXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFAXNull() {
                this[this.tableVENDEDOR.FAXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODUSUARIONull() {
                return this.IsNull(this.tableVENDEDOR.CODUSUARIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODUSUARIONull() {
                this[this.tableVENDEDOR.CODUSUARIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAILNull() {
                return this.IsNull(this.tableVENDEDOR.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAILNull() {
                this[this.tableVENDEDOR.EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMISSAONull() {
                return this.IsNull(this.tableVENDEDOR.COMISSAOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMISSAONull() {
                this[this.tableVENDEDOR.COMISSAOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATIVONull() {
                return this.IsNull(this.tableVENDEDOR.ATIVOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATIVONull() {
                this[this.tableVENDEDOR.ATIVOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEXONull() {
                return this.IsNull(this.tableVENDEDOR.SEXOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEXONull() {
                this[this.tableVENDEDOR.SEXOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODREGIAONull() {
                return this.IsNull(this.tableVENDEDOR.CODREGIAOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODREGIAONull() {
                this[this.tableVENDEDOR.CODREGIAOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPLEMENTONull() {
                return this.IsNull(this.tableVENDEDOR.COMPLEMENTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPLEMENTONull() {
                this[this.tableVENDEDOR.COMPLEMENTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCELULARNull() {
                return this.IsNull(this.tableVENDEDOR.CELULARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCELULARNull() {
                this[this.tableVENDEDOR.CELULARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PEDIDORow[] GetPEDIDORows() {
                if ((this.Table.ChildRelations["FK_PEDIDO_VENDEDOR"] == null)) {
                    return new PEDIDORow[0];
                }
                else {
                    return ((PEDIDORow[])(base.GetChildRows(this.Table.ChildRelations["FK_PEDIDO_VENDEDOR"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class VIATRANSPORTERow : global::System.Data.DataRow {
            
            private VIATRANSPORTEDataTable tableVIATRANSPORTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VIATRANSPORTERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVIATRANSPORTE = ((VIATRANSPORTEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CODVIATRANSPORTE {
                get {
                    return ((string)(this[this.tableVIATRANSPORTE.CODVIATRANSPORTEColumn]));
                }
                set {
                    this[this.tableVIATRANSPORTE.CODVIATRANSPORTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRICAO {
                get {
                    return ((string)(this[this.tableVIATRANSPORTE.DESCRICAOColumn]));
                }
                set {
                    this[this.tableVIATRANSPORTE.DESCRICAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSPORTADORAVIARow[] GetTRANSPORTADORAVIARows() {
                if ((this.Table.ChildRelations["FK_TRANSPORTADORAVIA_VIATRANSPORTE"] == null)) {
                    return new TRANSPORTADORAVIARow[0];
                }
                else {
                    return ((TRANSPORTADORAVIARow[])(base.GetChildRows(this.Table.ChildRelations["FK_TRANSPORTADORAVIA_VIATRANSPORTE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ATUCUBORow : global::System.Data.DataRow {
            
            private ATUCUBODataTable tableATUCUBO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ATUCUBORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableATUCUBO = ((ATUCUBODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NRATUALIZACAO {
                get {
                    return ((int)(this[this.tableATUCUBO.NRATUALIZACAOColumn]));
                }
                set {
                    this[this.tableATUCUBO.NRATUALIZACAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CODUSUARIO {
                get {
                    return ((int)(this[this.tableATUCUBO.CODUSUARIOColumn]));
                }
                set {
                    this[this.tableATUCUBO.CODUSUARIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATAATUALIZACAO {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableATUCUBO.DATAATUALIZACAOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATAATUALIZACAO\' in table \'ATUCUBO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableATUCUBO.DATAATUALIZACAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIORow USUARIORow {
                get {
                    return ((USUARIORow)(this.GetParentRow(this.Table.ParentRelations["FK_ATUCUBO_USUARIO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ATUCUBO_USUARIO"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATAATUALIZACAONull() {
                return this.IsNull(this.tableATUCUBO.DATAATUALIZACAOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATAATUALIZACAONull() {
                this[this.tableATUCUBO.DATAATUALIZACAOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class modeloRow : global::System.Data.DataRow {
            
            private modeloDataTable tablemodelo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal modeloRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemodelo = ((modeloDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tablemodelo.idColumn]));
                }
                set {
                    this[this.tablemodelo.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string estrutura {
                get {
                    return ((string)(this[this.tablemodelo.estruturaColumn]));
                }
                set {
                    this[this.tablemodelo.estruturaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dataCriacao {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablemodelo.dataCriacaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dataCriacao\' in table \'modelo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemodelo.dataCriacaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string algoritmo {
                get {
                    try {
                        return ((string)(this[this.tablemodelo.algoritmoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'algoritmo\' in table \'modelo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemodelo.algoritmoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdataCriacaoNull() {
                return this.IsNull(this.tablemodelo.dataCriacaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdataCriacaoNull() {
                this[this.tablemodelo.dataCriacaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsalgoritmoNull() {
                return this.IsNull(this.tablemodelo.algoritmoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetalgoritmoNull() {
                this[this.tablemodelo.algoritmoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public modeloCampoRow[] GetmodeloCampoRows() {
                if ((this.Table.ChildRelations["FK_modelo_modeloCampo"] == null)) {
                    return new modeloCampoRow[0];
                }
                else {
                    return ((modeloCampoRow[])(base.GetChildRows(this.Table.ChildRelations["FK_modelo_modeloCampo"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class modeloCampoRow : global::System.Data.DataRow {
            
            private modeloCampoDataTable tablemodeloCampo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal modeloCampoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemodeloCampo = ((modeloCampoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idModelo {
                get {
                    return ((int)(this[this.tablemodeloCampo.idModeloColumn]));
                }
                set {
                    this[this.tablemodeloCampo.idModeloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string campo {
                get {
                    return ((string)(this[this.tablemodeloCampo.campoColumn]));
                }
                set {
                    this[this.tablemodeloCampo.campoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tipo {
                get {
                    try {
                        return ((string)(this[this.tablemodeloCampo.tipoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tipo\' in table \'modeloCampo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemodeloCampo.tipoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public modeloRow modeloRow {
                get {
                    return ((modeloRow)(this.GetParentRow(this.Table.ParentRelations["FK_modelo_modeloCampo"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_modelo_modeloCampo"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstipoNull() {
                return this.IsNull(this.tablemodeloCampo.tipoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettipoNull() {
                this[this.tablemodeloCampo.tipoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class NOTAFISCALRow : global::System.Data.DataRow {
            
            private NOTAFISCALDataTable tableNOTAFISCAL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NOTAFISCALRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNOTAFISCAL = ((NOTAFISCALDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NrNotaFiscal {
                get {
                    return ((int)(this[this.tableNOTAFISCAL.NrNotaFiscalColumn]));
                }
                set {
                    this[this.tableNOTAFISCAL.NrNotaFiscalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RazaoSocial {
                get {
                    try {
                        return ((string)(this[this.tableNOTAFISCAL.RazaoSocialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RazaoSocial\' in table \'NOTAFISCAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNOTAFISCAL.RazaoSocialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Serie {
                get {
                    try {
                        return ((string)(this[this.tableNOTAFISCAL.SerieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Serie\' in table \'NOTAFISCAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNOTAFISCAL.SerieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DataEmissao {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableNOTAFISCAL.DataEmissaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataEmissao\' in table \'NOTAFISCAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNOTAFISCAL.DataEmissaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IE {
                get {
                    try {
                        return ((string)(this[this.tableNOTAFISCAL.IEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IE\' in table \'NOTAFISCAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNOTAFISCAL.IEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Telefone {
                get {
                    try {
                        return ((string)(this[this.tableNOTAFISCAL.TelefoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Telefone\' in table \'NOTAFISCAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNOTAFISCAL.TelefoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Endereco {
                get {
                    try {
                        return ((string)(this[this.tableNOTAFISCAL.EnderecoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Endereco\' in table \'NOTAFISCAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNOTAFISCAL.EnderecoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bairro {
                get {
                    try {
                        return ((string)(this[this.tableNOTAFISCAL.BairroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bairro\' in table \'NOTAFISCAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNOTAFISCAL.BairroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Municipio {
                get {
                    try {
                        return ((string)(this[this.tableNOTAFISCAL.MunicipioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Municipio\' in table \'NOTAFISCAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNOTAFISCAL.MunicipioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Icms {
                get {
                    try {
                        return ((double)(this[this.tableNOTAFISCAL.IcmsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Icms\' in table \'NOTAFISCAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNOTAFISCAL.IcmsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tipo {
                get {
                    try {
                        return ((string)(this[this.tableNOTAFISCAL.TipoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tipo\' in table \'NOTAFISCAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNOTAFISCAL.TipoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CNPJ {
                get {
                    try {
                        return ((string)(this[this.tableNOTAFISCAL.CNPJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CNPJ\' in table \'NOTAFISCAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNOTAFISCAL.CNPJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TipoFrete {
                get {
                    try {
                        return ((string)(this[this.tableNOTAFISCAL.TipoFreteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TipoFrete\' in table \'NOTAFISCAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNOTAFISCAL.TipoFreteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ValorFrete {
                get {
                    try {
                        return ((double)(this[this.tableNOTAFISCAL.ValorFreteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValorFrete\' in table \'NOTAFISCAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNOTAFISCAL.ValorFreteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodVendedor {
                get {
                    try {
                        return ((string)(this[this.tableNOTAFISCAL.CodVendedorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodVendedor\' in table \'NOTAFISCAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNOTAFISCAL.CodVendedorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodTransportadora {
                get {
                    try {
                        return ((string)(this[this.tableNOTAFISCAL.CodTransportadoraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodTransportadora\' in table \'NOTAFISCAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNOTAFISCAL.CodTransportadoraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NrPedido {
                get {
                    try {
                        return ((int)(this[this.tableNOTAFISCAL.NrPedidoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NrPedido\' in table \'NOTAFISCAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNOTAFISCAL.NrPedidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ValorNota {
                get {
                    try {
                        return ((double)(this[this.tableNOTAFISCAL.ValorNotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValorNota\' in table \'NOTAFISCAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNOTAFISCAL.ValorNotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRazaoSocialNull() {
                return this.IsNull(this.tableNOTAFISCAL.RazaoSocialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRazaoSocialNull() {
                this[this.tableNOTAFISCAL.RazaoSocialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSerieNull() {
                return this.IsNull(this.tableNOTAFISCAL.SerieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSerieNull() {
                this[this.tableNOTAFISCAL.SerieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataEmissaoNull() {
                return this.IsNull(this.tableNOTAFISCAL.DataEmissaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataEmissaoNull() {
                this[this.tableNOTAFISCAL.DataEmissaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIENull() {
                return this.IsNull(this.tableNOTAFISCAL.IEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIENull() {
                this[this.tableNOTAFISCAL.IEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelefoneNull() {
                return this.IsNull(this.tableNOTAFISCAL.TelefoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelefoneNull() {
                this[this.tableNOTAFISCAL.TelefoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnderecoNull() {
                return this.IsNull(this.tableNOTAFISCAL.EnderecoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnderecoNull() {
                this[this.tableNOTAFISCAL.EnderecoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBairroNull() {
                return this.IsNull(this.tableNOTAFISCAL.BairroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBairroNull() {
                this[this.tableNOTAFISCAL.BairroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMunicipioNull() {
                return this.IsNull(this.tableNOTAFISCAL.MunicipioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMunicipioNull() {
                this[this.tableNOTAFISCAL.MunicipioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIcmsNull() {
                return this.IsNull(this.tableNOTAFISCAL.IcmsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIcmsNull() {
                this[this.tableNOTAFISCAL.IcmsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoNull() {
                return this.IsNull(this.tableNOTAFISCAL.TipoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoNull() {
                this[this.tableNOTAFISCAL.TipoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCNPJNull() {
                return this.IsNull(this.tableNOTAFISCAL.CNPJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCNPJNull() {
                this[this.tableNOTAFISCAL.CNPJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoFreteNull() {
                return this.IsNull(this.tableNOTAFISCAL.TipoFreteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoFreteNull() {
                this[this.tableNOTAFISCAL.TipoFreteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValorFreteNull() {
                return this.IsNull(this.tableNOTAFISCAL.ValorFreteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValorFreteNull() {
                this[this.tableNOTAFISCAL.ValorFreteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodVendedorNull() {
                return this.IsNull(this.tableNOTAFISCAL.CodVendedorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodVendedorNull() {
                this[this.tableNOTAFISCAL.CodVendedorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodTransportadoraNull() {
                return this.IsNull(this.tableNOTAFISCAL.CodTransportadoraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodTransportadoraNull() {
                this[this.tableNOTAFISCAL.CodTransportadoraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNrPedidoNull() {
                return this.IsNull(this.tableNOTAFISCAL.NrPedidoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNrPedidoNull() {
                this[this.tableNOTAFISCAL.NrPedidoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValorNotaNull() {
                return this.IsNull(this.tableNOTAFISCAL.ValorNotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValorNotaNull() {
                this[this.tableNOTAFISCAL.ValorNotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemNotaFiscalRow[] GetItemNotaFiscalRows() {
                if ((this.Table.ChildRelations["FK_ItemNotaFiscal_NOTA_FISCAL"] == null)) {
                    return new ItemNotaFiscalRow[0];
                }
                else {
                    return ((ItemNotaFiscalRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ItemNotaFiscal_NOTA_FISCAL"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ItemNotaFiscalRow : global::System.Data.DataRow {
            
            private ItemNotaFiscalDataTable tableItemNotaFiscal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemNotaFiscalRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableItemNotaFiscal = ((ItemNotaFiscalDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descricao {
                get {
                    try {
                        return ((string)(this[this.tableItemNotaFiscal.DescricaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descricao\' in table \'ItemNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemNotaFiscal.DescricaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Quantidade {
                get {
                    try {
                        return ((int)(this[this.tableItemNotaFiscal.QuantidadeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantidade\' in table \'ItemNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemNotaFiscal.QuantidadeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Desconto {
                get {
                    try {
                        return ((double)(this[this.tableItemNotaFiscal.DescontoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Desconto\' in table \'ItemNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemNotaFiscal.DescontoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Valor {
                get {
                    try {
                        return ((double)(this[this.tableItemNotaFiscal.ValorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Valor\' in table \'ItemNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemNotaFiscal.ValorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double IPI {
                get {
                    try {
                        return ((double)(this[this.tableItemNotaFiscal.IPIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IPI\' in table \'ItemNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemNotaFiscal.IPIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CodProduto {
                get {
                    return ((int)(this[this.tableItemNotaFiscal.CodProdutoColumn]));
                }
                set {
                    this[this.tableItemNotaFiscal.CodProdutoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodUnidadeMedida {
                get {
                    try {
                        return ((string)(this[this.tableItemNotaFiscal.CodUnidadeMedidaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodUnidadeMedida\' in table \'ItemNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemNotaFiscal.CodUnidadeMedidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NrNotaFiscal {
                get {
                    return ((int)(this[this.tableItemNotaFiscal.NrNotaFiscalColumn]));
                }
                set {
                    this[this.tableItemNotaFiscal.NrNotaFiscalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NOTAFISCALRow NOTAFISCALRow {
                get {
                    return ((NOTAFISCALRow)(this.GetParentRow(this.Table.ParentRelations["FK_ItemNotaFiscal_NOTA_FISCAL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ItemNotaFiscal_NOTA_FISCAL"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescricaoNull() {
                return this.IsNull(this.tableItemNotaFiscal.DescricaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescricaoNull() {
                this[this.tableItemNotaFiscal.DescricaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantidadeNull() {
                return this.IsNull(this.tableItemNotaFiscal.QuantidadeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantidadeNull() {
                this[this.tableItemNotaFiscal.QuantidadeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescontoNull() {
                return this.IsNull(this.tableItemNotaFiscal.DescontoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescontoNull() {
                this[this.tableItemNotaFiscal.DescontoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValorNull() {
                return this.IsNull(this.tableItemNotaFiscal.ValorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValorNull() {
                this[this.tableItemNotaFiscal.ValorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIPINull() {
                return this.IsNull(this.tableItemNotaFiscal.IPIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIPINull() {
                this[this.tableItemNotaFiscal.IPIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodUnidadeMedidaNull() {
                return this.IsNull(this.tableItemNotaFiscal.CodUnidadeMedidaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodUnidadeMedidaNull() {
                this[this.tableItemNotaFiscal.CodUnidadeMedidaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RelPedidoRow : global::System.Data.DataRow {
            
            private RelPedidoDataTable tableRelPedido;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RelPedidoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRelPedido = ((RelPedidoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NRPEDIDO {
                get {
                    try {
                        return ((string)(this[this.tableRelPedido.NRPEDIDOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NRPEDIDO\' in table \'RelPedido\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelPedido.NRPEDIDOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIPO {
                get {
                    try {
                        return ((string)(this[this.tableRelPedido.TIPOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIPO\' in table \'RelPedido\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelPedido.TIPOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SITUACAO {
                get {
                    try {
                        return ((string)(this[this.tableRelPedido.SITUACAOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SITUACAO\' in table \'RelPedido\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelPedido.SITUACAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RAZAOSOCIAL {
                get {
                    try {
                        return ((string)(this[this.tableRelPedido.RAZAOSOCIALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RAZAOSOCIAL\' in table \'RelPedido\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelPedido.RAZAOSOCIALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATAEMISSAO {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRelPedido.DATAEMISSAOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATAEMISSAO\' in table \'RelPedido\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelPedido.DATAEMISSAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATAENTREGA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRelPedido.DATAENTREGAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATAENTREGA\' in table \'RelPedido\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelPedido.DATAENTREGAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CODPRODUTO {
                get {
                    try {
                        return ((string)(this[this.tableRelPedido.CODPRODUTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODPRODUTO\' in table \'RelPedido\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelPedido.CODPRODUTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRICAO {
                get {
                    try {
                        return ((string)(this[this.tableRelPedido.DESCRICAOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRICAO\' in table \'RelPedido\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelPedido.DESCRICAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QUANTIDADE {
                get {
                    try {
                        return ((string)(this[this.tableRelPedido.QUANTIDADEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QUANTIDADE\' in table \'RelPedido\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelPedido.QUANTIDADEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double VALOR {
                get {
                    try {
                        return ((double)(this[this.tableRelPedido.VALORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VALOR\' in table \'RelPedido\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelPedido.VALORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ValorTotal {
                get {
                    try {
                        return ((double)(this[this.tableRelPedido.ValorTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValorTotal\' in table \'RelPedido\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelPedido.ValorTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNRPEDIDONull() {
                return this.IsNull(this.tableRelPedido.NRPEDIDOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNRPEDIDONull() {
                this[this.tableRelPedido.NRPEDIDOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIPONull() {
                return this.IsNull(this.tableRelPedido.TIPOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIPONull() {
                this[this.tableRelPedido.TIPOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSITUACAONull() {
                return this.IsNull(this.tableRelPedido.SITUACAOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSITUACAONull() {
                this[this.tableRelPedido.SITUACAOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRAZAOSOCIALNull() {
                return this.IsNull(this.tableRelPedido.RAZAOSOCIALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRAZAOSOCIALNull() {
                this[this.tableRelPedido.RAZAOSOCIALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATAEMISSAONull() {
                return this.IsNull(this.tableRelPedido.DATAEMISSAOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATAEMISSAONull() {
                this[this.tableRelPedido.DATAEMISSAOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATAENTREGANull() {
                return this.IsNull(this.tableRelPedido.DATAENTREGAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATAENTREGANull() {
                this[this.tableRelPedido.DATAENTREGAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODPRODUTONull() {
                return this.IsNull(this.tableRelPedido.CODPRODUTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODPRODUTONull() {
                this[this.tableRelPedido.CODPRODUTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCRICAONull() {
                return this.IsNull(this.tableRelPedido.DESCRICAOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCRICAONull() {
                this[this.tableRelPedido.DESCRICAOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQUANTIDADENull() {
                return this.IsNull(this.tableRelPedido.QUANTIDADEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQUANTIDADENull() {
                this[this.tableRelPedido.QUANTIDADEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVALORNull() {
                return this.IsNull(this.tableRelPedido.VALORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVALORNull() {
                this[this.tableRelPedido.VALORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValorTotalNull() {
                return this.IsNull(this.tableRelPedido.ValorTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValorTotalNull() {
                this[this.tableRelPedido.ValorTotalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RelVendedorRow : global::System.Data.DataRow {
            
            private RelVendedorDataTable tableRelVendedor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RelVendedorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRelVendedor = ((RelVendedorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CPF {
                get {
                    try {
                        return ((string)(this[this.tableRelVendedor.CPFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CPF\' in table \'RelVendedor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelVendedor.CPFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nome {
                get {
                    try {
                        return ((string)(this[this.tableRelVendedor.NomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nome\' in table \'RelVendedor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelVendedor.NomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NrPedido {
                get {
                    try {
                        return ((string)(this[this.tableRelVendedor.NrPedidoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NrPedido\' in table \'RelVendedor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelVendedor.NrPedidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dtEmissao {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRelVendedor.dtEmissaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dtEmissao\' in table \'RelVendedor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelVendedor.dtEmissaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Comissao {
                get {
                    try {
                        return ((double)(this[this.tableRelVendedor.ComissaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comissao\' in table \'RelVendedor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelVendedor.ComissaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ValorPedido {
                get {
                    try {
                        return ((double)(this[this.tableRelVendedor.ValorPedidoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValorPedido\' in table \'RelVendedor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelVendedor.ValorPedidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ValorComissao {
                get {
                    try {
                        return ((double)(this[this.tableRelVendedor.ValorComissaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValorComissao\' in table \'RelVendedor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelVendedor.ValorComissaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCPFNull() {
                return this.IsNull(this.tableRelVendedor.CPFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCPFNull() {
                this[this.tableRelVendedor.CPFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNomeNull() {
                return this.IsNull(this.tableRelVendedor.NomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNomeNull() {
                this[this.tableRelVendedor.NomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNrPedidoNull() {
                return this.IsNull(this.tableRelVendedor.NrPedidoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNrPedidoNull() {
                this[this.tableRelVendedor.NrPedidoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdtEmissaoNull() {
                return this.IsNull(this.tableRelVendedor.dtEmissaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdtEmissaoNull() {
                this[this.tableRelVendedor.dtEmissaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComissaoNull() {
                return this.IsNull(this.tableRelVendedor.ComissaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComissaoNull() {
                this[this.tableRelVendedor.ComissaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValorPedidoNull() {
                return this.IsNull(this.tableRelVendedor.ValorPedidoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValorPedidoNull() {
                this[this.tableRelVendedor.ValorPedidoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValorComissaoNull() {
                return this.IsNull(this.tableRelVendedor.ValorComissaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValorComissaoNull() {
                this[this.tableRelVendedor.ValorComissaoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RelEstoqueRow : global::System.Data.DataRow {
            
            private RelEstoqueDataTable tableRelEstoque;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RelEstoqueRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRelEstoque = ((RelEstoqueDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CODPRODUTO {
                get {
                    try {
                        return ((int)(this[this.tableRelEstoque.CODPRODUTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODPRODUTO\' in table \'RelEstoque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelEstoque.CODPRODUTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRICAO {
                get {
                    try {
                        return ((string)(this[this.tableRelEstoque.DESCRICAOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRICAO\' in table \'RelEstoque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelEstoque.DESCRICAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATACADASTRO {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRelEstoque.DATACADASTROColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATACADASTRO\' in table \'RelEstoque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelEstoque.DATACADASTROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PRECOCUSTO {
                get {
                    try {
                        return ((double)(this[this.tableRelEstoque.PRECOCUSTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRECOCUSTO\' in table \'RelEstoque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelEstoque.PRECOCUSTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CODGRUPOPRODUTO {
                get {
                    try {
                        return ((int)(this[this.tableRelEstoque.CODGRUPOPRODUTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODGRUPOPRODUTO\' in table \'RelEstoque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelEstoque.CODGRUPOPRODUTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GRPDESC {
                get {
                    try {
                        return ((string)(this[this.tableRelEstoque.GRPDESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GRPDESC\' in table \'RelEstoque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelEstoque.GRPDESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ESTOQUEATUAL {
                get {
                    try {
                        return ((int)(this[this.tableRelEstoque.ESTOQUEATUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ESTOQUEATUAL\' in table \'RelEstoque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelEstoque.ESTOQUEATUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ESTOQUEMIN {
                get {
                    try {
                        return ((int)(this[this.tableRelEstoque.ESTOQUEMINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ESTOQUEMIN\' in table \'RelEstoque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelEstoque.ESTOQUEMINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODPRODUTONull() {
                return this.IsNull(this.tableRelEstoque.CODPRODUTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODPRODUTONull() {
                this[this.tableRelEstoque.CODPRODUTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCRICAONull() {
                return this.IsNull(this.tableRelEstoque.DESCRICAOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCRICAONull() {
                this[this.tableRelEstoque.DESCRICAOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATACADASTRONull() {
                return this.IsNull(this.tableRelEstoque.DATACADASTROColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATACADASTRONull() {
                this[this.tableRelEstoque.DATACADASTROColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRECOCUSTONull() {
                return this.IsNull(this.tableRelEstoque.PRECOCUSTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRECOCUSTONull() {
                this[this.tableRelEstoque.PRECOCUSTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODGRUPOPRODUTONull() {
                return this.IsNull(this.tableRelEstoque.CODGRUPOPRODUTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODGRUPOPRODUTONull() {
                this[this.tableRelEstoque.CODGRUPOPRODUTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGRPDESCNull() {
                return this.IsNull(this.tableRelEstoque.GRPDESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGRPDESCNull() {
                this[this.tableRelEstoque.GRPDESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsESTOQUEATUALNull() {
                return this.IsNull(this.tableRelEstoque.ESTOQUEATUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetESTOQUEATUALNull() {
                this[this.tableRelEstoque.ESTOQUEATUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsESTOQUEMINNull() {
                return this.IsNull(this.tableRelEstoque.ESTOQUEMINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetESTOQUEMINNull() {
                this[this.tableRelEstoque.ESTOQUEMINColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RelProdutoRow : global::System.Data.DataRow {
            
            private RelProdutoDataTable tableRelProduto;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RelProdutoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRelProduto = ((RelProdutoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GRUPO {
                get {
                    try {
                        return ((string)(this[this.tableRelProduto.GRUPOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GRUPO\' in table \'RelProduto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelProduto.GRUPOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUTO {
                get {
                    try {
                        return ((string)(this[this.tableRelProduto.PRODUTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUTO\' in table \'RelProduto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelProduto.PRODUTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATACADASTRO {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRelProduto.DATACADASTROColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATACADASTRO\' in table \'RelProduto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelProduto.DATACADASTROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PRECOCUSTO {
                get {
                    try {
                        return ((double)(this[this.tableRelProduto.PRECOCUSTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRECOCUSTO\' in table \'RelProduto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelProduto.PRECOCUSTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PRECOVENDA {
                get {
                    try {
                        return ((double)(this[this.tableRelProduto.PRECOVENDAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRECOVENDA\' in table \'RelProduto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelProduto.PRECOVENDAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ESTOQUEATUAL {
                get {
                    try {
                        return ((string)(this[this.tableRelProduto.ESTOQUEATUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ESTOQUEATUAL\' in table \'RelProduto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelProduto.ESTOQUEATUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ESTOQUEMIN {
                get {
                    try {
                        return ((string)(this[this.tableRelProduto.ESTOQUEMINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ESTOQUEMIN\' in table \'RelProduto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelProduto.ESTOQUEMINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double IPI {
                get {
                    try {
                        return ((double)(this[this.tableRelProduto.IPIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IPI\' in table \'RelProduto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelProduto.IPIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DESCONTO {
                get {
                    try {
                        return ((double)(this[this.tableRelProduto.DESCONTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCONTO\' in table \'RelProduto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelProduto.DESCONTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CODPROD {
                get {
                    try {
                        return ((string)(this[this.tableRelProduto.CODPRODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODPROD\' in table \'RelProduto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelProduto.CODPRODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CODGRUPO {
                get {
                    try {
                        return ((string)(this[this.tableRelProduto.CODGRUPOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODGRUPO\' in table \'RelProduto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelProduto.CODGRUPOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGRUPONull() {
                return this.IsNull(this.tableRelProduto.GRUPOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGRUPONull() {
                this[this.tableRelProduto.GRUPOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUTONull() {
                return this.IsNull(this.tableRelProduto.PRODUTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUTONull() {
                this[this.tableRelProduto.PRODUTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATACADASTRONull() {
                return this.IsNull(this.tableRelProduto.DATACADASTROColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATACADASTRONull() {
                this[this.tableRelProduto.DATACADASTROColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRECOCUSTONull() {
                return this.IsNull(this.tableRelProduto.PRECOCUSTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRECOCUSTONull() {
                this[this.tableRelProduto.PRECOCUSTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRECOVENDANull() {
                return this.IsNull(this.tableRelProduto.PRECOVENDAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRECOVENDANull() {
                this[this.tableRelProduto.PRECOVENDAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsESTOQUEATUALNull() {
                return this.IsNull(this.tableRelProduto.ESTOQUEATUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetESTOQUEATUALNull() {
                this[this.tableRelProduto.ESTOQUEATUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsESTOQUEMINNull() {
                return this.IsNull(this.tableRelProduto.ESTOQUEMINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetESTOQUEMINNull() {
                this[this.tableRelProduto.ESTOQUEMINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIPINull() {
                return this.IsNull(this.tableRelProduto.IPIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIPINull() {
                this[this.tableRelProduto.IPIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCONTONull() {
                return this.IsNull(this.tableRelProduto.DESCONTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCONTONull() {
                this[this.tableRelProduto.DESCONTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODPRODNull() {
                return this.IsNull(this.tableRelProduto.CODPRODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODPRODNull() {
                this[this.tableRelProduto.CODPRODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODGRUPONull() {
                return this.IsNull(this.tableRelProduto.CODGRUPOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODGRUPONull() {
                this[this.tableRelProduto.CODGRUPOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RelNotaFiscalRow : global::System.Data.DataRow {
            
            private RelNotaFiscalDataTable tableRelNotaFiscal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RelNotaFiscalRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRelNotaFiscal = ((RelNotaFiscalDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NrNotaFiscal {
                get {
                    try {
                        return ((string)(this[this.tableRelNotaFiscal.NrNotaFiscalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NrNotaFiscal\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.NrNotaFiscalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RazaoSocial {
                get {
                    try {
                        return ((string)(this[this.tableRelNotaFiscal.RazaoSocialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RazaoSocial\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.RazaoSocialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Serie {
                get {
                    try {
                        return ((string)(this[this.tableRelNotaFiscal.SerieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Serie\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.SerieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DataEmissao {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRelNotaFiscal.DataEmissaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataEmissao\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.DataEmissaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IE {
                get {
                    try {
                        return ((string)(this[this.tableRelNotaFiscal.IEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IE\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.IEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Telefone {
                get {
                    try {
                        return ((string)(this[this.tableRelNotaFiscal.TelefoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Telefone\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.TelefoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Endereco {
                get {
                    try {
                        return ((string)(this[this.tableRelNotaFiscal.EnderecoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Endereco\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.EnderecoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bairro {
                get {
                    try {
                        return ((string)(this[this.tableRelNotaFiscal.BairroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bairro\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.BairroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Municipio {
                get {
                    try {
                        return ((string)(this[this.tableRelNotaFiscal.MunicipioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Municipio\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.MunicipioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ICMS {
                get {
                    try {
                        return ((double)(this[this.tableRelNotaFiscal.ICMSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ICMS\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.ICMSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tipo {
                get {
                    try {
                        return ((string)(this[this.tableRelNotaFiscal.TipoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tipo\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.TipoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CNPJ {
                get {
                    try {
                        return ((string)(this[this.tableRelNotaFiscal.CNPJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CNPJ\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.CNPJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TipoFrete {
                get {
                    try {
                        return ((string)(this[this.tableRelNotaFiscal.TipoFreteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TipoFrete\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.TipoFreteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ValorFrete {
                get {
                    try {
                        return ((double)(this[this.tableRelNotaFiscal.ValorFreteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValorFrete\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.ValorFreteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodVendedor {
                get {
                    try {
                        return ((string)(this[this.tableRelNotaFiscal.CodVendedorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodVendedor\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.CodVendedorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodTransportadora {
                get {
                    try {
                        return ((string)(this[this.tableRelNotaFiscal.CodTransportadoraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodTransportadora\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.CodTransportadoraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DescricaoTransp {
                get {
                    try {
                        return ((string)(this[this.tableRelNotaFiscal.DescricaoTranspColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DescricaoTransp\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.DescricaoTranspColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UfTrans {
                get {
                    try {
                        return ((string)(this[this.tableRelNotaFiscal.UfTransColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UfTrans\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.UfTransColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CnpjTrans {
                get {
                    try {
                        return ((string)(this[this.tableRelNotaFiscal.CnpjTransColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CnpjTrans\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.CnpjTransColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EnderecoTrans {
                get {
                    try {
                        return ((string)(this[this.tableRelNotaFiscal.EnderecoTransColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnderecoTrans\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.EnderecoTransColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MunicipioTrans {
                get {
                    try {
                        return ((string)(this[this.tableRelNotaFiscal.MunicipioTransColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MunicipioTrans\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.MunicipioTransColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IeTrans {
                get {
                    try {
                        return ((string)(this[this.tableRelNotaFiscal.IeTransColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IeTrans\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.IeTransColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NrPedido {
                get {
                    try {
                        return ((int)(this[this.tableRelNotaFiscal.NrPedidoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NrPedido\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.NrPedidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descricao {
                get {
                    try {
                        return ((string)(this[this.tableRelNotaFiscal.DescricaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descricao\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.DescricaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Quantidade {
                get {
                    try {
                        return ((int)(this[this.tableRelNotaFiscal.QuantidadeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantidade\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.QuantidadeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Desconto {
                get {
                    try {
                        return ((double)(this[this.tableRelNotaFiscal.DescontoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Desconto\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.DescontoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Valor {
                get {
                    try {
                        return ((double)(this[this.tableRelNotaFiscal.ValorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Valor\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.ValorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double IPI {
                get {
                    try {
                        return ((double)(this[this.tableRelNotaFiscal.IPIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IPI\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.IPIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CodProduto {
                get {
                    try {
                        return ((int)(this[this.tableRelNotaFiscal.CodProdutoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodProduto\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.CodProdutoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CodIUnidadeMedida {
                get {
                    try {
                        return ((int)(this[this.tableRelNotaFiscal.CodIUnidadeMedidaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodIUnidadeMedida\' in table \'RelNotaFiscal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelNotaFiscal.CodIUnidadeMedidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNrNotaFiscalNull() {
                return this.IsNull(this.tableRelNotaFiscal.NrNotaFiscalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNrNotaFiscalNull() {
                this[this.tableRelNotaFiscal.NrNotaFiscalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRazaoSocialNull() {
                return this.IsNull(this.tableRelNotaFiscal.RazaoSocialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRazaoSocialNull() {
                this[this.tableRelNotaFiscal.RazaoSocialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSerieNull() {
                return this.IsNull(this.tableRelNotaFiscal.SerieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSerieNull() {
                this[this.tableRelNotaFiscal.SerieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataEmissaoNull() {
                return this.IsNull(this.tableRelNotaFiscal.DataEmissaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataEmissaoNull() {
                this[this.tableRelNotaFiscal.DataEmissaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIENull() {
                return this.IsNull(this.tableRelNotaFiscal.IEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIENull() {
                this[this.tableRelNotaFiscal.IEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelefoneNull() {
                return this.IsNull(this.tableRelNotaFiscal.TelefoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelefoneNull() {
                this[this.tableRelNotaFiscal.TelefoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnderecoNull() {
                return this.IsNull(this.tableRelNotaFiscal.EnderecoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnderecoNull() {
                this[this.tableRelNotaFiscal.EnderecoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBairroNull() {
                return this.IsNull(this.tableRelNotaFiscal.BairroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBairroNull() {
                this[this.tableRelNotaFiscal.BairroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMunicipioNull() {
                return this.IsNull(this.tableRelNotaFiscal.MunicipioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMunicipioNull() {
                this[this.tableRelNotaFiscal.MunicipioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsICMSNull() {
                return this.IsNull(this.tableRelNotaFiscal.ICMSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetICMSNull() {
                this[this.tableRelNotaFiscal.ICMSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoNull() {
                return this.IsNull(this.tableRelNotaFiscal.TipoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoNull() {
                this[this.tableRelNotaFiscal.TipoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCNPJNull() {
                return this.IsNull(this.tableRelNotaFiscal.CNPJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCNPJNull() {
                this[this.tableRelNotaFiscal.CNPJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoFreteNull() {
                return this.IsNull(this.tableRelNotaFiscal.TipoFreteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoFreteNull() {
                this[this.tableRelNotaFiscal.TipoFreteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValorFreteNull() {
                return this.IsNull(this.tableRelNotaFiscal.ValorFreteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValorFreteNull() {
                this[this.tableRelNotaFiscal.ValorFreteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodVendedorNull() {
                return this.IsNull(this.tableRelNotaFiscal.CodVendedorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodVendedorNull() {
                this[this.tableRelNotaFiscal.CodVendedorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodTransportadoraNull() {
                return this.IsNull(this.tableRelNotaFiscal.CodTransportadoraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodTransportadoraNull() {
                this[this.tableRelNotaFiscal.CodTransportadoraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescricaoTranspNull() {
                return this.IsNull(this.tableRelNotaFiscal.DescricaoTranspColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescricaoTranspNull() {
                this[this.tableRelNotaFiscal.DescricaoTranspColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUfTransNull() {
                return this.IsNull(this.tableRelNotaFiscal.UfTransColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUfTransNull() {
                this[this.tableRelNotaFiscal.UfTransColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCnpjTransNull() {
                return this.IsNull(this.tableRelNotaFiscal.CnpjTransColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCnpjTransNull() {
                this[this.tableRelNotaFiscal.CnpjTransColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnderecoTransNull() {
                return this.IsNull(this.tableRelNotaFiscal.EnderecoTransColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnderecoTransNull() {
                this[this.tableRelNotaFiscal.EnderecoTransColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMunicipioTransNull() {
                return this.IsNull(this.tableRelNotaFiscal.MunicipioTransColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMunicipioTransNull() {
                this[this.tableRelNotaFiscal.MunicipioTransColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIeTransNull() {
                return this.IsNull(this.tableRelNotaFiscal.IeTransColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIeTransNull() {
                this[this.tableRelNotaFiscal.IeTransColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNrPedidoNull() {
                return this.IsNull(this.tableRelNotaFiscal.NrPedidoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNrPedidoNull() {
                this[this.tableRelNotaFiscal.NrPedidoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescricaoNull() {
                return this.IsNull(this.tableRelNotaFiscal.DescricaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescricaoNull() {
                this[this.tableRelNotaFiscal.DescricaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantidadeNull() {
                return this.IsNull(this.tableRelNotaFiscal.QuantidadeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantidadeNull() {
                this[this.tableRelNotaFiscal.QuantidadeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescontoNull() {
                return this.IsNull(this.tableRelNotaFiscal.DescontoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescontoNull() {
                this[this.tableRelNotaFiscal.DescontoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValorNull() {
                return this.IsNull(this.tableRelNotaFiscal.ValorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValorNull() {
                this[this.tableRelNotaFiscal.ValorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIPINull() {
                return this.IsNull(this.tableRelNotaFiscal.IPIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIPINull() {
                this[this.tableRelNotaFiscal.IPIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodProdutoNull() {
                return this.IsNull(this.tableRelNotaFiscal.CodProdutoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodProdutoNull() {
                this[this.tableRelNotaFiscal.CodProdutoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodIUnidadeMedidaNull() {
                return this.IsNull(this.tableRelNotaFiscal.CodIUnidadeMedidaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodIUnidadeMedidaNull() {
                this[this.tableRelNotaFiscal.CodIUnidadeMedidaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ACESSORowChangeEvent : global::System.EventArgs {
            
            private ACESSORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ACESSORowChangeEvent(ACESSORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ACESSORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CLIENTERowChangeEvent : global::System.EventArgs {
            
            private CLIENTERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTERowChangeEvent(CLIENTERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CONDICAOPAGAMENTORowChangeEvent : global::System.EventArgs {
            
            private CONDICAOPAGAMENTORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONDICAOPAGAMENTORowChangeEvent(CONDICAOPAGAMENTORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONDICAOPAGAMENTORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GRUPOPRODUTORowChangeEvent : global::System.EventArgs {
            
            private GRUPOPRODUTORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPOPRODUTORowChangeEvent(GRUPOPRODUTORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPOPRODUTORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ICMSRowChangeEvent : global::System.EventArgs {
            
            private ICMSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ICMSRowChangeEvent(ICMSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ICMSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ITEMPEDIDORowChangeEvent : global::System.EventArgs {
            
            private ITEMPEDIDORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ITEMPEDIDORowChangeEvent(ITEMPEDIDORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ITEMPEDIDORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MODULORowChangeEvent : global::System.EventArgs {
            
            private MODULORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MODULORowChangeEvent(MODULORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MODULORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PEDIDORowChangeEvent : global::System.EventArgs {
            
            private PEDIDORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PEDIDORowChangeEvent(PEDIDORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PEDIDORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PRODUTORowChangeEvent : global::System.EventArgs {
            
            private PRODUTORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUTORowChangeEvent(PRODUTORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUTORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class REGIAORowChangeEvent : global::System.EventArgs {
            
            private REGIAORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGIAORowChangeEvent(REGIAORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGIAORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TRANSPORTADORARowChangeEvent : global::System.EventArgs {
            
            private TRANSPORTADORARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSPORTADORARowChangeEvent(TRANSPORTADORARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSPORTADORARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TRANSPORTADORAVIARowChangeEvent : global::System.EventArgs {
            
            private TRANSPORTADORAVIARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSPORTADORAVIARowChangeEvent(TRANSPORTADORAVIARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSPORTADORAVIARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UNIDADEMEDIDARowChangeEvent : global::System.EventArgs {
            
            private UNIDADEMEDIDARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADEMEDIDARowChangeEvent(UNIDADEMEDIDARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADEMEDIDARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class USUARIORowChangeEvent : global::System.EventArgs {
            
            private USUARIORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIORowChangeEvent(USUARIORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class VENDEDORRowChangeEvent : global::System.EventArgs {
            
            private VENDEDORRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VENDEDORRowChangeEvent(VENDEDORRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VENDEDORRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class VIATRANSPORTERowChangeEvent : global::System.EventArgs {
            
            private VIATRANSPORTERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VIATRANSPORTERowChangeEvent(VIATRANSPORTERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VIATRANSPORTERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ATUCUBORowChangeEvent : global::System.EventArgs {
            
            private ATUCUBORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATUCUBORowChangeEvent(ATUCUBORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATUCUBORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class modeloRowChangeEvent : global::System.EventArgs {
            
            private modeloRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public modeloRowChangeEvent(modeloRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public modeloRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class modeloCampoRowChangeEvent : global::System.EventArgs {
            
            private modeloCampoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public modeloCampoRowChangeEvent(modeloCampoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public modeloCampoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class NOTAFISCALRowChangeEvent : global::System.EventArgs {
            
            private NOTAFISCALRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NOTAFISCALRowChangeEvent(NOTAFISCALRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NOTAFISCALRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ItemNotaFiscalRowChangeEvent : global::System.EventArgs {
            
            private ItemNotaFiscalRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemNotaFiscalRowChangeEvent(ItemNotaFiscalRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemNotaFiscalRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RelPedidoRowChangeEvent : global::System.EventArgs {
            
            private RelPedidoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelPedidoRowChangeEvent(RelPedidoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelPedidoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RelVendedorRowChangeEvent : global::System.EventArgs {
            
            private RelVendedorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelVendedorRowChangeEvent(RelVendedorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelVendedorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RelEstoqueRowChangeEvent : global::System.EventArgs {
            
            private RelEstoqueRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelEstoqueRowChangeEvent(RelEstoqueRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelEstoqueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RelProdutoRowChangeEvent : global::System.EventArgs {
            
            private RelProdutoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelProdutoRowChangeEvent(RelProdutoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelProdutoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RelNotaFiscalRowChangeEvent : global::System.EventArgs {
            
            private RelNotaFiscalRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelNotaFiscalRowChangeEvent(RelNotaFiscalRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelNotaFiscalRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Comercial.COMERCIALDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ACESSOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ACESSOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ACESSO";
            tableMapping.ColumnMappings.Add("CODMODULO", "CODMODULO");
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ACESSO] WHERE (([CODMODULO] = @Original_CODMODULO) AND ([CODUS" +
                "UARIO] = @Original_CODUSUARIO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODMODULO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODMODULO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ACESSO] ([CODMODULO], [CODUSUARIO]) VALUES (@CODMODULO, @CODUS" +
                "UARIO);\r\nSELECT CODMODULO, CODUSUARIO FROM ACESSO WHERE (CODMODULO = @CODMODULO)" +
                " AND (CODUSUARIO = @CODUSUARIO)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODMODULO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODMODULO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODUSUARIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ACESSO] SET [CODMODULO] = @CODMODULO, [CODUSUARIO] = @CODUSUARIO WHERE (([CODMODULO] = @Original_CODMODULO) AND ([CODUSUARIO] = @Original_CODUSUARIO));
SELECT CODMODULO, CODUSUARIO FROM ACESSO WHERE (CODMODULO = @CODMODULO) AND (CODUSUARIO = @CODUSUARIO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODMODULO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODMODULO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODUSUARIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODMODULO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODMODULO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Comercial.Properties.Settings.Default.COMERCIALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CODMODULO, CODUSUARIO FROM dbo.ACESSO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(COMERCIALDataSet.ACESSODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual COMERCIALDataSet.ACESSODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            COMERCIALDataSet.ACESSODataTable dataTable = new COMERCIALDataSet.ACESSODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet.ACESSODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ACESSO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_CODMODULO, int Original_CODUSUARIO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_CODMODULO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_CODUSUARIO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int CODMODULO, int CODUSUARIO) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(CODMODULO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(CODUSUARIO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int CODMODULO, int CODUSUARIO, int Original_CODMODULO, int Original_CODUSUARIO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(CODMODULO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(CODUSUARIO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_CODMODULO));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_CODUSUARIO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Original_CODMODULO, int Original_CODUSUARIO) {
            return this.Update(Original_CODMODULO, Original_CODUSUARIO, Original_CODMODULO, Original_CODUSUARIO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CLIENTETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CLIENTETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CLIENTE";
            tableMapping.ColumnMappings.Add("CNPJ", "CNPJ");
            tableMapping.ColumnMappings.Add("RAZAOSOCIAL", "RAZAOSOCIAL");
            tableMapping.ColumnMappings.Add("NOMEFANTASIA", "NOMEFANTASIA");
            tableMapping.ColumnMappings.Add("TELEFONE", "TELEFONE");
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL");
            tableMapping.ColumnMappings.Add("IE", "IE");
            tableMapping.ColumnMappings.Add("ENDERECO", "ENDERECO");
            tableMapping.ColumnMappings.Add("BAIRRO", "BAIRRO");
            tableMapping.ColumnMappings.Add("MUNICIPIO", "MUNICIPIO");
            tableMapping.ColumnMappings.Add("UF", "UF");
            tableMapping.ColumnMappings.Add("CEP", "CEP");
            tableMapping.ColumnMappings.Add("CODREGIAO", "CODREGIAO");
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO");
            tableMapping.ColumnMappings.Add("AREAATUACAO", "AREAATUACAO");
            tableMapping.ColumnMappings.Add("LIMITECRED", "LIMITECRED");
            tableMapping.ColumnMappings.Add("APROVADOCRED", "APROVADOCRED");
            tableMapping.ColumnMappings.Add("ATIVO", "ATIVO");
            tableMapping.ColumnMappings.Add("NUM", "NUM");
            tableMapping.ColumnMappings.Add("COMPLEMENTO", "COMPLEMENTO");
            tableMapping.ColumnMappings.Add("FAX", "FAX");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [CLIENTE] WHERE (([CNPJ] = @Original_CNPJ) AND ([RAZAOSOCIAL] = @Original_RAZAOSOCIAL) AND ([NOMEFANTASIA] = @Original_NOMEFANTASIA) AND ((@IsNull_TELEFONE = 1 AND [TELEFONE] IS NULL) OR ([TELEFONE] = @Original_TELEFONE)) AND ((@IsNull_EMAIL = 1 AND [EMAIL] IS NULL) OR ([EMAIL] = @Original_EMAIL)) AND ([IE] = @Original_IE) AND ([ENDERECO] = @Original_ENDERECO) AND ([BAIRRO] = @Original_BAIRRO) AND ([MUNICIPIO] = @Original_MUNICIPIO) AND ([UF] = @Original_UF) AND ([CEP] = @Original_CEP) AND ((@IsNull_CODREGIAO = 1 AND [CODREGIAO] IS NULL) OR ([CODREGIAO] = @Original_CODREGIAO)) AND ((@IsNull_CODUSUARIO = 1 AND [CODUSUARIO] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUARIO)) AND ((@IsNull_AREAATUACAO = 1 AND [AREAATUACAO] IS NULL) OR ([AREAATUACAO] = @Original_AREAATUACAO)) AND ((@IsNull_LIMITECRED = 1 AND [LIMITECRED] IS NULL) OR ([LIMITECRED] = @Original_LIMITECRED)) AND ((@IsNull_APROVADOCRED = 1 AND [APROVADOCRED] IS NULL) OR ([APROVADOCRED] = @Original_APROVADOCRED)) AND ((@IsNull_ATIVO = 1 AND [ATIVO] IS NULL) OR ([ATIVO] = @Original_ATIVO)) AND ([NUM] = @Original_NUM) AND ((@IsNull_COMPLEMENTO = 1 AND [COMPLEMENTO] IS NULL) OR ([COMPLEMENTO] = @Original_COMPLEMENTO)) AND ((@IsNull_FAX = 1 AND [FAX] IS NULL) OR ([FAX] = @Original_FAX)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CNPJ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNPJ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RAZAOSOCIAL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAZAOSOCIAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOMEFANTASIA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMEFANTASIA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TELEFONE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TELEFONE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMAIL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ENDERECO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENDERECO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BAIRRO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BAIRRO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MUNICIPIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MUNICIPIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UF", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CODREGIAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODREGIAO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODREGIAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODREGIAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AREAATUACAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREAATUACAO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AREAATUACAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREAATUACAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LIMITECRED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIMITECRED", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LIMITECRED", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIMITECRED", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_APROVADOCRED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APROVADOCRED", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APROVADOCRED", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APROVADOCRED", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATIVO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATIVO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATIVO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATIVO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NUM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COMPLEMENTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPLEMENTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPLEMENTO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPLEMENTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FAX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAX", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [CLIENTE] ([CNPJ], [RAZAOSOCIAL], [NOMEFANTASIA], [TELEFONE], [EMAIL], [IE], [ENDERECO], [BAIRRO], [MUNICIPIO], [UF], [CEP], [CODREGIAO], [CODUSUARIO], [AREAATUACAO], [LIMITECRED], [APROVADOCRED], [ATIVO], [NUM], [COMPLEMENTO], [FAX]) VALUES (@CNPJ, @RAZAOSOCIAL, @NOMEFANTASIA, @TELEFONE, @EMAIL, @IE, @ENDERECO, @BAIRRO, @MUNICIPIO, @UF, @CEP, @CODREGIAO, @CODUSUARIO, @AREAATUACAO, @LIMITECRED, @APROVADOCRED, @ATIVO, @NUM, @COMPLEMENTO, @FAX);
SELECT CNPJ, RAZAOSOCIAL, NOMEFANTASIA, TELEFONE, EMAIL, IE, ENDERECO, BAIRRO, MUNICIPIO, UF, CEP, CODREGIAO, CODUSUARIO, AREAATUACAO, LIMITECRED, APROVADOCRED, ATIVO, NUM, COMPLEMENTO, FAX FROM CLIENTE WHERE (CNPJ = @CNPJ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CNPJ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNPJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RAZAOSOCIAL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAZAOSOCIAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOMEFANTASIA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMEFANTASIA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TELEFONE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENDERECO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENDERECO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BAIRRO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BAIRRO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MUNICIPIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MUNICIPIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UF", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODREGIAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODREGIAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODUSUARIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AREAATUACAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREAATUACAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LIMITECRED", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIMITECRED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APROVADOCRED", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APROVADOCRED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATIVO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATIVO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NUM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPLEMENTO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPLEMENTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAX", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [CLIENTE] SET [CNPJ] = @CNPJ, [RAZAOSOCIAL] = @RAZAOSOCIAL, [NOMEFANTASIA]" +
                " = @NOMEFANTASIA, [TELEFONE] = @TELEFONE, [EMAIL] = @EMAIL, [IE] = @IE, [ENDEREC" +
                "O] = @ENDERECO, [BAIRRO] = @BAIRRO, [MUNICIPIO] = @MUNICIPIO, [UF] = @UF, [CEP] " +
                "= @CEP, [CODREGIAO] = @CODREGIAO, [CODUSUARIO] = @CODUSUARIO, [AREAATUACAO] = @A" +
                "REAATUACAO, [LIMITECRED] = @LIMITECRED, [APROVADOCRED] = @APROVADOCRED, [ATIVO] " +
                "= @ATIVO, [NUM] = @NUM, [COMPLEMENTO] = @COMPLEMENTO, [FAX] = @FAX WHERE (([CNPJ" +
                "] = @Original_CNPJ) AND ([RAZAOSOCIAL] = @Original_RAZAOSOCIAL) AND ([NOMEFANTAS" +
                "IA] = @Original_NOMEFANTASIA) AND ((@IsNull_TELEFONE = 1 AND [TELEFONE] IS NULL)" +
                " OR ([TELEFONE] = @Original_TELEFONE)) AND ((@IsNull_EMAIL = 1 AND [EMAIL] IS NU" +
                "LL) OR ([EMAIL] = @Original_EMAIL)) AND ([IE] = @Original_IE) AND ([ENDERECO] = " +
                "@Original_ENDERECO) AND ([BAIRRO] = @Original_BAIRRO) AND ([MUNICIPIO] = @Origin" +
                "al_MUNICIPIO) AND ([UF] = @Original_UF) AND ([CEP] = @Original_CEP) AND ((@IsNul" +
                "l_CODREGIAO = 1 AND [CODREGIAO] IS NULL) OR ([CODREGIAO] = @Original_CODREGIAO))" +
                " AND ((@IsNull_CODUSUARIO = 1 AND [CODUSUARIO] IS NULL) OR ([CODUSUARIO] = @Orig" +
                "inal_CODUSUARIO)) AND ((@IsNull_AREAATUACAO = 1 AND [AREAATUACAO] IS NULL) OR ([" +
                "AREAATUACAO] = @Original_AREAATUACAO)) AND ((@IsNull_LIMITECRED = 1 AND [LIMITEC" +
                "RED] IS NULL) OR ([LIMITECRED] = @Original_LIMITECRED)) AND ((@IsNull_APROVADOCR" +
                "ED = 1 AND [APROVADOCRED] IS NULL) OR ([APROVADOCRED] = @Original_APROVADOCRED))" +
                " AND ((@IsNull_ATIVO = 1 AND [ATIVO] IS NULL) OR ([ATIVO] = @Original_ATIVO)) AN" +
                "D ([NUM] = @Original_NUM) AND ((@IsNull_COMPLEMENTO = 1 AND [COMPLEMENTO] IS NUL" +
                "L) OR ([COMPLEMENTO] = @Original_COMPLEMENTO)) AND ((@IsNull_FAX = 1 AND [FAX] I" +
                "S NULL) OR ([FAX] = @Original_FAX)));\r\nSELECT CNPJ, RAZAOSOCIAL, NOMEFANTASIA, T" +
                "ELEFONE, EMAIL, IE, ENDERECO, BAIRRO, MUNICIPIO, UF, CEP, CODREGIAO, CODUSUARIO," +
                " AREAATUACAO, LIMITECRED, APROVADOCRED, ATIVO, NUM, COMPLEMENTO, FAX FROM CLIENT" +
                "E WHERE (CNPJ = @CNPJ)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CNPJ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNPJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RAZAOSOCIAL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAZAOSOCIAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOMEFANTASIA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMEFANTASIA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TELEFONE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENDERECO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENDERECO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BAIRRO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BAIRRO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MUNICIPIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MUNICIPIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UF", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODREGIAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODREGIAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODUSUARIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AREAATUACAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREAATUACAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LIMITECRED", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIMITECRED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APROVADOCRED", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APROVADOCRED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATIVO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATIVO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NUM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPLEMENTO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPLEMENTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAX", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CNPJ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNPJ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RAZAOSOCIAL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAZAOSOCIAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOMEFANTASIA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMEFANTASIA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TELEFONE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TELEFONE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMAIL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ENDERECO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENDERECO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BAIRRO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BAIRRO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MUNICIPIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MUNICIPIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UF", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CODREGIAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODREGIAO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODREGIAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODREGIAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AREAATUACAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREAATUACAO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AREAATUACAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREAATUACAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LIMITECRED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIMITECRED", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LIMITECRED", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIMITECRED", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_APROVADOCRED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APROVADOCRED", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APROVADOCRED", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APROVADOCRED", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATIVO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATIVO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATIVO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATIVO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NUM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COMPLEMENTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPLEMENTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPLEMENTO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPLEMENTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FAX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAX", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Comercial.Properties.Settings.Default.COMERCIALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT      CNPJ, RAZAOSOCIAL, NOMEFANTASIA, TELEFONE, EMAIL, IE, ENDERECO, BAIRR" +
                "O, MUNICIPIO, UF, CEP, CODREGIAO, CODUSUARIO, AREAATUACAO, \r\n                   " +
                "     LIMITECRED, APROVADOCRED, ATIVO, NUM, COMPLEMENTO, FAX\r\nFROM          CLIEN" +
                "TE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT APROVADOCRED, AREAATUACAO, ATIVO, BAIRRO, CEP, CNPJ, CODREGIAO, CODUSUARIO, COMPLEMENTO, EMAIL, ENDERECO, FAX, IE, LIMITECRED, MUNICIPIO, NOMEFANTASIA, NUM, RAZAOSOCIAL, TELEFONE, UF FROM CLIENTE WHERE (CNPJ = @cnpj) OR (NOMEFANTASIA LIKE + '%' + @nomefantasia + '%')";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cnpj", global::System.Data.SqlDbType.VarChar, 14, global::System.Data.ParameterDirection.Input, 0, 0, "CNPJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nomefantasia", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "NOMEFANTASIA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(COMERCIALDataSet.CLIENTEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual COMERCIALDataSet.CLIENTEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            COMERCIALDataSet.CLIENTEDataTable dataTable = new COMERCIALDataSet.CLIENTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int Consulta(COMERCIALDataSet.CLIENTEDataTable dataTable, string cnpj, string nomefantasia) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((cnpj == null)) {
                throw new global::System.ArgumentNullException("cnpj");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(cnpj));
            }
            if ((nomefantasia == null)) {
                throw new global::System.ArgumentNullException("nomefantasia");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(nomefantasia));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet.CLIENTEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CLIENTE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_CNPJ, 
                    string Original_RAZAOSOCIAL, 
                    string Original_NOMEFANTASIA, 
                    string Original_TELEFONE, 
                    string Original_EMAIL, 
                    string Original_IE, 
                    string Original_ENDERECO, 
                    string Original_BAIRRO, 
                    string Original_MUNICIPIO, 
                    string Original_UF, 
                    string Original_CEP, 
                    global::System.Nullable<int> Original_CODREGIAO, 
                    global::System.Nullable<int> Original_CODUSUARIO, 
                    string Original_AREAATUACAO, 
                    global::System.Nullable<double> Original_LIMITECRED, 
                    string Original_APROVADOCRED, 
                    string Original_ATIVO, 
                    string Original_NUM, 
                    string Original_COMPLEMENTO, 
                    string Original_FAX) {
            if ((Original_CNPJ == null)) {
                throw new global::System.ArgumentNullException("Original_CNPJ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CNPJ));
            }
            if ((Original_RAZAOSOCIAL == null)) {
                throw new global::System.ArgumentNullException("Original_RAZAOSOCIAL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_RAZAOSOCIAL));
            }
            if ((Original_NOMEFANTASIA == null)) {
                throw new global::System.ArgumentNullException("Original_NOMEFANTASIA");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_NOMEFANTASIA));
            }
            if ((Original_TELEFONE == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TELEFONE));
            }
            if ((Original_EMAIL == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_EMAIL));
            }
            if ((Original_IE == null)) {
                throw new global::System.ArgumentNullException("Original_IE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_IE));
            }
            if ((Original_ENDERECO == null)) {
                throw new global::System.ArgumentNullException("Original_ENDERECO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_ENDERECO));
            }
            if ((Original_BAIRRO == null)) {
                throw new global::System.ArgumentNullException("Original_BAIRRO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_BAIRRO));
            }
            if ((Original_MUNICIPIO == null)) {
                throw new global::System.ArgumentNullException("Original_MUNICIPIO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_MUNICIPIO));
            }
            if ((Original_UF == null)) {
                throw new global::System.ArgumentNullException("Original_UF");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_UF));
            }
            if ((Original_CEP == null)) {
                throw new global::System.ArgumentNullException("Original_CEP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_CEP));
            }
            if ((Original_CODREGIAO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_CODREGIAO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_CODUSUARIO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_CODUSUARIO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_AREAATUACAO == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_AREAATUACAO));
            }
            if ((Original_LIMITECRED.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(Original_LIMITECRED.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_APROVADOCRED == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_APROVADOCRED));
            }
            if ((Original_ATIVO == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_ATIVO));
            }
            if ((Original_NUM == null)) {
                throw new global::System.ArgumentNullException("Original_NUM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_NUM));
            }
            if ((Original_COMPLEMENTO == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_COMPLEMENTO));
            }
            if ((Original_FAX == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_FAX));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string CNPJ, 
                    string RAZAOSOCIAL, 
                    string NOMEFANTASIA, 
                    string TELEFONE, 
                    string EMAIL, 
                    string IE, 
                    string ENDERECO, 
                    string BAIRRO, 
                    string MUNICIPIO, 
                    string UF, 
                    string CEP, 
                    global::System.Nullable<int> CODREGIAO, 
                    global::System.Nullable<int> CODUSUARIO, 
                    string AREAATUACAO, 
                    global::System.Nullable<double> LIMITECRED, 
                    string APROVADOCRED, 
                    string ATIVO, 
                    string NUM, 
                    string COMPLEMENTO, 
                    string FAX) {
            if ((CNPJ == null)) {
                throw new global::System.ArgumentNullException("CNPJ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CNPJ));
            }
            if ((RAZAOSOCIAL == null)) {
                throw new global::System.ArgumentNullException("RAZAOSOCIAL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(RAZAOSOCIAL));
            }
            if ((NOMEFANTASIA == null)) {
                throw new global::System.ArgumentNullException("NOMEFANTASIA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(NOMEFANTASIA));
            }
            if ((TELEFONE == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(TELEFONE));
            }
            if ((EMAIL == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(EMAIL));
            }
            if ((IE == null)) {
                throw new global::System.ArgumentNullException("IE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(IE));
            }
            if ((ENDERECO == null)) {
                throw new global::System.ArgumentNullException("ENDERECO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ENDERECO));
            }
            if ((BAIRRO == null)) {
                throw new global::System.ArgumentNullException("BAIRRO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(BAIRRO));
            }
            if ((MUNICIPIO == null)) {
                throw new global::System.ArgumentNullException("MUNICIPIO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(MUNICIPIO));
            }
            if ((UF == null)) {
                throw new global::System.ArgumentNullException("UF");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(UF));
            }
            if ((CEP == null)) {
                throw new global::System.ArgumentNullException("CEP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(CEP));
            }
            if ((CODREGIAO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(CODREGIAO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((CODUSUARIO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(CODUSUARIO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((AREAATUACAO == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(AREAATUACAO));
            }
            if ((LIMITECRED.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(LIMITECRED.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((APROVADOCRED == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(APROVADOCRED));
            }
            if ((ATIVO == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ATIVO));
            }
            if ((NUM == null)) {
                throw new global::System.ArgumentNullException("NUM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(NUM));
            }
            if ((COMPLEMENTO == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(COMPLEMENTO));
            }
            if ((FAX == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(FAX));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CNPJ, 
                    string RAZAOSOCIAL, 
                    string NOMEFANTASIA, 
                    string TELEFONE, 
                    string EMAIL, 
                    string IE, 
                    string ENDERECO, 
                    string BAIRRO, 
                    string MUNICIPIO, 
                    string UF, 
                    string CEP, 
                    global::System.Nullable<int> CODREGIAO, 
                    global::System.Nullable<int> CODUSUARIO, 
                    string AREAATUACAO, 
                    global::System.Nullable<double> LIMITECRED, 
                    string APROVADOCRED, 
                    string ATIVO, 
                    string NUM, 
                    string COMPLEMENTO, 
                    string FAX, 
                    string Original_CNPJ, 
                    string Original_RAZAOSOCIAL, 
                    string Original_NOMEFANTASIA, 
                    string Original_TELEFONE, 
                    string Original_EMAIL, 
                    string Original_IE, 
                    string Original_ENDERECO, 
                    string Original_BAIRRO, 
                    string Original_MUNICIPIO, 
                    string Original_UF, 
                    string Original_CEP, 
                    global::System.Nullable<int> Original_CODREGIAO, 
                    global::System.Nullable<int> Original_CODUSUARIO, 
                    string Original_AREAATUACAO, 
                    global::System.Nullable<double> Original_LIMITECRED, 
                    string Original_APROVADOCRED, 
                    string Original_ATIVO, 
                    string Original_NUM, 
                    string Original_COMPLEMENTO, 
                    string Original_FAX) {
            if ((CNPJ == null)) {
                throw new global::System.ArgumentNullException("CNPJ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CNPJ));
            }
            if ((RAZAOSOCIAL == null)) {
                throw new global::System.ArgumentNullException("RAZAOSOCIAL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(RAZAOSOCIAL));
            }
            if ((NOMEFANTASIA == null)) {
                throw new global::System.ArgumentNullException("NOMEFANTASIA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(NOMEFANTASIA));
            }
            if ((TELEFONE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(TELEFONE));
            }
            if ((EMAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(EMAIL));
            }
            if ((IE == null)) {
                throw new global::System.ArgumentNullException("IE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(IE));
            }
            if ((ENDERECO == null)) {
                throw new global::System.ArgumentNullException("ENDERECO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ENDERECO));
            }
            if ((BAIRRO == null)) {
                throw new global::System.ArgumentNullException("BAIRRO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(BAIRRO));
            }
            if ((MUNICIPIO == null)) {
                throw new global::System.ArgumentNullException("MUNICIPIO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(MUNICIPIO));
            }
            if ((UF == null)) {
                throw new global::System.ArgumentNullException("UF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(UF));
            }
            if ((CEP == null)) {
                throw new global::System.ArgumentNullException("CEP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(CEP));
            }
            if ((CODREGIAO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(CODREGIAO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((CODUSUARIO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(CODUSUARIO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((AREAATUACAO == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(AREAATUACAO));
            }
            if ((LIMITECRED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(LIMITECRED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((APROVADOCRED == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(APROVADOCRED));
            }
            if ((ATIVO == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(ATIVO));
            }
            if ((NUM == null)) {
                throw new global::System.ArgumentNullException("NUM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(NUM));
            }
            if ((COMPLEMENTO == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(COMPLEMENTO));
            }
            if ((FAX == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(FAX));
            }
            if ((Original_CNPJ == null)) {
                throw new global::System.ArgumentNullException("Original_CNPJ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_CNPJ));
            }
            if ((Original_RAZAOSOCIAL == null)) {
                throw new global::System.ArgumentNullException("Original_RAZAOSOCIAL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_RAZAOSOCIAL));
            }
            if ((Original_NOMEFANTASIA == null)) {
                throw new global::System.ArgumentNullException("Original_NOMEFANTASIA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_NOMEFANTASIA));
            }
            if ((Original_TELEFONE == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_TELEFONE));
            }
            if ((Original_EMAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_EMAIL));
            }
            if ((Original_IE == null)) {
                throw new global::System.ArgumentNullException("Original_IE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_IE));
            }
            if ((Original_ENDERECO == null)) {
                throw new global::System.ArgumentNullException("Original_ENDERECO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_ENDERECO));
            }
            if ((Original_BAIRRO == null)) {
                throw new global::System.ArgumentNullException("Original_BAIRRO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_BAIRRO));
            }
            if ((Original_MUNICIPIO == null)) {
                throw new global::System.ArgumentNullException("Original_MUNICIPIO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_MUNICIPIO));
            }
            if ((Original_UF == null)) {
                throw new global::System.ArgumentNullException("Original_UF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_UF));
            }
            if ((Original_CEP == null)) {
                throw new global::System.ArgumentNullException("Original_CEP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_CEP));
            }
            if ((Original_CODREGIAO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(Original_CODREGIAO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_CODUSUARIO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(Original_CODUSUARIO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_AREAATUACAO == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_AREAATUACAO));
            }
            if ((Original_LIMITECRED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((double)(Original_LIMITECRED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_APROVADOCRED == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_APROVADOCRED));
            }
            if ((Original_ATIVO == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_ATIVO));
            }
            if ((Original_NUM == null)) {
                throw new global::System.ArgumentNullException("Original_NUM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_NUM));
            }
            if ((Original_COMPLEMENTO == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_COMPLEMENTO));
            }
            if ((Original_FAX == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_FAX));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string RAZAOSOCIAL, 
                    string NOMEFANTASIA, 
                    string TELEFONE, 
                    string EMAIL, 
                    string IE, 
                    string ENDERECO, 
                    string BAIRRO, 
                    string MUNICIPIO, 
                    string UF, 
                    string CEP, 
                    global::System.Nullable<int> CODREGIAO, 
                    global::System.Nullable<int> CODUSUARIO, 
                    string AREAATUACAO, 
                    global::System.Nullable<double> LIMITECRED, 
                    string APROVADOCRED, 
                    string ATIVO, 
                    string NUM, 
                    string COMPLEMENTO, 
                    string FAX, 
                    string Original_CNPJ, 
                    string Original_RAZAOSOCIAL, 
                    string Original_NOMEFANTASIA, 
                    string Original_TELEFONE, 
                    string Original_EMAIL, 
                    string Original_IE, 
                    string Original_ENDERECO, 
                    string Original_BAIRRO, 
                    string Original_MUNICIPIO, 
                    string Original_UF, 
                    string Original_CEP, 
                    global::System.Nullable<int> Original_CODREGIAO, 
                    global::System.Nullable<int> Original_CODUSUARIO, 
                    string Original_AREAATUACAO, 
                    global::System.Nullable<double> Original_LIMITECRED, 
                    string Original_APROVADOCRED, 
                    string Original_ATIVO, 
                    string Original_NUM, 
                    string Original_COMPLEMENTO, 
                    string Original_FAX) {
            return this.Update(Original_CNPJ, RAZAOSOCIAL, NOMEFANTASIA, TELEFONE, EMAIL, IE, ENDERECO, BAIRRO, MUNICIPIO, UF, CEP, CODREGIAO, CODUSUARIO, AREAATUACAO, LIMITECRED, APROVADOCRED, ATIVO, NUM, COMPLEMENTO, FAX, Original_CNPJ, Original_RAZAOSOCIAL, Original_NOMEFANTASIA, Original_TELEFONE, Original_EMAIL, Original_IE, Original_ENDERECO, Original_BAIRRO, Original_MUNICIPIO, Original_UF, Original_CEP, Original_CODREGIAO, Original_CODUSUARIO, Original_AREAATUACAO, Original_LIMITECRED, Original_APROVADOCRED, Original_ATIVO, Original_NUM, Original_COMPLEMENTO, Original_FAX);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CONDICAOPAGAMENTOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CONDICAOPAGAMENTOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CONDICAOPAGAMENTO";
            tableMapping.ColumnMappings.Add("CODCONDICAOPAGAMENTO", "CODCONDICAOPAGAMENTO");
            tableMapping.ColumnMappings.Add("DESCRICAO", "DESCRICAO");
            tableMapping.ColumnMappings.Add("QTDEVEZES", "QTDEVEZES");
            tableMapping.ColumnMappings.Add("ENTRADA", "ENTRADA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[CONDICAOPAGAMENTO] WHERE (([CODCONDICAOPAGAMENTO] = @Original_" +
                "CODCONDICAOPAGAMENTO) AND ([DESCRICAO] = @Original_DESCRICAO) AND ([QTDEVEZES] =" +
                " @Original_QTDEVEZES) AND ([ENTRADA] = @Original_ENTRADA))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODCONDICAOPAGAMENTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODCONDICAOPAGAMENTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QTDEVEZES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QTDEVEZES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ENTRADA", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENTRADA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[CONDICAOPAGAMENTO] ([DESCRICAO], [QTDEVEZES], [ENTRADA]) VALUE" +
                "S (@DESCRICAO, @QTDEVEZES, @ENTRADA);\r\nSELECT CODCONDICAOPAGAMENTO, DESCRICAO, Q" +
                "TDEVEZES, ENTRADA FROM CONDICAOPAGAMENTO WHERE (CODCONDICAOPAGAMENTO = SCOPE_IDE" +
                "NTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QTDEVEZES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QTDEVEZES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENTRADA", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENTRADA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CONDICAOPAGAMENTO] SET [DESCRICAO] = @DESCRICAO, [QTDEVEZES] = @QTDEVEZES, [ENTRADA] = @ENTRADA WHERE (([CODCONDICAOPAGAMENTO] = @Original_CODCONDICAOPAGAMENTO) AND ([DESCRICAO] = @Original_DESCRICAO) AND ([QTDEVEZES] = @Original_QTDEVEZES) AND ([ENTRADA] = @Original_ENTRADA));
SELECT CODCONDICAOPAGAMENTO, DESCRICAO, QTDEVEZES, ENTRADA FROM CONDICAOPAGAMENTO WHERE (CODCONDICAOPAGAMENTO = @CODCONDICAOPAGAMENTO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QTDEVEZES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QTDEVEZES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENTRADA", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENTRADA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODCONDICAOPAGAMENTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODCONDICAOPAGAMENTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QTDEVEZES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QTDEVEZES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ENTRADA", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENTRADA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODCONDICAOPAGAMENTO", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CODCONDICAOPAGAMENTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Comercial.Properties.Settings.Default.COMERCIALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CODCONDICAOPAGAMENTO, DESCRICAO, QTDEVEZES, ENTRADA FROM dbo.CONDICAOPAGAM" +
                "ENTO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(COMERCIALDataSet.CONDICAOPAGAMENTODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual COMERCIALDataSet.CONDICAOPAGAMENTODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            COMERCIALDataSet.CONDICAOPAGAMENTODataTable dataTable = new COMERCIALDataSet.CONDICAOPAGAMENTODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet.CONDICAOPAGAMENTODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CONDICAOPAGAMENTO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_CODCONDICAOPAGAMENTO, string Original_DESCRICAO, int Original_QTDEVEZES, string Original_ENTRADA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_CODCONDICAOPAGAMENTO));
            if ((Original_DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("Original_DESCRICAO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_DESCRICAO));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_QTDEVEZES));
            if ((Original_ENTRADA == null)) {
                throw new global::System.ArgumentNullException("Original_ENTRADA");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ENTRADA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string DESCRICAO, int QTDEVEZES, string ENTRADA) {
            if ((DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("DESCRICAO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(DESCRICAO));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(QTDEVEZES));
            if ((ENTRADA == null)) {
                throw new global::System.ArgumentNullException("ENTRADA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ENTRADA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string DESCRICAO, int QTDEVEZES, string ENTRADA, int Original_CODCONDICAOPAGAMENTO, string Original_DESCRICAO, int Original_QTDEVEZES, string Original_ENTRADA, int CODCONDICAOPAGAMENTO) {
            if ((DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("DESCRICAO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(DESCRICAO));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(QTDEVEZES));
            if ((ENTRADA == null)) {
                throw new global::System.ArgumentNullException("ENTRADA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ENTRADA));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_CODCONDICAOPAGAMENTO));
            if ((Original_DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("Original_DESCRICAO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_DESCRICAO));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_QTDEVEZES));
            if ((Original_ENTRADA == null)) {
                throw new global::System.ArgumentNullException("Original_ENTRADA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_ENTRADA));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(CODCONDICAOPAGAMENTO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string DESCRICAO, int QTDEVEZES, string ENTRADA, int Original_CODCONDICAOPAGAMENTO, string Original_DESCRICAO, int Original_QTDEVEZES, string Original_ENTRADA) {
            return this.Update(DESCRICAO, QTDEVEZES, ENTRADA, Original_CODCONDICAOPAGAMENTO, Original_DESCRICAO, Original_QTDEVEZES, Original_ENTRADA, Original_CODCONDICAOPAGAMENTO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GRUPOPRODUTOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GRUPOPRODUTOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GRUPOPRODUTO";
            tableMapping.ColumnMappings.Add("CODGRUPOPRODUTO", "CODGRUPOPRODUTO");
            tableMapping.ColumnMappings.Add("DESCRICAO", "DESCRICAO");
            tableMapping.ColumnMappings.Add("DESCONTO", "DESCONTO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[GRUPOPRODUTO] WHERE (([CODGRUPOPRODUTO] = @Original_CODGRUPOPR" +
                "ODUTO) AND ([DESCRICAO] = @Original_DESCRICAO) AND ((@IsNull_DESCONTO = 1 AND [D" +
                "ESCONTO] IS NULL) OR ([DESCONTO] = @Original_DESCONTO)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODGRUPOPRODUTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODGRUPOPRODUTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DESCONTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCONTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCONTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCONTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[GRUPOPRODUTO] ([DESCRICAO], [DESCONTO]) VALUES (@DESCRICAO, @D" +
                "ESCONTO);\r\nSELECT CODGRUPOPRODUTO, DESCRICAO, DESCONTO FROM GRUPOPRODUTO WHERE (" +
                "CODGRUPOPRODUTO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCONTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCONTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[GRUPOPRODUTO] SET [DESCRICAO] = @DESCRICAO, [DESCONTO] = @DESCONTO WHERE (([CODGRUPOPRODUTO] = @Original_CODGRUPOPRODUTO) AND ([DESCRICAO] = @Original_DESCRICAO) AND ((@IsNull_DESCONTO = 1 AND [DESCONTO] IS NULL) OR ([DESCONTO] = @Original_DESCONTO)));
SELECT CODGRUPOPRODUTO, DESCRICAO, DESCONTO FROM GRUPOPRODUTO WHERE (CODGRUPOPRODUTO = @CODGRUPOPRODUTO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCONTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCONTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODGRUPOPRODUTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODGRUPOPRODUTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DESCONTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCONTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCONTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCONTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODGRUPOPRODUTO", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CODGRUPOPRODUTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Comercial.Properties.Settings.Default.COMERCIALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CODGRUPOPRODUTO, DESCRICAO, DESCONTO FROM dbo.GRUPOPRODUTO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(COMERCIALDataSet.GRUPOPRODUTODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual COMERCIALDataSet.GRUPOPRODUTODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            COMERCIALDataSet.GRUPOPRODUTODataTable dataTable = new COMERCIALDataSet.GRUPOPRODUTODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet.GRUPOPRODUTODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "GRUPOPRODUTO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_CODGRUPOPRODUTO, string Original_DESCRICAO, global::System.Nullable<double> Original_DESCONTO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_CODGRUPOPRODUTO));
            if ((Original_DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("Original_DESCRICAO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_DESCRICAO));
            }
            if ((Original_DESCONTO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_DESCONTO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string DESCRICAO, global::System.Nullable<double> DESCONTO) {
            if ((DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("DESCRICAO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(DESCRICAO));
            }
            if ((DESCONTO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((double)(DESCONTO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string DESCRICAO, global::System.Nullable<double> DESCONTO, int Original_CODGRUPOPRODUTO, string Original_DESCRICAO, global::System.Nullable<double> Original_DESCONTO, int CODGRUPOPRODUTO) {
            if ((DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("DESCRICAO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(DESCRICAO));
            }
            if ((DESCONTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(DESCONTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_CODGRUPOPRODUTO));
            if ((Original_DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("Original_DESCRICAO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_DESCRICAO));
            }
            if ((Original_DESCONTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(Original_DESCONTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(CODGRUPOPRODUTO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string DESCRICAO, global::System.Nullable<double> DESCONTO, int Original_CODGRUPOPRODUTO, string Original_DESCRICAO, global::System.Nullable<double> Original_DESCONTO) {
            return this.Update(DESCRICAO, DESCONTO, Original_CODGRUPOPRODUTO, Original_DESCRICAO, Original_DESCONTO, Original_CODGRUPOPRODUTO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ICMSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ICMSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ICMS";
            tableMapping.ColumnMappings.Add("UF", "UF");
            tableMapping.ColumnMappings.Add("ALIQUOTA", "ALIQUOTA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ICMS] WHERE (([UF] = @Original_UF) AND ([ALIQUOTA] = @Original" +
                "_ALIQUOTA))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UF", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ALIQUOTA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALIQUOTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ICMS] ([UF], [ALIQUOTA]) VALUES (@UF, @ALIQUOTA);\r\nSELECT UF, " +
                "ALIQUOTA FROM ICMS WHERE (UF = @UF)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UF", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALIQUOTA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALIQUOTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[ICMS] SET [UF] = @UF, [ALIQUOTA] = @ALIQUOTA WHERE (([UF] = @Origin" +
                "al_UF) AND ([ALIQUOTA] = @Original_ALIQUOTA));\r\nSELECT UF, ALIQUOTA FROM ICMS WH" +
                "ERE (UF = @UF)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UF", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALIQUOTA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALIQUOTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UF", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ALIQUOTA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALIQUOTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Comercial.Properties.Settings.Default.COMERCIALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT UF, ALIQUOTA FROM dbo.ICMS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(COMERCIALDataSet.ICMSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual COMERCIALDataSet.ICMSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            COMERCIALDataSet.ICMSDataTable dataTable = new COMERCIALDataSet.ICMSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet.ICMSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ICMS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_UF, double Original_ALIQUOTA) {
            if ((Original_UF == null)) {
                throw new global::System.ArgumentNullException("Original_UF");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_UF));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((double)(Original_ALIQUOTA));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string UF, double ALIQUOTA) {
            if ((UF == null)) {
                throw new global::System.ArgumentNullException("UF");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(UF));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((double)(ALIQUOTA));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string UF, double ALIQUOTA, string Original_UF, double Original_ALIQUOTA) {
            if ((UF == null)) {
                throw new global::System.ArgumentNullException("UF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(UF));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(ALIQUOTA));
            if ((Original_UF == null)) {
                throw new global::System.ArgumentNullException("Original_UF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_UF));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(Original_ALIQUOTA));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(double ALIQUOTA, string Original_UF, double Original_ALIQUOTA) {
            return this.Update(Original_UF, ALIQUOTA, Original_UF, Original_ALIQUOTA);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ITEMPEDIDOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ITEMPEDIDOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ITEMPEDIDO";
            tableMapping.ColumnMappings.Add("NRPEDIDO", "NRPEDIDO");
            tableMapping.ColumnMappings.Add("CODPRODUTO", "CODPRODUTO");
            tableMapping.ColumnMappings.Add("QUANTIDADE", "QUANTIDADE");
            tableMapping.ColumnMappings.Add("DESCONTO", "DESCONTO");
            tableMapping.ColumnMappings.Add("VALOR", "VALOR");
            tableMapping.ColumnMappings.Add("IPI", "IPI");
            tableMapping.ColumnMappings.Add("ITEM", "ITEM");
            tableMapping.ColumnMappings.Add("QUANTIDADELIB", "QUANTIDADELIB");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [ITEMPEDIDO] WHERE (([NRPEDIDO] = @Original_NRPEDIDO) AND ([CODPRODUTO] = @Original_CODPRODUTO) AND ([QUANTIDADE] = @Original_QUANTIDADE) AND ((@IsNull_QUANTIDADELIB = 1 AND [QUANTIDADELIB] IS NULL) OR ([QUANTIDADELIB] = @Original_QUANTIDADELIB)) AND ((@IsNull_DESCONTO = 1 AND [DESCONTO] IS NULL) OR ([DESCONTO] = @Original_DESCONTO)) AND ([VALOR] = @Original_VALOR) AND ((@IsNull_IPI = 1 AND [IPI] IS NULL) OR ([IPI] = @Original_IPI)) AND ((@IsNull_ITEM = 1 AND [ITEM] IS NULL) OR ([ITEM] = @Original_ITEM)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NRPEDIDO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRPEDIDO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODPRODUTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODPRODUTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QUANTIDADE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTIDADE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QUANTIDADELIB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTIDADELIB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QUANTIDADELIB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTIDADELIB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DESCONTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCONTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCONTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCONTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALOR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IPI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IPI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [ITEMPEDIDO] ([NRPEDIDO], [CODPRODUTO], [QUANTIDADE], [QUANTIDADELIB], [DESCONTO], [VALOR], [IPI], [ITEM]) VALUES (@NRPEDIDO, @CODPRODUTO, @QUANTIDADE, @QUANTIDADELIB, @DESCONTO, @VALOR, @IPI, @ITEM);
SELECT NRPEDIDO, CODPRODUTO, QUANTIDADE, QUANTIDADELIB, DESCONTO, VALOR, IPI, item FROM ITEMPEDIDO WHERE (CODPRODUTO = @CODPRODUTO) AND (NRPEDIDO = @NRPEDIDO)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NRPEDIDO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRPEDIDO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODPRODUTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODPRODUTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QUANTIDADE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTIDADE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QUANTIDADELIB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTIDADELIB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCONTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCONTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALOR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IPI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [ITEMPEDIDO] SET [NRPEDIDO] = @NRPEDIDO, [CODPRODUTO] = @CODPRODUTO, [QUANTIDADE] = @QUANTIDADE, [QUANTIDADELIB] = @QUANTIDADELIB, [DESCONTO] = @DESCONTO, [VALOR] = @VALOR, [IPI] = @IPI, [ITEM] = @ITEM WHERE (([NRPEDIDO] = @Original_NRPEDIDO) AND ([CODPRODUTO] = @Original_CODPRODUTO) AND ([QUANTIDADE] = @Original_QUANTIDADE) AND ((@IsNull_QUANTIDADELIB = 1 AND [QUANTIDADELIB] IS NULL) OR ([QUANTIDADELIB] = @Original_QUANTIDADELIB)) AND ((@IsNull_DESCONTO = 1 AND [DESCONTO] IS NULL) OR ([DESCONTO] = @Original_DESCONTO)) AND ([VALOR] = @Original_VALOR) AND ((@IsNull_IPI = 1 AND [IPI] IS NULL) OR ([IPI] = @Original_IPI)) AND ((@IsNull_ITEM = 1 AND [ITEM] IS NULL) OR ([ITEM] = @Original_ITEM)));
SELECT NRPEDIDO, CODPRODUTO, QUANTIDADE, QUANTIDADELIB, DESCONTO, VALOR, IPI, item FROM ITEMPEDIDO WHERE (CODPRODUTO = @CODPRODUTO) AND (NRPEDIDO = @NRPEDIDO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NRPEDIDO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRPEDIDO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODPRODUTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODPRODUTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QUANTIDADE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTIDADE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QUANTIDADELIB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTIDADELIB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCONTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCONTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALOR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IPI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NRPEDIDO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRPEDIDO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODPRODUTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODPRODUTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QUANTIDADE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTIDADE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QUANTIDADELIB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTIDADELIB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QUANTIDADELIB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTIDADELIB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DESCONTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCONTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCONTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCONTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALOR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IPI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IPI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Comercial.Properties.Settings.Default.COMERCIALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT NRPEDIDO, CODPRODUTO, QUANTIDADE, QUANTIDADELIB, DESCONTO, VALOR, IPI, ITE" +
                "M FROM ITEMPEDIDO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT CODPRODUTO, DESCONTO, IPI, NRPEDIDO, QUANTIDADE, QUANTIDADELIB, VALOR, ite" +
                "m FROM ITEMPEDIDO WHERE (NRPEDIDO = @NumeroPedido)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumeroPedido", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "NRPEDIDO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(COMERCIALDataSet.ITEMPEDIDODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual COMERCIALDataSet.ITEMPEDIDODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            COMERCIALDataSet.ITEMPEDIDODataTable dataTable = new COMERCIALDataSet.ITEMPEDIDODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(COMERCIALDataSet.ITEMPEDIDODataTable dataTable, int NumeroPedido) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(NumeroPedido));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet.ITEMPEDIDODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ITEMPEDIDO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_NRPEDIDO, int Original_CODPRODUTO, int Original_QUANTIDADE, global::System.Nullable<int> Original_QUANTIDADELIB, global::System.Nullable<double> Original_DESCONTO, double Original_VALOR, global::System.Nullable<double> Original_IPI, int Original_ITEM) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_NRPEDIDO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_CODPRODUTO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_QUANTIDADE));
            if ((Original_QUANTIDADELIB.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_QUANTIDADELIB.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_DESCONTO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_DESCONTO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_VALOR));
            if ((Original_IPI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((double)(Original_IPI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_ITEM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int NRPEDIDO, int CODPRODUTO, int QUANTIDADE, global::System.Nullable<int> QUANTIDADELIB, global::System.Nullable<double> DESCONTO, double VALOR, global::System.Nullable<double> IPI, int ITEM) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(NRPEDIDO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(CODPRODUTO));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(QUANTIDADE));
            if ((QUANTIDADELIB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(QUANTIDADELIB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((DESCONTO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(DESCONTO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((double)(VALOR));
            if ((IPI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(IPI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(ITEM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int NRPEDIDO, 
                    int CODPRODUTO, 
                    int QUANTIDADE, 
                    global::System.Nullable<int> QUANTIDADELIB, 
                    global::System.Nullable<double> DESCONTO, 
                    double VALOR, 
                    global::System.Nullable<double> IPI, 
                    int ITEM, 
                    int Original_NRPEDIDO, 
                    int Original_CODPRODUTO, 
                    int Original_QUANTIDADE, 
                    global::System.Nullable<int> Original_QUANTIDADELIB, 
                    global::System.Nullable<double> Original_DESCONTO, 
                    double Original_VALOR, 
                    global::System.Nullable<double> Original_IPI, 
                    int Original_ITEM) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(NRPEDIDO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(CODPRODUTO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(QUANTIDADE));
            if ((QUANTIDADELIB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(QUANTIDADELIB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((DESCONTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(DESCONTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(VALOR));
            if ((IPI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(IPI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ITEM));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_NRPEDIDO));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_CODPRODUTO));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_QUANTIDADE));
            if ((Original_QUANTIDADELIB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_QUANTIDADELIB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_DESCONTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(Original_DESCONTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(Original_VALOR));
            if ((Original_IPI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(Original_IPI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_ITEM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int QUANTIDADE, global::System.Nullable<int> QUANTIDADELIB, global::System.Nullable<double> DESCONTO, double VALOR, global::System.Nullable<double> IPI, int ITEM, int Original_NRPEDIDO, int Original_CODPRODUTO, int Original_QUANTIDADE, global::System.Nullable<int> Original_QUANTIDADELIB, global::System.Nullable<double> Original_DESCONTO, double Original_VALOR, global::System.Nullable<double> Original_IPI, int Original_ITEM) {
            return this.Update(Original_NRPEDIDO, Original_CODPRODUTO, QUANTIDADE, QUANTIDADELIB, DESCONTO, VALOR, IPI, ITEM, Original_NRPEDIDO, Original_CODPRODUTO, Original_QUANTIDADE, Original_QUANTIDADELIB, Original_DESCONTO, Original_VALOR, Original_IPI, Original_ITEM);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MODULOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MODULOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MODULO";
            tableMapping.ColumnMappings.Add("CODMODULO", "CODMODULO");
            tableMapping.ColumnMappings.Add("DESCRICAO", "DESCRICAO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[MODULO] WHERE (([CODMODULO] = @Original_CODMODULO) AND ([DESCR" +
                "ICAO] = @Original_DESCRICAO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODMODULO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODMODULO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[MODULO] ([DESCRICAO]) VALUES (@DESCRICAO);\r\nSELECT CODMODULO, " +
                "DESCRICAO FROM MODULO WHERE (CODMODULO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[MODULO] SET [DESCRICAO] = @DESCRICAO WHERE (([CODMODULO] = @Origina" +
                "l_CODMODULO) AND ([DESCRICAO] = @Original_DESCRICAO));\r\nSELECT CODMODULO, DESCRI" +
                "CAO FROM MODULO WHERE (CODMODULO = @CODMODULO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODMODULO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODMODULO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODMODULO", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CODMODULO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Comercial.Properties.Settings.Default.COMERCIALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CODMODULO, DESCRICAO FROM dbo.MODULO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(COMERCIALDataSet.MODULODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual COMERCIALDataSet.MODULODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            COMERCIALDataSet.MODULODataTable dataTable = new COMERCIALDataSet.MODULODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet.MODULODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "MODULO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_CODMODULO, string Original_DESCRICAO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_CODMODULO));
            if ((Original_DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("Original_DESCRICAO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_DESCRICAO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string DESCRICAO) {
            if ((DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("DESCRICAO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(DESCRICAO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string DESCRICAO, int Original_CODMODULO, string Original_DESCRICAO, int CODMODULO) {
            if ((DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("DESCRICAO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(DESCRICAO));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_CODMODULO));
            if ((Original_DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("Original_DESCRICAO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_DESCRICAO));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(CODMODULO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string DESCRICAO, int Original_CODMODULO, string Original_DESCRICAO) {
            return this.Update(DESCRICAO, Original_CODMODULO, Original_DESCRICAO, Original_CODMODULO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PEDIDOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PEDIDOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PEDIDO";
            tableMapping.ColumnMappings.Add("NRPEDIDO", "NRPEDIDO");
            tableMapping.ColumnMappings.Add("TIPO", "TIPO");
            tableMapping.ColumnMappings.Add("DATAEMISSAO", "DATAEMISSAO");
            tableMapping.ColumnMappings.Add("DATAENTREGA", "DATAENTREGA");
            tableMapping.ColumnMappings.Add("CODCONDICAOPAGAMENTO", "CODCONDICAOPAGAMENTO");
            tableMapping.ColumnMappings.Add("SITUACAO", "SITUACAO");
            tableMapping.ColumnMappings.Add("CODVENDEDOR", "CODVENDEDOR");
            tableMapping.ColumnMappings.Add("CODCLIENTE", "CODCLIENTE");
            tableMapping.ColumnMappings.Add("CODTRANSPORTADORA", "CODTRANSPORTADORA");
            tableMapping.ColumnMappings.Add("VALORFRETE", "VALORFRETE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[PEDIDO] WHERE (([NRPEDIDO] = @Original_NRPEDIDO) AND ([TIPO] = @Original_TIPO) AND ((@IsNull_DATAEMISSAO = 1 AND [DATAEMISSAO] IS NULL) OR ([DATAEMISSAO] = @Original_DATAEMISSAO)) AND ((@IsNull_DATAENTREGA = 1 AND [DATAENTREGA] IS NULL) OR ([DATAENTREGA] = @Original_DATAENTREGA)) AND ([CODCONDICAOPAGAMENTO] = @Original_CODCONDICAOPAGAMENTO) AND ((@IsNull_SITUACAO = 1 AND [SITUACAO] IS NULL) OR ([SITUACAO] = @Original_SITUACAO)) AND ([CODVENDEDOR] = @Original_CODVENDEDOR) AND ([CODCLIENTE] = @Original_CODCLIENTE) AND ([CODTRANSPORTADORA] = @Original_CODTRANSPORTADORA) AND ((@IsNull_VALORFRETE = 1 AND [VALORFRETE] IS NULL) OR ([VALORFRETE] = @Original_VALORFRETE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NRPEDIDO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRPEDIDO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TIPO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIPO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DATAEMISSAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATAEMISSAO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATAEMISSAO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATAEMISSAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DATAENTREGA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATAENTREGA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATAENTREGA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATAENTREGA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODCONDICAOPAGAMENTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODCONDICAOPAGAMENTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SITUACAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SITUACAO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SITUACAO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SITUACAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODVENDEDOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODVENDEDOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODCLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODCLIENTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODTRANSPORTADORA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODTRANSPORTADORA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALORFRETE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALORFRETE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALORFRETE", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALORFRETE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PEDIDO] ([TIPO], [DATAEMISSAO], [DATAENTREGA], [CODCONDICAOPAGAMENTO], [SITUACAO], [CODVENDEDOR], [CODCLIENTE], [CODTRANSPORTADORA], [VALORFRETE]) VALUES (@TIPO, @DATAEMISSAO, @DATAENTREGA, @CODCONDICAOPAGAMENTO, @SITUACAO, @CODVENDEDOR, @CODCLIENTE, @CODTRANSPORTADORA, @VALORFRETE);
SELECT NRPEDIDO, TIPO, DATAEMISSAO, DATAENTREGA, CODCONDICAOPAGAMENTO, SITUACAO, CODVENDEDOR, CODCLIENTE, CODTRANSPORTADORA, VALORFRETE FROM PEDIDO WHERE (NRPEDIDO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TIPO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIPO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATAEMISSAO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATAEMISSAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATAENTREGA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATAENTREGA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODCONDICAOPAGAMENTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODCONDICAOPAGAMENTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SITUACAO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SITUACAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODVENDEDOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODVENDEDOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODCLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODCLIENTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODTRANSPORTADORA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODTRANSPORTADORA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALORFRETE", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALORFRETE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PEDIDO] SET [TIPO] = @TIPO, [DATAEMISSAO] = @DATAEMISSAO, [DATAENTREGA] = @DATAENTREGA, [CODCONDICAOPAGAMENTO] = @CODCONDICAOPAGAMENTO, [SITUACAO] = @SITUACAO, [CODVENDEDOR] = @CODVENDEDOR, [CODCLIENTE] = @CODCLIENTE, [CODTRANSPORTADORA] = @CODTRANSPORTADORA, [VALORFRETE] = @VALORFRETE WHERE (([NRPEDIDO] = @Original_NRPEDIDO) AND ([TIPO] = @Original_TIPO) AND ((@IsNull_DATAEMISSAO = 1 AND [DATAEMISSAO] IS NULL) OR ([DATAEMISSAO] = @Original_DATAEMISSAO)) AND ((@IsNull_DATAENTREGA = 1 AND [DATAENTREGA] IS NULL) OR ([DATAENTREGA] = @Original_DATAENTREGA)) AND ([CODCONDICAOPAGAMENTO] = @Original_CODCONDICAOPAGAMENTO) AND ((@IsNull_SITUACAO = 1 AND [SITUACAO] IS NULL) OR ([SITUACAO] = @Original_SITUACAO)) AND ([CODVENDEDOR] = @Original_CODVENDEDOR) AND ([CODCLIENTE] = @Original_CODCLIENTE) AND ([CODTRANSPORTADORA] = @Original_CODTRANSPORTADORA) AND ((@IsNull_VALORFRETE = 1 AND [VALORFRETE] IS NULL) OR ([VALORFRETE] = @Original_VALORFRETE)));
SELECT NRPEDIDO, TIPO, DATAEMISSAO, DATAENTREGA, CODCONDICAOPAGAMENTO, SITUACAO, CODVENDEDOR, CODCLIENTE, CODTRANSPORTADORA, VALORFRETE FROM PEDIDO WHERE (NRPEDIDO = @NRPEDIDO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TIPO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIPO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATAEMISSAO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATAEMISSAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATAENTREGA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATAENTREGA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODCONDICAOPAGAMENTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODCONDICAOPAGAMENTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SITUACAO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SITUACAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODVENDEDOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODVENDEDOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODCLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODCLIENTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODTRANSPORTADORA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODTRANSPORTADORA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALORFRETE", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALORFRETE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NRPEDIDO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRPEDIDO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TIPO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIPO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DATAEMISSAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATAEMISSAO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATAEMISSAO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATAEMISSAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DATAENTREGA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATAENTREGA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATAENTREGA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATAENTREGA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODCONDICAOPAGAMENTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODCONDICAOPAGAMENTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SITUACAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SITUACAO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SITUACAO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SITUACAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODVENDEDOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODVENDEDOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODCLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODCLIENTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODTRANSPORTADORA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODTRANSPORTADORA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALORFRETE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALORFRETE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALORFRETE", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALORFRETE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NRPEDIDO", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "NRPEDIDO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Comercial.Properties.Settings.Default.COMERCIALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT NRPEDIDO, TIPO, DATAEMISSAO, DATAENTREGA, CODCONDICAOPAGAMENTO, SITUACAO, " +
                "CODVENDEDOR, CODCLIENTE, CODTRANSPORTADORA, VALORFRETE FROM dbo.PEDIDO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT NRPEDIDO, TIPO, DATAEMISSAO, DATAENTREGA, \r\nCODCONDICAOPAGAMENTO, SITUACAO" +
                ", CODVENDEDOR, CODCLIENTE, RAZAOSOCIAL \r\nCODTRANSPORTADORA FROM dbo.PEDIDO INNER" +
                " JOIN CLIENTE ON CODCLIENTE = CNPJ";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT CODCLIENTE, CODCONDICAOPAGAMENTO, CODTRANSPORTADORA, CODVENDEDOR, DATAEMIS" +
                "SAO, DATAENTREGA, NRPEDIDO, SITUACAO, TIPO, VALORFRETE FROM PEDIDO";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT NRPEDIDO, TIPO, DATAEMISSAO, DATAENTREGA, CODCONDICAOPAGAMENTO, SITUACAO, " +
                "CODVENDEDOR, CODCLIENTE, RAZAOSOCIAL\r\nCODTRANSPORTADORA\r\nFROM dbo.PEDIDO INNER J" +
                "OIN CLIENTE ON CODCLIENTE = CNPJ";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(COMERCIALDataSet.PEDIDODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual COMERCIALDataSet.PEDIDODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            COMERCIALDataSet.PEDIDODataTable dataTable = new COMERCIALDataSet.PEDIDODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(COMERCIALDataSet.PEDIDODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy1(COMERCIALDataSet.PEDIDODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int ListPedido(COMERCIALDataSet.PEDIDODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet.PEDIDODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PEDIDO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_NRPEDIDO, string Original_TIPO, global::System.Nullable<global::System.DateTime> Original_DATAEMISSAO, global::System.Nullable<global::System.DateTime> Original_DATAENTREGA, int Original_CODCONDICAOPAGAMENTO, string Original_SITUACAO, string Original_CODVENDEDOR, string Original_CODCLIENTE, string Original_CODTRANSPORTADORA, global::System.Nullable<double> Original_VALORFRETE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_NRPEDIDO));
            if ((Original_TIPO == null)) {
                throw new global::System.ArgumentNullException("Original_TIPO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_TIPO));
            }
            if ((Original_DATAEMISSAO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_DATAEMISSAO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_DATAENTREGA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_DATAENTREGA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_CODCONDICAOPAGAMENTO));
            if ((Original_SITUACAO == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_SITUACAO));
            }
            if ((Original_CODVENDEDOR == null)) {
                throw new global::System.ArgumentNullException("Original_CODVENDEDOR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_CODVENDEDOR));
            }
            if ((Original_CODCLIENTE == null)) {
                throw new global::System.ArgumentNullException("Original_CODCLIENTE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_CODCLIENTE));
            }
            if ((Original_CODTRANSPORTADORA == null)) {
                throw new global::System.ArgumentNullException("Original_CODTRANSPORTADORA");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_CODTRANSPORTADORA));
            }
            if ((Original_VALORFRETE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((double)(Original_VALORFRETE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TIPO, global::System.Nullable<global::System.DateTime> DATAEMISSAO, global::System.Nullable<global::System.DateTime> DATAENTREGA, int CODCONDICAOPAGAMENTO, string SITUACAO, string CODVENDEDOR, string CODCLIENTE, string CODTRANSPORTADORA, global::System.Nullable<double> VALORFRETE) {
            if ((TIPO == null)) {
                throw new global::System.ArgumentNullException("TIPO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TIPO));
            }
            if ((DATAEMISSAO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(DATAEMISSAO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DATAENTREGA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(DATAENTREGA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(CODCONDICAOPAGAMENTO));
            if ((SITUACAO == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(SITUACAO));
            }
            if ((CODVENDEDOR == null)) {
                throw new global::System.ArgumentNullException("CODVENDEDOR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(CODVENDEDOR));
            }
            if ((CODCLIENTE == null)) {
                throw new global::System.ArgumentNullException("CODCLIENTE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(CODCLIENTE));
            }
            if ((CODTRANSPORTADORA == null)) {
                throw new global::System.ArgumentNullException("CODTRANSPORTADORA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(CODTRANSPORTADORA));
            }
            if ((VALORFRETE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(VALORFRETE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string TIPO, 
                    global::System.Nullable<global::System.DateTime> DATAEMISSAO, 
                    global::System.Nullable<global::System.DateTime> DATAENTREGA, 
                    int CODCONDICAOPAGAMENTO, 
                    string SITUACAO, 
                    string CODVENDEDOR, 
                    string CODCLIENTE, 
                    string CODTRANSPORTADORA, 
                    global::System.Nullable<double> VALORFRETE, 
                    int Original_NRPEDIDO, 
                    string Original_TIPO, 
                    global::System.Nullable<global::System.DateTime> Original_DATAEMISSAO, 
                    global::System.Nullable<global::System.DateTime> Original_DATAENTREGA, 
                    int Original_CODCONDICAOPAGAMENTO, 
                    string Original_SITUACAO, 
                    string Original_CODVENDEDOR, 
                    string Original_CODCLIENTE, 
                    string Original_CODTRANSPORTADORA, 
                    global::System.Nullable<double> Original_VALORFRETE, 
                    int NRPEDIDO) {
            if ((TIPO == null)) {
                throw new global::System.ArgumentNullException("TIPO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TIPO));
            }
            if ((DATAEMISSAO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(DATAEMISSAO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DATAENTREGA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(DATAENTREGA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(CODCONDICAOPAGAMENTO));
            if ((SITUACAO == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(SITUACAO));
            }
            if ((CODVENDEDOR == null)) {
                throw new global::System.ArgumentNullException("CODVENDEDOR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(CODVENDEDOR));
            }
            if ((CODCLIENTE == null)) {
                throw new global::System.ArgumentNullException("CODCLIENTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(CODCLIENTE));
            }
            if ((CODTRANSPORTADORA == null)) {
                throw new global::System.ArgumentNullException("CODTRANSPORTADORA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(CODTRANSPORTADORA));
            }
            if ((VALORFRETE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(VALORFRETE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_NRPEDIDO));
            if ((Original_TIPO == null)) {
                throw new global::System.ArgumentNullException("Original_TIPO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_TIPO));
            }
            if ((Original_DATAEMISSAO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_DATAEMISSAO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_DATAENTREGA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_DATAENTREGA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_CODCONDICAOPAGAMENTO));
            if ((Original_SITUACAO == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_SITUACAO));
            }
            if ((Original_CODVENDEDOR == null)) {
                throw new global::System.ArgumentNullException("Original_CODVENDEDOR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_CODVENDEDOR));
            }
            if ((Original_CODCLIENTE == null)) {
                throw new global::System.ArgumentNullException("Original_CODCLIENTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_CODCLIENTE));
            }
            if ((Original_CODTRANSPORTADORA == null)) {
                throw new global::System.ArgumentNullException("Original_CODTRANSPORTADORA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_CODTRANSPORTADORA));
            }
            if ((Original_VALORFRETE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(Original_VALORFRETE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(NRPEDIDO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string TIPO, 
                    global::System.Nullable<global::System.DateTime> DATAEMISSAO, 
                    global::System.Nullable<global::System.DateTime> DATAENTREGA, 
                    int CODCONDICAOPAGAMENTO, 
                    string SITUACAO, 
                    string CODVENDEDOR, 
                    string CODCLIENTE, 
                    string CODTRANSPORTADORA, 
                    global::System.Nullable<double> VALORFRETE, 
                    int Original_NRPEDIDO, 
                    string Original_TIPO, 
                    global::System.Nullable<global::System.DateTime> Original_DATAEMISSAO, 
                    global::System.Nullable<global::System.DateTime> Original_DATAENTREGA, 
                    int Original_CODCONDICAOPAGAMENTO, 
                    string Original_SITUACAO, 
                    string Original_CODVENDEDOR, 
                    string Original_CODCLIENTE, 
                    string Original_CODTRANSPORTADORA, 
                    global::System.Nullable<double> Original_VALORFRETE) {
            return this.Update(TIPO, DATAEMISSAO, DATAENTREGA, CODCONDICAOPAGAMENTO, SITUACAO, CODVENDEDOR, CODCLIENTE, CODTRANSPORTADORA, VALORFRETE, Original_NRPEDIDO, Original_TIPO, Original_DATAEMISSAO, Original_DATAENTREGA, Original_CODCONDICAOPAGAMENTO, Original_SITUACAO, Original_CODVENDEDOR, Original_CODCLIENTE, Original_CODTRANSPORTADORA, Original_VALORFRETE, Original_NRPEDIDO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PRODUTOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PRODUTOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PRODUTO";
            tableMapping.ColumnMappings.Add("CODPRODUTO", "CODPRODUTO");
            tableMapping.ColumnMappings.Add("DESCRICAO", "DESCRICAO");
            tableMapping.ColumnMappings.Add("DATACADASTRO", "DATACADASTRO");
            tableMapping.ColumnMappings.Add("PRECOCUSTO", "PRECOCUSTO");
            tableMapping.ColumnMappings.Add("PESOLIQUIDO", "PESOLIQUIDO");
            tableMapping.ColumnMappings.Add("CODGRUPOPRODUTO", "CODGRUPOPRODUTO");
            tableMapping.ColumnMappings.Add("PRECOVENDA", "PRECOVENDA");
            tableMapping.ColumnMappings.Add("ESTOQUEATUAL", "ESTOQUEATUAL");
            tableMapping.ColumnMappings.Add("ESTOQUEMIN", "ESTOQUEMIN");
            tableMapping.ColumnMappings.Add("IPI", "IPI");
            tableMapping.ColumnMappings.Add("ATIVO", "ATIVO");
            tableMapping.ColumnMappings.Add("CODUNIDADEMEDIDA", "CODUNIDADEMEDIDA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[PRODUTO] WHERE (([CODPRODUTO] = @Original_CODPRODUTO) AND ([DESCRICAO] = @Original_DESCRICAO) AND ([DATACADASTRO] = @Original_DATACADASTRO) AND ([PRECOCUSTO] = @Original_PRECOCUSTO) AND ([PESOLIQUIDO] = @Original_PESOLIQUIDO) AND ([CODGRUPOPRODUTO] = @Original_CODGRUPOPRODUTO) AND ([PRECOVENDA] = @Original_PRECOVENDA) AND ((@IsNull_ESTOQUEATUAL = 1 AND [ESTOQUEATUAL] IS NULL) OR ([ESTOQUEATUAL] = @Original_ESTOQUEATUAL)) AND ((@IsNull_ESTOQUEMIN = 1 AND [ESTOQUEMIN] IS NULL) OR ([ESTOQUEMIN] = @Original_ESTOQUEMIN)) AND ((@IsNull_IPI = 1 AND [IPI] IS NULL) OR ([IPI] = @Original_IPI)) AND ((@IsNull_ATIVO = 1 AND [ATIVO] IS NULL) OR ([ATIVO] = @Original_ATIVO)) AND ((@IsNull_CODUNIDADEMEDIDA = 1 AND [CODUNIDADEMEDIDA] IS NULL) OR ([CODUNIDADEMEDIDA] = @Original_CODUNIDADEMEDIDA)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODPRODUTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODPRODUTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATACADASTRO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATACADASTRO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRECOCUSTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRECOCUSTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PESOLIQUIDO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PESOLIQUIDO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODGRUPOPRODUTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODGRUPOPRODUTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRECOVENDA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRECOVENDA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ESTOQUEATUAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTOQUEATUAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTOQUEATUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTOQUEATUAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ESTOQUEMIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTOQUEMIN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTOQUEMIN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTOQUEMIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IPI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IPI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATIVO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATIVO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATIVO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATIVO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CODUNIDADEMEDIDA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUNIDADEMEDIDA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODUNIDADEMEDIDA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUNIDADEMEDIDA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PRODUTO] ([DESCRICAO], [DATACADASTRO], [PRECOCUSTO], [PESOLIQUIDO], [CODGRUPOPRODUTO], [PRECOVENDA], [ESTOQUEATUAL], [ESTOQUEMIN], [IPI], [ATIVO], [CODUNIDADEMEDIDA]) VALUES (@DESCRICAO, @DATACADASTRO, @PRECOCUSTO, @PESOLIQUIDO, @CODGRUPOPRODUTO, @PRECOVENDA, @ESTOQUEATUAL, @ESTOQUEMIN, @IPI, @ATIVO, @CODUNIDADEMEDIDA);
SELECT CODPRODUTO, DESCRICAO, DATACADASTRO, PRECOCUSTO, PESOLIQUIDO, CODGRUPOPRODUTO, PRECOVENDA, ESTOQUEATUAL, ESTOQUEMIN, IPI, ATIVO, CODUNIDADEMEDIDA FROM PRODUTO WHERE (CODPRODUTO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATACADASTRO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATACADASTRO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRECOCUSTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRECOCUSTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PESOLIQUIDO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PESOLIQUIDO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODGRUPOPRODUTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODGRUPOPRODUTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRECOVENDA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRECOVENDA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTOQUEATUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTOQUEATUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTOQUEMIN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTOQUEMIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IPI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATIVO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATIVO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODUNIDADEMEDIDA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUNIDADEMEDIDA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PRODUTO] SET [DESCRICAO] = @DESCRICAO, [DATACADASTRO] = @DATACADASTRO, [PRECOCUSTO] = @PRECOCUSTO, [PESOLIQUIDO] = @PESOLIQUIDO, [CODGRUPOPRODUTO] = @CODGRUPOPRODUTO, [PRECOVENDA] = @PRECOVENDA, [ESTOQUEATUAL] = @ESTOQUEATUAL, [ESTOQUEMIN] = @ESTOQUEMIN, [IPI] = @IPI, [ATIVO] = @ATIVO, [CODUNIDADEMEDIDA] = @CODUNIDADEMEDIDA WHERE (([CODPRODUTO] = @Original_CODPRODUTO) AND ([DESCRICAO] = @Original_DESCRICAO) AND ([DATACADASTRO] = @Original_DATACADASTRO) AND ([PRECOCUSTO] = @Original_PRECOCUSTO) AND ([PESOLIQUIDO] = @Original_PESOLIQUIDO) AND ([CODGRUPOPRODUTO] = @Original_CODGRUPOPRODUTO) AND ([PRECOVENDA] = @Original_PRECOVENDA) AND ((@IsNull_ESTOQUEATUAL = 1 AND [ESTOQUEATUAL] IS NULL) OR ([ESTOQUEATUAL] = @Original_ESTOQUEATUAL)) AND ((@IsNull_ESTOQUEMIN = 1 AND [ESTOQUEMIN] IS NULL) OR ([ESTOQUEMIN] = @Original_ESTOQUEMIN)) AND ((@IsNull_IPI = 1 AND [IPI] IS NULL) OR ([IPI] = @Original_IPI)) AND ((@IsNull_ATIVO = 1 AND [ATIVO] IS NULL) OR ([ATIVO] = @Original_ATIVO)) AND ((@IsNull_CODUNIDADEMEDIDA = 1 AND [CODUNIDADEMEDIDA] IS NULL) OR ([CODUNIDADEMEDIDA] = @Original_CODUNIDADEMEDIDA)));
SELECT CODPRODUTO, DESCRICAO, DATACADASTRO, PRECOCUSTO, PESOLIQUIDO, CODGRUPOPRODUTO, PRECOVENDA, ESTOQUEATUAL, ESTOQUEMIN, IPI, ATIVO, CODUNIDADEMEDIDA FROM PRODUTO WHERE (CODPRODUTO = @CODPRODUTO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATACADASTRO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATACADASTRO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRECOCUSTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRECOCUSTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PESOLIQUIDO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PESOLIQUIDO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODGRUPOPRODUTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODGRUPOPRODUTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRECOVENDA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRECOVENDA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTOQUEATUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTOQUEATUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTOQUEMIN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTOQUEMIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IPI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATIVO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATIVO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODUNIDADEMEDIDA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUNIDADEMEDIDA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODPRODUTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODPRODUTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATACADASTRO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATACADASTRO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRECOCUSTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRECOCUSTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PESOLIQUIDO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PESOLIQUIDO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODGRUPOPRODUTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODGRUPOPRODUTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRECOVENDA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRECOVENDA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ESTOQUEATUAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTOQUEATUAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTOQUEATUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTOQUEATUAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ESTOQUEMIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTOQUEMIN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTOQUEMIN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTOQUEMIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IPI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IPI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATIVO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATIVO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATIVO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATIVO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CODUNIDADEMEDIDA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUNIDADEMEDIDA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODUNIDADEMEDIDA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUNIDADEMEDIDA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODPRODUTO", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CODPRODUTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Comercial.Properties.Settings.Default.COMERCIALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CODPRODUTO, DESCRICAO, DATACADASTRO, PRECOCUSTO, PESOLIQUIDO, CODGRUPOPROD" +
                "UTO, PRECOVENDA, ESTOQUEATUAL, ESTOQUEMIN, IPI, ATIVO, CODUNIDADEMEDIDA FROM dbo" +
                ".PRODUTO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(COMERCIALDataSet.PRODUTODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual COMERCIALDataSet.PRODUTODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            COMERCIALDataSet.PRODUTODataTable dataTable = new COMERCIALDataSet.PRODUTODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet.PRODUTODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PRODUTO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_CODPRODUTO, string Original_DESCRICAO, System.DateTime Original_DATACADASTRO, double Original_PRECOCUSTO, double Original_PESOLIQUIDO, int Original_CODGRUPOPRODUTO, double Original_PRECOVENDA, global::System.Nullable<double> Original_ESTOQUEATUAL, global::System.Nullable<double> Original_ESTOQUEMIN, global::System.Nullable<double> Original_IPI, string Original_ATIVO, string Original_CODUNIDADEMEDIDA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_CODPRODUTO));
            if ((Original_DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("Original_DESCRICAO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_DESCRICAO));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_DATACADASTRO));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_PRECOCUSTO));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_PESOLIQUIDO));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_CODGRUPOPRODUTO));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_PRECOVENDA));
            if ((Original_ESTOQUEATUAL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_ESTOQUEATUAL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_ESTOQUEMIN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_ESTOQUEMIN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_IPI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_IPI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_ATIVO == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_ATIVO));
            }
            if ((Original_CODUNIDADEMEDIDA == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_CODUNIDADEMEDIDA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string DESCRICAO, System.DateTime DATACADASTRO, double PRECOCUSTO, double PESOLIQUIDO, int CODGRUPOPRODUTO, double PRECOVENDA, global::System.Nullable<double> ESTOQUEATUAL, global::System.Nullable<double> ESTOQUEMIN, global::System.Nullable<double> IPI, string ATIVO, string CODUNIDADEMEDIDA) {
            if ((DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("DESCRICAO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(DESCRICAO));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(DATACADASTRO));
            this.Adapter.InsertCommand.Parameters[2].Value = ((double)(PRECOCUSTO));
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(PESOLIQUIDO));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(CODGRUPOPRODUTO));
            this.Adapter.InsertCommand.Parameters[5].Value = ((double)(PRECOVENDA));
            if ((ESTOQUEATUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(ESTOQUEATUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ESTOQUEMIN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(ESTOQUEMIN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((IPI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(IPI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ATIVO == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ATIVO));
            }
            if ((CODUNIDADEMEDIDA == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(CODUNIDADEMEDIDA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string DESCRICAO, 
                    System.DateTime DATACADASTRO, 
                    double PRECOCUSTO, 
                    double PESOLIQUIDO, 
                    int CODGRUPOPRODUTO, 
                    double PRECOVENDA, 
                    global::System.Nullable<double> ESTOQUEATUAL, 
                    global::System.Nullable<double> ESTOQUEMIN, 
                    global::System.Nullable<double> IPI, 
                    string ATIVO, 
                    string CODUNIDADEMEDIDA, 
                    int Original_CODPRODUTO, 
                    string Original_DESCRICAO, 
                    System.DateTime Original_DATACADASTRO, 
                    double Original_PRECOCUSTO, 
                    double Original_PESOLIQUIDO, 
                    int Original_CODGRUPOPRODUTO, 
                    double Original_PRECOVENDA, 
                    global::System.Nullable<double> Original_ESTOQUEATUAL, 
                    global::System.Nullable<double> Original_ESTOQUEMIN, 
                    global::System.Nullable<double> Original_IPI, 
                    string Original_ATIVO, 
                    string Original_CODUNIDADEMEDIDA, 
                    int CODPRODUTO) {
            if ((DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("DESCRICAO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(DESCRICAO));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(DATACADASTRO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(PRECOCUSTO));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(PESOLIQUIDO));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(CODGRUPOPRODUTO));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(PRECOVENDA));
            if ((ESTOQUEATUAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(ESTOQUEATUAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ESTOQUEMIN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(ESTOQUEMIN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((IPI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(IPI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ATIVO == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ATIVO));
            }
            if ((CODUNIDADEMEDIDA == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(CODUNIDADEMEDIDA));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_CODPRODUTO));
            if ((Original_DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("Original_DESCRICAO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_DESCRICAO));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_DATACADASTRO));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(Original_PRECOCUSTO));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(Original_PESOLIQUIDO));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_CODGRUPOPRODUTO));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(Original_PRECOVENDA));
            if ((Original_ESTOQUEATUAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(Original_ESTOQUEATUAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_ESTOQUEMIN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(Original_ESTOQUEMIN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_IPI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(Original_IPI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_ATIVO == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_ATIVO));
            }
            if ((Original_CODUNIDADEMEDIDA == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_CODUNIDADEMEDIDA));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(CODPRODUTO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string DESCRICAO, 
                    System.DateTime DATACADASTRO, 
                    double PRECOCUSTO, 
                    double PESOLIQUIDO, 
                    int CODGRUPOPRODUTO, 
                    double PRECOVENDA, 
                    global::System.Nullable<double> ESTOQUEATUAL, 
                    global::System.Nullable<double> ESTOQUEMIN, 
                    global::System.Nullable<double> IPI, 
                    string ATIVO, 
                    string CODUNIDADEMEDIDA, 
                    int Original_CODPRODUTO, 
                    string Original_DESCRICAO, 
                    System.DateTime Original_DATACADASTRO, 
                    double Original_PRECOCUSTO, 
                    double Original_PESOLIQUIDO, 
                    int Original_CODGRUPOPRODUTO, 
                    double Original_PRECOVENDA, 
                    global::System.Nullable<double> Original_ESTOQUEATUAL, 
                    global::System.Nullable<double> Original_ESTOQUEMIN, 
                    global::System.Nullable<double> Original_IPI, 
                    string Original_ATIVO, 
                    string Original_CODUNIDADEMEDIDA) {
            return this.Update(DESCRICAO, DATACADASTRO, PRECOCUSTO, PESOLIQUIDO, CODGRUPOPRODUTO, PRECOVENDA, ESTOQUEATUAL, ESTOQUEMIN, IPI, ATIVO, CODUNIDADEMEDIDA, Original_CODPRODUTO, Original_DESCRICAO, Original_DATACADASTRO, Original_PRECOCUSTO, Original_PESOLIQUIDO, Original_CODGRUPOPRODUTO, Original_PRECOVENDA, Original_ESTOQUEATUAL, Original_ESTOQUEMIN, Original_IPI, Original_ATIVO, Original_CODUNIDADEMEDIDA, Original_CODPRODUTO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class REGIAOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public REGIAOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "REGIAO";
            tableMapping.ColumnMappings.Add("CODREGIAO", "CODREGIAO");
            tableMapping.ColumnMappings.Add("DESCRICAO", "DESCRICAO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[REGIAO] WHERE (([CODREGIAO] = @Original_CODREGIAO) AND ([DESCR" +
                "ICAO] = @Original_DESCRICAO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODREGIAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODREGIAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[REGIAO] ([DESCRICAO]) VALUES (@DESCRICAO);\r\nSELECT CODREGIAO, " +
                "DESCRICAO FROM REGIAO WHERE (CODREGIAO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[REGIAO] SET [DESCRICAO] = @DESCRICAO WHERE (([CODREGIAO] = @Origina" +
                "l_CODREGIAO) AND ([DESCRICAO] = @Original_DESCRICAO));\r\nSELECT CODREGIAO, DESCRI" +
                "CAO FROM REGIAO WHERE (CODREGIAO = @CODREGIAO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODREGIAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODREGIAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODREGIAO", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CODREGIAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Comercial.Properties.Settings.Default.COMERCIALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CODREGIAO, DESCRICAO FROM dbo.REGIAO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(COMERCIALDataSet.REGIAODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual COMERCIALDataSet.REGIAODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            COMERCIALDataSet.REGIAODataTable dataTable = new COMERCIALDataSet.REGIAODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet.REGIAODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "REGIAO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_CODREGIAO, string Original_DESCRICAO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_CODREGIAO));
            if ((Original_DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("Original_DESCRICAO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_DESCRICAO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string DESCRICAO) {
            if ((DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("DESCRICAO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(DESCRICAO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string DESCRICAO, int Original_CODREGIAO, string Original_DESCRICAO, int CODREGIAO) {
            if ((DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("DESCRICAO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(DESCRICAO));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_CODREGIAO));
            if ((Original_DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("Original_DESCRICAO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_DESCRICAO));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(CODREGIAO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string DESCRICAO, int Original_CODREGIAO, string Original_DESCRICAO) {
            return this.Update(DESCRICAO, Original_CODREGIAO, Original_DESCRICAO, Original_CODREGIAO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TRANSPORTADORATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TRANSPORTADORATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TRANSPORTADORA";
            tableMapping.ColumnMappings.Add("CNPJ", "CNPJ");
            tableMapping.ColumnMappings.Add("NOME", "NOME");
            tableMapping.ColumnMappings.Add("NOMEREDUZIDO", "NOMEREDUZIDO");
            tableMapping.ColumnMappings.Add("ENDERECO", "ENDERECO");
            tableMapping.ColumnMappings.Add("BAIRRO", "BAIRRO");
            tableMapping.ColumnMappings.Add("UF", "UF");
            tableMapping.ColumnMappings.Add("MUNICIPIO", "MUNICIPIO");
            tableMapping.ColumnMappings.Add("CEP", "CEP");
            tableMapping.ColumnMappings.Add("TELEFONE", "TELEFONE");
            tableMapping.ColumnMappings.Add("IE", "IE");
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL");
            tableMapping.ColumnMappings.Add("NUM", "NUM");
            tableMapping.ColumnMappings.Add("COMPLEMENTO", "COMPLEMENTO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [TRANSPORTADORA] WHERE (([CNPJ] = @Original_CNPJ) AND ([NOME] = @Original_NOME) AND ([NOMEREDUZIDO] = @Original_NOMEREDUZIDO) AND ([ENDERECO] = @Original_ENDERECO) AND ([BAIRRO] = @Original_BAIRRO) AND ([UF] = @Original_UF) AND ([MUNICIPIO] = @Original_MUNICIPIO) AND ([CEP] = @Original_CEP) AND ((@IsNull_TELEFONE = 1 AND [TELEFONE] IS NULL) OR ([TELEFONE] = @Original_TELEFONE)) AND ([IE] = @Original_IE) AND ((@IsNull_EMAIL = 1 AND [EMAIL] IS NULL) OR ([EMAIL] = @Original_EMAIL)) AND ((@IsNull_COMPLEMENTO = 1 AND [COMPLEMENTO] IS NULL) OR ([COMPLEMENTO] = @Original_COMPLEMENTO)) AND ([NUM] = @Original_NUM))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CNPJ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNPJ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOMEREDUZIDO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMEREDUZIDO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ENDERECO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENDERECO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BAIRRO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BAIRRO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MUNICIPIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MUNICIPIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TELEFONE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TELEFONE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMAIL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COMPLEMENTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPLEMENTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPLEMENTO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPLEMENTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NUM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [TRANSPORTADORA] ([CNPJ], [NOME], [NOMEREDUZIDO], [ENDERECO], [BAIRRO], [UF], [MUNICIPIO], [CEP], [TELEFONE], [IE], [EMAIL], [COMPLEMENTO], [NUM]) VALUES (@CNPJ, @NOME, @NOMEREDUZIDO, @ENDERECO, @BAIRRO, @UF, @MUNICIPIO, @CEP, @TELEFONE, @IE, @EMAIL, @COMPLEMENTO, @NUM);
SELECT CNPJ, NOME, NOMEREDUZIDO, ENDERECO, BAIRRO, UF, MUNICIPIO, CEP, TELEFONE, IE, EMAIL, COMPLEMENTO, NUM FROM TRANSPORTADORA WHERE (CNPJ = @CNPJ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CNPJ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNPJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOMEREDUZIDO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMEREDUZIDO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENDERECO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENDERECO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BAIRRO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BAIRRO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MUNICIPIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MUNICIPIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TELEFONE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPLEMENTO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPLEMENTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NUM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [TRANSPORTADORA] SET [CNPJ] = @CNPJ, [NOME] = @NOME, [NOMEREDUZIDO] = @NOMEREDUZIDO, [ENDERECO] = @ENDERECO, [BAIRRO] = @BAIRRO, [UF] = @UF, [MUNICIPIO] = @MUNICIPIO, [CEP] = @CEP, [TELEFONE] = @TELEFONE, [IE] = @IE, [EMAIL] = @EMAIL, [COMPLEMENTO] = @COMPLEMENTO, [NUM] = @NUM WHERE (([CNPJ] = @Original_CNPJ) AND ([NOME] = @Original_NOME) AND ([NOMEREDUZIDO] = @Original_NOMEREDUZIDO) AND ([ENDERECO] = @Original_ENDERECO) AND ([BAIRRO] = @Original_BAIRRO) AND ([UF] = @Original_UF) AND ([MUNICIPIO] = @Original_MUNICIPIO) AND ([CEP] = @Original_CEP) AND ((@IsNull_TELEFONE = 1 AND [TELEFONE] IS NULL) OR ([TELEFONE] = @Original_TELEFONE)) AND ([IE] = @Original_IE) AND ((@IsNull_EMAIL = 1 AND [EMAIL] IS NULL) OR ([EMAIL] = @Original_EMAIL)) AND ((@IsNull_COMPLEMENTO = 1 AND [COMPLEMENTO] IS NULL) OR ([COMPLEMENTO] = @Original_COMPLEMENTO)) AND ([NUM] = @Original_NUM));
SELECT CNPJ, NOME, NOMEREDUZIDO, ENDERECO, BAIRRO, UF, MUNICIPIO, CEP, TELEFONE, IE, EMAIL, COMPLEMENTO, NUM FROM TRANSPORTADORA WHERE (CNPJ = @CNPJ)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CNPJ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNPJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOMEREDUZIDO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMEREDUZIDO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENDERECO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENDERECO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BAIRRO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BAIRRO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MUNICIPIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MUNICIPIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TELEFONE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPLEMENTO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPLEMENTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NUM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CNPJ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNPJ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOMEREDUZIDO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMEREDUZIDO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ENDERECO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENDERECO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BAIRRO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BAIRRO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MUNICIPIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MUNICIPIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TELEFONE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TELEFONE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMAIL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COMPLEMENTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPLEMENTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPLEMENTO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPLEMENTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NUM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Comercial.Properties.Settings.Default.COMERCIALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CNPJ, NOME, NOMEREDUZIDO, ENDERECO, BAIRRO, UF, MUNICIPIO, CEP, TELEFONE, " +
                "IE, EMAIL, COMPLEMENTO, NUM FROM TRANSPORTADORA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT CNPJ, NOME, NOMEREDUZIDO, ENDERECO, BAIRRO, UF, MUNICIPIO, CEP, TELEFONE, " +
                "IE, EMAIL, COMPLEMENTO, NUM FROM TRANSPORTADORA\r\nWHERE (CNPJ = @CNPJ) OR (NOME L" +
                "IKE + \'%\' + @nome + \'%\')";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CNPJ", global::System.Data.SqlDbType.VarChar, 14, global::System.Data.ParameterDirection.Input, 0, 0, "CNPJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nome", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "NOME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(COMERCIALDataSet.TRANSPORTADORADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual COMERCIALDataSet.TRANSPORTADORADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            COMERCIALDataSet.TRANSPORTADORADataTable dataTable = new COMERCIALDataSet.TRANSPORTADORADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int ConsultaTransportadora(COMERCIALDataSet.TRANSPORTADORADataTable dataTable, string CNPJ, string nome) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((CNPJ == null)) {
                throw new global::System.ArgumentNullException("CNPJ");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(CNPJ));
            }
            if ((nome == null)) {
                throw new global::System.ArgumentNullException("nome");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(nome));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet.TRANSPORTADORADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TRANSPORTADORA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_CNPJ, string Original_NOME, string Original_NOMEREDUZIDO, string Original_ENDERECO, string Original_BAIRRO, string Original_UF, string Original_MUNICIPIO, string Original_CEP, string Original_TELEFONE, string Original_IE, string Original_EMAIL, string Original_COMPLEMENTO, string Original_NUM) {
            if ((Original_CNPJ == null)) {
                throw new global::System.ArgumentNullException("Original_CNPJ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CNPJ));
            }
            if ((Original_NOME == null)) {
                throw new global::System.ArgumentNullException("Original_NOME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_NOME));
            }
            if ((Original_NOMEREDUZIDO == null)) {
                throw new global::System.ArgumentNullException("Original_NOMEREDUZIDO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_NOMEREDUZIDO));
            }
            if ((Original_ENDERECO == null)) {
                throw new global::System.ArgumentNullException("Original_ENDERECO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ENDERECO));
            }
            if ((Original_BAIRRO == null)) {
                throw new global::System.ArgumentNullException("Original_BAIRRO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_BAIRRO));
            }
            if ((Original_UF == null)) {
                throw new global::System.ArgumentNullException("Original_UF");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_UF));
            }
            if ((Original_MUNICIPIO == null)) {
                throw new global::System.ArgumentNullException("Original_MUNICIPIO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_MUNICIPIO));
            }
            if ((Original_CEP == null)) {
                throw new global::System.ArgumentNullException("Original_CEP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_CEP));
            }
            if ((Original_TELEFONE == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_TELEFONE));
            }
            if ((Original_IE == null)) {
                throw new global::System.ArgumentNullException("Original_IE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_IE));
            }
            if ((Original_EMAIL == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_EMAIL));
            }
            if ((Original_COMPLEMENTO == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_COMPLEMENTO));
            }
            if ((Original_NUM == null)) {
                throw new global::System.ArgumentNullException("Original_NUM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_NUM));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CNPJ, string NOME, string NOMEREDUZIDO, string ENDERECO, string BAIRRO, string UF, string MUNICIPIO, string CEP, string TELEFONE, string IE, string EMAIL, string COMPLEMENTO, string NUM) {
            if ((CNPJ == null)) {
                throw new global::System.ArgumentNullException("CNPJ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CNPJ));
            }
            if ((NOME == null)) {
                throw new global::System.ArgumentNullException("NOME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NOME));
            }
            if ((NOMEREDUZIDO == null)) {
                throw new global::System.ArgumentNullException("NOMEREDUZIDO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(NOMEREDUZIDO));
            }
            if ((ENDERECO == null)) {
                throw new global::System.ArgumentNullException("ENDERECO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ENDERECO));
            }
            if ((BAIRRO == null)) {
                throw new global::System.ArgumentNullException("BAIRRO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(BAIRRO));
            }
            if ((UF == null)) {
                throw new global::System.ArgumentNullException("UF");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(UF));
            }
            if ((MUNICIPIO == null)) {
                throw new global::System.ArgumentNullException("MUNICIPIO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(MUNICIPIO));
            }
            if ((CEP == null)) {
                throw new global::System.ArgumentNullException("CEP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(CEP));
            }
            if ((TELEFONE == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(TELEFONE));
            }
            if ((IE == null)) {
                throw new global::System.ArgumentNullException("IE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(IE));
            }
            if ((EMAIL == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(EMAIL));
            }
            if ((COMPLEMENTO == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(COMPLEMENTO));
            }
            if ((NUM == null)) {
                throw new global::System.ArgumentNullException("NUM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(NUM));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CNPJ, 
                    string NOME, 
                    string NOMEREDUZIDO, 
                    string ENDERECO, 
                    string BAIRRO, 
                    string UF, 
                    string MUNICIPIO, 
                    string CEP, 
                    string TELEFONE, 
                    string IE, 
                    string EMAIL, 
                    string COMPLEMENTO, 
                    string NUM, 
                    string Original_CNPJ, 
                    string Original_NOME, 
                    string Original_NOMEREDUZIDO, 
                    string Original_ENDERECO, 
                    string Original_BAIRRO, 
                    string Original_UF, 
                    string Original_MUNICIPIO, 
                    string Original_CEP, 
                    string Original_TELEFONE, 
                    string Original_IE, 
                    string Original_EMAIL, 
                    string Original_COMPLEMENTO, 
                    string Original_NUM) {
            if ((CNPJ == null)) {
                throw new global::System.ArgumentNullException("CNPJ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CNPJ));
            }
            if ((NOME == null)) {
                throw new global::System.ArgumentNullException("NOME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NOME));
            }
            if ((NOMEREDUZIDO == null)) {
                throw new global::System.ArgumentNullException("NOMEREDUZIDO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(NOMEREDUZIDO));
            }
            if ((ENDERECO == null)) {
                throw new global::System.ArgumentNullException("ENDERECO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ENDERECO));
            }
            if ((BAIRRO == null)) {
                throw new global::System.ArgumentNullException("BAIRRO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(BAIRRO));
            }
            if ((UF == null)) {
                throw new global::System.ArgumentNullException("UF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(UF));
            }
            if ((MUNICIPIO == null)) {
                throw new global::System.ArgumentNullException("MUNICIPIO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(MUNICIPIO));
            }
            if ((CEP == null)) {
                throw new global::System.ArgumentNullException("CEP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(CEP));
            }
            if ((TELEFONE == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(TELEFONE));
            }
            if ((IE == null)) {
                throw new global::System.ArgumentNullException("IE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(IE));
            }
            if ((EMAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(EMAIL));
            }
            if ((COMPLEMENTO == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(COMPLEMENTO));
            }
            if ((NUM == null)) {
                throw new global::System.ArgumentNullException("NUM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(NUM));
            }
            if ((Original_CNPJ == null)) {
                throw new global::System.ArgumentNullException("Original_CNPJ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_CNPJ));
            }
            if ((Original_NOME == null)) {
                throw new global::System.ArgumentNullException("Original_NOME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_NOME));
            }
            if ((Original_NOMEREDUZIDO == null)) {
                throw new global::System.ArgumentNullException("Original_NOMEREDUZIDO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_NOMEREDUZIDO));
            }
            if ((Original_ENDERECO == null)) {
                throw new global::System.ArgumentNullException("Original_ENDERECO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_ENDERECO));
            }
            if ((Original_BAIRRO == null)) {
                throw new global::System.ArgumentNullException("Original_BAIRRO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_BAIRRO));
            }
            if ((Original_UF == null)) {
                throw new global::System.ArgumentNullException("Original_UF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_UF));
            }
            if ((Original_MUNICIPIO == null)) {
                throw new global::System.ArgumentNullException("Original_MUNICIPIO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_MUNICIPIO));
            }
            if ((Original_CEP == null)) {
                throw new global::System.ArgumentNullException("Original_CEP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_CEP));
            }
            if ((Original_TELEFONE == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_TELEFONE));
            }
            if ((Original_IE == null)) {
                throw new global::System.ArgumentNullException("Original_IE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_IE));
            }
            if ((Original_EMAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_EMAIL));
            }
            if ((Original_COMPLEMENTO == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_COMPLEMENTO));
            }
            if ((Original_NUM == null)) {
                throw new global::System.ArgumentNullException("Original_NUM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_NUM));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NOME, 
                    string NOMEREDUZIDO, 
                    string ENDERECO, 
                    string BAIRRO, 
                    string UF, 
                    string MUNICIPIO, 
                    string CEP, 
                    string TELEFONE, 
                    string IE, 
                    string EMAIL, 
                    string COMPLEMENTO, 
                    string NUM, 
                    string Original_CNPJ, 
                    string Original_NOME, 
                    string Original_NOMEREDUZIDO, 
                    string Original_ENDERECO, 
                    string Original_BAIRRO, 
                    string Original_UF, 
                    string Original_MUNICIPIO, 
                    string Original_CEP, 
                    string Original_TELEFONE, 
                    string Original_IE, 
                    string Original_EMAIL, 
                    string Original_COMPLEMENTO, 
                    string Original_NUM) {
            return this.Update(Original_CNPJ, NOME, NOMEREDUZIDO, ENDERECO, BAIRRO, UF, MUNICIPIO, CEP, TELEFONE, IE, EMAIL, COMPLEMENTO, NUM, Original_CNPJ, Original_NOME, Original_NOMEREDUZIDO, Original_ENDERECO, Original_BAIRRO, Original_UF, Original_MUNICIPIO, Original_CEP, Original_TELEFONE, Original_IE, Original_EMAIL, Original_COMPLEMENTO, Original_NUM);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TRANSPORTADORAVIATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TRANSPORTADORAVIATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TRANSPORTADORAVIA";
            tableMapping.ColumnMappings.Add("CODVIATRANSPORTE", "CODVIATRANSPORTE");
            tableMapping.ColumnMappings.Add("CODTRANSPORTADORA", "CODTRANSPORTADORA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TRANSPORTADORAVIA] WHERE (([CODVIATRANSPORTE] = @Original_CODV" +
                "IATRANSPORTE) AND ([CODTRANSPORTADORA] = @Original_CODTRANSPORTADORA))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODVIATRANSPORTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODVIATRANSPORTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODTRANSPORTADORA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODTRANSPORTADORA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TRANSPORTADORAVIA] ([CODVIATRANSPORTE], [CODTRANSPORTADORA]) VALUES (@CODVIATRANSPORTE, @CODTRANSPORTADORA);
SELECT CODVIATRANSPORTE, CODTRANSPORTADORA FROM TRANSPORTADORAVIA WHERE (CODTRANSPORTADORA = @CODTRANSPORTADORA) AND (CODVIATRANSPORTE = @CODVIATRANSPORTE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODVIATRANSPORTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODVIATRANSPORTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODTRANSPORTADORA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODTRANSPORTADORA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TRANSPORTADORAVIA] SET [CODVIATRANSPORTE] = @CODVIATRANSPORTE, [CODTRANSPORTADORA] = @CODTRANSPORTADORA WHERE (([CODVIATRANSPORTE] = @Original_CODVIATRANSPORTE) AND ([CODTRANSPORTADORA] = @Original_CODTRANSPORTADORA));
SELECT CODVIATRANSPORTE, CODTRANSPORTADORA FROM TRANSPORTADORAVIA WHERE (CODTRANSPORTADORA = @CODTRANSPORTADORA) AND (CODVIATRANSPORTE = @CODVIATRANSPORTE)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODVIATRANSPORTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODVIATRANSPORTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODTRANSPORTADORA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODTRANSPORTADORA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODVIATRANSPORTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODVIATRANSPORTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODTRANSPORTADORA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODTRANSPORTADORA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Comercial.Properties.Settings.Default.COMERCIALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CODVIATRANSPORTE, CODTRANSPORTADORA FROM dbo.TRANSPORTADORAVIA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(COMERCIALDataSet.TRANSPORTADORAVIADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual COMERCIALDataSet.TRANSPORTADORAVIADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            COMERCIALDataSet.TRANSPORTADORAVIADataTable dataTable = new COMERCIALDataSet.TRANSPORTADORAVIADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet.TRANSPORTADORAVIADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TRANSPORTADORAVIA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_CODVIATRANSPORTE, string Original_CODTRANSPORTADORA) {
            if ((Original_CODVIATRANSPORTE == null)) {
                throw new global::System.ArgumentNullException("Original_CODVIATRANSPORTE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CODVIATRANSPORTE));
            }
            if ((Original_CODTRANSPORTADORA == null)) {
                throw new global::System.ArgumentNullException("Original_CODTRANSPORTADORA");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_CODTRANSPORTADORA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CODVIATRANSPORTE, string CODTRANSPORTADORA) {
            if ((CODVIATRANSPORTE == null)) {
                throw new global::System.ArgumentNullException("CODVIATRANSPORTE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CODVIATRANSPORTE));
            }
            if ((CODTRANSPORTADORA == null)) {
                throw new global::System.ArgumentNullException("CODTRANSPORTADORA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CODTRANSPORTADORA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CODVIATRANSPORTE, string CODTRANSPORTADORA, string Original_CODVIATRANSPORTE, string Original_CODTRANSPORTADORA) {
            if ((CODVIATRANSPORTE == null)) {
                throw new global::System.ArgumentNullException("CODVIATRANSPORTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CODVIATRANSPORTE));
            }
            if ((CODTRANSPORTADORA == null)) {
                throw new global::System.ArgumentNullException("CODTRANSPORTADORA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CODTRANSPORTADORA));
            }
            if ((Original_CODVIATRANSPORTE == null)) {
                throw new global::System.ArgumentNullException("Original_CODVIATRANSPORTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_CODVIATRANSPORTE));
            }
            if ((Original_CODTRANSPORTADORA == null)) {
                throw new global::System.ArgumentNullException("Original_CODTRANSPORTADORA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_CODTRANSPORTADORA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Original_CODVIATRANSPORTE, string Original_CODTRANSPORTADORA) {
            return this.Update(Original_CODVIATRANSPORTE, Original_CODTRANSPORTADORA, Original_CODVIATRANSPORTE, Original_CODTRANSPORTADORA);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UNIDADEMEDIDATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UNIDADEMEDIDATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UNIDADEMEDIDA";
            tableMapping.ColumnMappings.Add("CODUNIDADEMEDIDA", "CODUNIDADEMEDIDA");
            tableMapping.ColumnMappings.Add("DESCRICAO", "DESCRICAO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[UNIDADEMEDIDA] WHERE (([CODUNIDADEMEDIDA] = @Original_CODUNIDA" +
                "DEMEDIDA) AND ([DESCRICAO] = @Original_DESCRICAO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODUNIDADEMEDIDA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUNIDADEMEDIDA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[UNIDADEMEDIDA] ([CODUNIDADEMEDIDA], [DESCRICAO]) VALUES (@CODU" +
                "NIDADEMEDIDA, @DESCRICAO);\r\nSELECT CODUNIDADEMEDIDA, DESCRICAO FROM UNIDADEMEDID" +
                "A WHERE (CODUNIDADEMEDIDA = @CODUNIDADEMEDIDA)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODUNIDADEMEDIDA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUNIDADEMEDIDA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[UNIDADEMEDIDA] SET [CODUNIDADEMEDIDA] = @CODUNIDADEMEDIDA, [DESCRICAO] = @DESCRICAO WHERE (([CODUNIDADEMEDIDA] = @Original_CODUNIDADEMEDIDA) AND ([DESCRICAO] = @Original_DESCRICAO));
SELECT CODUNIDADEMEDIDA, DESCRICAO FROM UNIDADEMEDIDA WHERE (CODUNIDADEMEDIDA = @CODUNIDADEMEDIDA)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODUNIDADEMEDIDA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUNIDADEMEDIDA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODUNIDADEMEDIDA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUNIDADEMEDIDA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Comercial.Properties.Settings.Default.COMERCIALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CODUNIDADEMEDIDA, DESCRICAO FROM dbo.UNIDADEMEDIDA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(COMERCIALDataSet.UNIDADEMEDIDADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual COMERCIALDataSet.UNIDADEMEDIDADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            COMERCIALDataSet.UNIDADEMEDIDADataTable dataTable = new COMERCIALDataSet.UNIDADEMEDIDADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet.UNIDADEMEDIDADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "UNIDADEMEDIDA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_CODUNIDADEMEDIDA, string Original_DESCRICAO) {
            if ((Original_CODUNIDADEMEDIDA == null)) {
                throw new global::System.ArgumentNullException("Original_CODUNIDADEMEDIDA");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CODUNIDADEMEDIDA));
            }
            if ((Original_DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("Original_DESCRICAO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_DESCRICAO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CODUNIDADEMEDIDA, string DESCRICAO) {
            if ((CODUNIDADEMEDIDA == null)) {
                throw new global::System.ArgumentNullException("CODUNIDADEMEDIDA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CODUNIDADEMEDIDA));
            }
            if ((DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("DESCRICAO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DESCRICAO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CODUNIDADEMEDIDA, string DESCRICAO, string Original_CODUNIDADEMEDIDA, string Original_DESCRICAO) {
            if ((CODUNIDADEMEDIDA == null)) {
                throw new global::System.ArgumentNullException("CODUNIDADEMEDIDA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CODUNIDADEMEDIDA));
            }
            if ((DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("DESCRICAO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(DESCRICAO));
            }
            if ((Original_CODUNIDADEMEDIDA == null)) {
                throw new global::System.ArgumentNullException("Original_CODUNIDADEMEDIDA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_CODUNIDADEMEDIDA));
            }
            if ((Original_DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("Original_DESCRICAO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_DESCRICAO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string DESCRICAO, string Original_CODUNIDADEMEDIDA, string Original_DESCRICAO) {
            return this.Update(Original_CODUNIDADEMEDIDA, DESCRICAO, Original_CODUNIDADEMEDIDA, Original_DESCRICAO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class USUARIOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public USUARIOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "USUARIO";
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO");
            tableMapping.ColumnMappings.Add("USUARIO", "USUARIO");
            tableMapping.ColumnMappings.Add("SENHA", "SENHA");
            tableMapping.ColumnMappings.Add("PRIVILEGIADO", "PRIVILEGIADO");
            tableMapping.ColumnMappings.Add("BLOQUEADO", "BLOQUEADO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[USUARIO] WHERE (([CODUSUARIO] = @Original_CODUSUARIO) AND ([USUARIO] = @Original_USUARIO) AND ([SENHA] = @Original_SENHA) AND ((@IsNull_PRIVILEGIADO = 1 AND [PRIVILEGIADO] IS NULL) OR ([PRIVILEGIADO] = @Original_PRIVILEGIADO)) AND ((@IsNull_BLOQUEADO = 1 AND [BLOQUEADO] IS NULL) OR ([BLOQUEADO] = @Original_BLOQUEADO)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USUARIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USUARIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SENHA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SENHA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PRIVILEGIADO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRIVILEGIADO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRIVILEGIADO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRIVILEGIADO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BLOQUEADO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BLOQUEADO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BLOQUEADO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BLOQUEADO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[USUARIO] ([USUARIO], [SENHA], [PRIVILEGIADO], [BLOQUEADO]) VAL" +
                "UES (@USUARIO, @SENHA, @PRIVILEGIADO, @BLOQUEADO);\r\nSELECT CODUSUARIO, USUARIO, " +
                "SENHA, PRIVILEGIADO, BLOQUEADO FROM USUARIO WHERE (CODUSUARIO = SCOPE_IDENTITY()" +
                ")";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USUARIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USUARIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SENHA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SENHA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRIVILEGIADO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRIVILEGIADO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BLOQUEADO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BLOQUEADO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[USUARIO] SET [USUARIO] = @USUARIO, [SENHA] = @SENHA, [PRIVILEGIADO] = @PRIVILEGIADO, [BLOQUEADO] = @BLOQUEADO WHERE (([CODUSUARIO] = @Original_CODUSUARIO) AND ([USUARIO] = @Original_USUARIO) AND ([SENHA] = @Original_SENHA) AND ((@IsNull_PRIVILEGIADO = 1 AND [PRIVILEGIADO] IS NULL) OR ([PRIVILEGIADO] = @Original_PRIVILEGIADO)) AND ((@IsNull_BLOQUEADO = 1 AND [BLOQUEADO] IS NULL) OR ([BLOQUEADO] = @Original_BLOQUEADO)));
SELECT CODUSUARIO, USUARIO, SENHA, PRIVILEGIADO, BLOQUEADO FROM USUARIO WHERE (CODUSUARIO = @CODUSUARIO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USUARIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USUARIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SENHA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SENHA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRIVILEGIADO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRIVILEGIADO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BLOQUEADO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BLOQUEADO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USUARIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USUARIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SENHA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SENHA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PRIVILEGIADO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRIVILEGIADO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRIVILEGIADO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRIVILEGIADO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BLOQUEADO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BLOQUEADO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BLOQUEADO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BLOQUEADO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODUSUARIO", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Comercial.Properties.Settings.Default.COMERCIALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CODUSUARIO, USUARIO, SENHA, PRIVILEGIADO, BLOQUEADO FROM dbo.USUARIO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(COMERCIALDataSet.USUARIODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual COMERCIALDataSet.USUARIODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            COMERCIALDataSet.USUARIODataTable dataTable = new COMERCIALDataSet.USUARIODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet.USUARIODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "USUARIO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_CODUSUARIO, string Original_USUARIO, string Original_SENHA, string Original_PRIVILEGIADO, string Original_BLOQUEADO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_CODUSUARIO));
            if ((Original_USUARIO == null)) {
                throw new global::System.ArgumentNullException("Original_USUARIO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_USUARIO));
            }
            if ((Original_SENHA == null)) {
                throw new global::System.ArgumentNullException("Original_SENHA");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SENHA));
            }
            if ((Original_PRIVILEGIADO == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PRIVILEGIADO));
            }
            if ((Original_BLOQUEADO == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_BLOQUEADO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string USUARIO, string SENHA, string PRIVILEGIADO, string BLOQUEADO) {
            if ((USUARIO == null)) {
                throw new global::System.ArgumentNullException("USUARIO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(USUARIO));
            }
            if ((SENHA == null)) {
                throw new global::System.ArgumentNullException("SENHA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SENHA));
            }
            if ((PRIVILEGIADO == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PRIVILEGIADO));
            }
            if ((BLOQUEADO == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(BLOQUEADO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string USUARIO, string SENHA, string PRIVILEGIADO, string BLOQUEADO, int Original_CODUSUARIO, string Original_USUARIO, string Original_SENHA, string Original_PRIVILEGIADO, string Original_BLOQUEADO, int CODUSUARIO) {
            if ((USUARIO == null)) {
                throw new global::System.ArgumentNullException("USUARIO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(USUARIO));
            }
            if ((SENHA == null)) {
                throw new global::System.ArgumentNullException("SENHA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SENHA));
            }
            if ((PRIVILEGIADO == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PRIVILEGIADO));
            }
            if ((BLOQUEADO == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(BLOQUEADO));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_CODUSUARIO));
            if ((Original_USUARIO == null)) {
                throw new global::System.ArgumentNullException("Original_USUARIO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_USUARIO));
            }
            if ((Original_SENHA == null)) {
                throw new global::System.ArgumentNullException("Original_SENHA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_SENHA));
            }
            if ((Original_PRIVILEGIADO == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_PRIVILEGIADO));
            }
            if ((Original_BLOQUEADO == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_BLOQUEADO));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(CODUSUARIO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string USUARIO, string SENHA, string PRIVILEGIADO, string BLOQUEADO, int Original_CODUSUARIO, string Original_USUARIO, string Original_SENHA, string Original_PRIVILEGIADO, string Original_BLOQUEADO) {
            return this.Update(USUARIO, SENHA, PRIVILEGIADO, BLOQUEADO, Original_CODUSUARIO, Original_USUARIO, Original_SENHA, Original_PRIVILEGIADO, Original_BLOQUEADO, Original_CODUSUARIO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VENDEDORTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public VENDEDORTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VENDEDOR";
            tableMapping.ColumnMappings.Add("CPF", "CPF");
            tableMapping.ColumnMappings.Add("NOME", "NOME");
            tableMapping.ColumnMappings.Add("ENDERECO", "ENDERECO");
            tableMapping.ColumnMappings.Add("BAIRRO", "BAIRRO");
            tableMapping.ColumnMappings.Add("MUNICIPIO", "MUNICIPIO");
            tableMapping.ColumnMappings.Add("UF", "UF");
            tableMapping.ColumnMappings.Add("CEP", "CEP");
            tableMapping.ColumnMappings.Add("TELEFONE", "TELEFONE");
            tableMapping.ColumnMappings.Add("FAX", "FAX");
            tableMapping.ColumnMappings.Add("RG", "RG");
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO");
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL");
            tableMapping.ColumnMappings.Add("COMISSAO", "COMISSAO");
            tableMapping.ColumnMappings.Add("ATIVO", "ATIVO");
            tableMapping.ColumnMappings.Add("SEXO", "SEXO");
            tableMapping.ColumnMappings.Add("CODREGIAO", "CODREGIAO");
            tableMapping.ColumnMappings.Add("NUM", "NUM");
            tableMapping.ColumnMappings.Add("COMPLEMENTO", "COMPLEMENTO");
            tableMapping.ColumnMappings.Add("CELULAR", "CELULAR");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[VENDEDOR] WHERE (([CPF] = @Original_CPF) AND ([NOME] = @Original_NOME) AND ([ENDERECO] = @Original_ENDERECO) AND ([BAIRRO] = @Original_BAIRRO) AND ([MUNICIPIO] = @Original_MUNICIPIO) AND ([UF] = @Original_UF) AND ([CEP] = @Original_CEP) AND ((@IsNull_TELEFONE = 1 AND [TELEFONE] IS NULL) OR ([TELEFONE] = @Original_TELEFONE)) AND ((@IsNull_FAX = 1 AND [FAX] IS NULL) OR ([FAX] = @Original_FAX)) AND ([RG] = @Original_RG) AND ((@IsNull_CODUSUARIO = 1 AND [CODUSUARIO] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUARIO)) AND ((@IsNull_EMAIL = 1 AND [EMAIL] IS NULL) OR ([EMAIL] = @Original_EMAIL)) AND ((@IsNull_COMISSAO = 1 AND [COMISSAO] IS NULL) OR ([COMISSAO] = @Original_COMISSAO)) AND ((@IsNull_ATIVO = 1 AND [ATIVO] IS NULL) OR ([ATIVO] = @Original_ATIVO)) AND ((@IsNull_SEXO = 1 AND [SEXO] IS NULL) OR ([SEXO] = @Original_SEXO)) AND ((@IsNull_CODREGIAO = 1 AND [CODREGIAO] IS NULL) OR ([CODREGIAO] = @Original_CODREGIAO)) AND ([NUM] = @Original_NUM) AND ((@IsNull_COMPLEMENTO = 1 AND [COMPLEMENTO] IS NULL) OR ([COMPLEMENTO] = @Original_COMPLEMENTO)) AND ((@IsNull_CELULAR = 1 AND [CELULAR] IS NULL) OR ([CELULAR] = @Original_CELULAR)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CPF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ENDERECO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENDERECO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BAIRRO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BAIRRO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MUNICIPIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MUNICIPIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UF", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TELEFONE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TELEFONE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FAX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAX", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RG", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMAIL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COMISSAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMISSAO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMISSAO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMISSAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATIVO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATIVO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATIVO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATIVO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEXO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEXO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEXO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEXO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CODREGIAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODREGIAO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODREGIAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODREGIAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NUM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COMPLEMENTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPLEMENTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPLEMENTO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPLEMENTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CELULAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CELULAR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CELULAR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CELULAR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[VENDEDOR] ([CPF], [NOME], [ENDERECO], [BAIRRO], [MUNICIPIO], [UF], [CEP], [TELEFONE], [FAX], [RG], [CODUSUARIO], [EMAIL], [COMISSAO], [ATIVO], [SEXO], [CODREGIAO], [NUM], [COMPLEMENTO], [CELULAR]) VALUES (@CPF, @NOME, @ENDERECO, @BAIRRO, @MUNICIPIO, @UF, @CEP, @TELEFONE, @FAX, @RG, @CODUSUARIO, @EMAIL, @COMISSAO, @ATIVO, @SEXO, @CODREGIAO, @NUM, @COMPLEMENTO, @CELULAR);
SELECT CPF, NOME, ENDERECO, BAIRRO, MUNICIPIO, UF, CEP, TELEFONE, FAX, RG, CODUSUARIO, EMAIL, COMISSAO, ATIVO, SEXO, CODREGIAO, NUM, COMPLEMENTO, CELULAR FROM VENDEDOR WHERE (CPF = @CPF)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CPF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENDERECO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENDERECO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BAIRRO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BAIRRO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MUNICIPIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MUNICIPIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UF", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TELEFONE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAX", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RG", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODUSUARIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMISSAO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMISSAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATIVO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATIVO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEXO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEXO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODREGIAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODREGIAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NUM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPLEMENTO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPLEMENTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CELULAR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CELULAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[VENDEDOR] SET [CPF] = @CPF, [NOME] = @NOME, [ENDERECO] = @ENDERECO," +
                " [BAIRRO] = @BAIRRO, [MUNICIPIO] = @MUNICIPIO, [UF] = @UF, [CEP] = @CEP, [TELEFO" +
                "NE] = @TELEFONE, [FAX] = @FAX, [RG] = @RG, [CODUSUARIO] = @CODUSUARIO, [EMAIL] =" +
                " @EMAIL, [COMISSAO] = @COMISSAO, [ATIVO] = @ATIVO, [SEXO] = @SEXO, [CODREGIAO] =" +
                " @CODREGIAO, [NUM] = @NUM, [COMPLEMENTO] = @COMPLEMENTO, [CELULAR] = @CELULAR WH" +
                "ERE (([CPF] = @Original_CPF) AND ([NOME] = @Original_NOME) AND ([ENDERECO] = @Or" +
                "iginal_ENDERECO) AND ([BAIRRO] = @Original_BAIRRO) AND ([MUNICIPIO] = @Original_" +
                "MUNICIPIO) AND ([UF] = @Original_UF) AND ([CEP] = @Original_CEP) AND ((@IsNull_T" +
                "ELEFONE = 1 AND [TELEFONE] IS NULL) OR ([TELEFONE] = @Original_TELEFONE)) AND ((" +
                "@IsNull_FAX = 1 AND [FAX] IS NULL) OR ([FAX] = @Original_FAX)) AND ([RG] = @Orig" +
                "inal_RG) AND ((@IsNull_CODUSUARIO = 1 AND [CODUSUARIO] IS NULL) OR ([CODUSUARIO]" +
                " = @Original_CODUSUARIO)) AND ((@IsNull_EMAIL = 1 AND [EMAIL] IS NULL) OR ([EMAI" +
                "L] = @Original_EMAIL)) AND ((@IsNull_COMISSAO = 1 AND [COMISSAO] IS NULL) OR ([C" +
                "OMISSAO] = @Original_COMISSAO)) AND ((@IsNull_ATIVO = 1 AND [ATIVO] IS NULL) OR " +
                "([ATIVO] = @Original_ATIVO)) AND ((@IsNull_SEXO = 1 AND [SEXO] IS NULL) OR ([SEX" +
                "O] = @Original_SEXO)) AND ((@IsNull_CODREGIAO = 1 AND [CODREGIAO] IS NULL) OR ([" +
                "CODREGIAO] = @Original_CODREGIAO)) AND ([NUM] = @Original_NUM) AND ((@IsNull_COM" +
                "PLEMENTO = 1 AND [COMPLEMENTO] IS NULL) OR ([COMPLEMENTO] = @Original_COMPLEMENT" +
                "O)) AND ((@IsNull_CELULAR = 1 AND [CELULAR] IS NULL) OR ([CELULAR] = @Original_C" +
                "ELULAR)));\r\nSELECT CPF, NOME, ENDERECO, BAIRRO, MUNICIPIO, UF, CEP, TELEFONE, FA" +
                "X, RG, CODUSUARIO, EMAIL, COMISSAO, ATIVO, SEXO, CODREGIAO, NUM, COMPLEMENTO, CE" +
                "LULAR FROM VENDEDOR WHERE (CPF = @CPF)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CPF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENDERECO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENDERECO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BAIRRO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BAIRRO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MUNICIPIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MUNICIPIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UF", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TELEFONE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAX", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RG", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODUSUARIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMISSAO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMISSAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATIVO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATIVO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEXO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEXO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODREGIAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODREGIAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NUM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPLEMENTO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPLEMENTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CELULAR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CELULAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CPF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ENDERECO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENDERECO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BAIRRO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BAIRRO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MUNICIPIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MUNICIPIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UF", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TELEFONE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TELEFONE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FAX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAX", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RG", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMAIL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COMISSAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMISSAO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMISSAO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMISSAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATIVO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATIVO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATIVO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATIVO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEXO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEXO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEXO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEXO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CODREGIAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODREGIAO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODREGIAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODREGIAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NUM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COMPLEMENTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPLEMENTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPLEMENTO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPLEMENTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CELULAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CELULAR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CELULAR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CELULAR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Comercial.Properties.Settings.Default.COMERCIALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CPF, NOME, ENDERECO, BAIRRO, MUNICIPIO, UF, CEP, TELEFONE, FAX, RG, CODUSU" +
                "ARIO, EMAIL, COMISSAO, ATIVO, SEXO, CODREGIAO, NUM, COMPLEMENTO, CELULAR FROM db" +
                "o.VENDEDOR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT ATIVO, BAIRRO, CELULAR, CEP, CODREGIAO, CODUSUARIO, COMISSAO, COMPLEMENTO," +
                " CPF, EMAIL, ENDERECO, FAX, MUNICIPIO, NOME, NUM, RG, SEXO, TELEFONE, UF FROM VE" +
                "NDEDOR WHERE (CPF = @cpf) OR (NOME LIKE @nome + \'%\')";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cpf", global::System.Data.SqlDbType.VarChar, 11, global::System.Data.ParameterDirection.Input, 0, 0, "CPF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nome", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "NOME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(COMERCIALDataSet.VENDEDORDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual COMERCIALDataSet.VENDEDORDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            COMERCIALDataSet.VENDEDORDataTable dataTable = new COMERCIALDataSet.VENDEDORDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int Consulta(COMERCIALDataSet.VENDEDORDataTable dataTable, string cpf, string nome) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((cpf == null)) {
                throw new global::System.ArgumentNullException("cpf");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(cpf));
            }
            if ((nome == null)) {
                throw new global::System.ArgumentNullException("nome");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(nome));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet.VENDEDORDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "VENDEDOR");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_CPF, 
                    string Original_NOME, 
                    string Original_ENDERECO, 
                    string Original_BAIRRO, 
                    string Original_MUNICIPIO, 
                    string Original_UF, 
                    string Original_CEP, 
                    string Original_TELEFONE, 
                    string Original_FAX, 
                    string Original_RG, 
                    global::System.Nullable<int> Original_CODUSUARIO, 
                    string Original_EMAIL, 
                    global::System.Nullable<double> Original_COMISSAO, 
                    string Original_ATIVO, 
                    string Original_SEXO, 
                    global::System.Nullable<int> Original_CODREGIAO, 
                    string Original_NUM, 
                    string Original_COMPLEMENTO, 
                    string Original_CELULAR) {
            if ((Original_CPF == null)) {
                throw new global::System.ArgumentNullException("Original_CPF");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CPF));
            }
            if ((Original_NOME == null)) {
                throw new global::System.ArgumentNullException("Original_NOME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_NOME));
            }
            if ((Original_ENDERECO == null)) {
                throw new global::System.ArgumentNullException("Original_ENDERECO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ENDERECO));
            }
            if ((Original_BAIRRO == null)) {
                throw new global::System.ArgumentNullException("Original_BAIRRO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_BAIRRO));
            }
            if ((Original_MUNICIPIO == null)) {
                throw new global::System.ArgumentNullException("Original_MUNICIPIO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_MUNICIPIO));
            }
            if ((Original_UF == null)) {
                throw new global::System.ArgumentNullException("Original_UF");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_UF));
            }
            if ((Original_CEP == null)) {
                throw new global::System.ArgumentNullException("Original_CEP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_CEP));
            }
            if ((Original_TELEFONE == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_TELEFONE));
            }
            if ((Original_FAX == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_FAX));
            }
            if ((Original_RG == null)) {
                throw new global::System.ArgumentNullException("Original_RG");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_RG));
            }
            if ((Original_CODUSUARIO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_CODUSUARIO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_EMAIL == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_EMAIL));
            }
            if ((Original_COMISSAO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((double)(Original_COMISSAO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_ATIVO == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_ATIVO));
            }
            if ((Original_SEXO == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_SEXO));
            }
            if ((Original_CODREGIAO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(Original_CODREGIAO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_NUM == null)) {
                throw new global::System.ArgumentNullException("Original_NUM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_NUM));
            }
            if ((Original_COMPLEMENTO == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_COMPLEMENTO));
            }
            if ((Original_CELULAR == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_CELULAR));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string CPF, 
                    string NOME, 
                    string ENDERECO, 
                    string BAIRRO, 
                    string MUNICIPIO, 
                    string UF, 
                    string CEP, 
                    string TELEFONE, 
                    string FAX, 
                    string RG, 
                    global::System.Nullable<int> CODUSUARIO, 
                    string EMAIL, 
                    global::System.Nullable<double> COMISSAO, 
                    string ATIVO, 
                    string SEXO, 
                    global::System.Nullable<int> CODREGIAO, 
                    string NUM, 
                    string COMPLEMENTO, 
                    string CELULAR) {
            if ((CPF == null)) {
                throw new global::System.ArgumentNullException("CPF");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CPF));
            }
            if ((NOME == null)) {
                throw new global::System.ArgumentNullException("NOME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NOME));
            }
            if ((ENDERECO == null)) {
                throw new global::System.ArgumentNullException("ENDERECO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ENDERECO));
            }
            if ((BAIRRO == null)) {
                throw new global::System.ArgumentNullException("BAIRRO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(BAIRRO));
            }
            if ((MUNICIPIO == null)) {
                throw new global::System.ArgumentNullException("MUNICIPIO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(MUNICIPIO));
            }
            if ((UF == null)) {
                throw new global::System.ArgumentNullException("UF");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(UF));
            }
            if ((CEP == null)) {
                throw new global::System.ArgumentNullException("CEP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(CEP));
            }
            if ((TELEFONE == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(TELEFONE));
            }
            if ((FAX == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(FAX));
            }
            if ((RG == null)) {
                throw new global::System.ArgumentNullException("RG");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(RG));
            }
            if ((CODUSUARIO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(CODUSUARIO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((EMAIL == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(EMAIL));
            }
            if ((COMISSAO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(COMISSAO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((ATIVO == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(ATIVO));
            }
            if ((SEXO == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(SEXO));
            }
            if ((CODREGIAO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(CODREGIAO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((NUM == null)) {
                throw new global::System.ArgumentNullException("NUM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(NUM));
            }
            if ((COMPLEMENTO == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(COMPLEMENTO));
            }
            if ((CELULAR == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(CELULAR));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CPF, 
                    string NOME, 
                    string ENDERECO, 
                    string BAIRRO, 
                    string MUNICIPIO, 
                    string UF, 
                    string CEP, 
                    string TELEFONE, 
                    string FAX, 
                    string RG, 
                    global::System.Nullable<int> CODUSUARIO, 
                    string EMAIL, 
                    global::System.Nullable<double> COMISSAO, 
                    string ATIVO, 
                    string SEXO, 
                    global::System.Nullable<int> CODREGIAO, 
                    string NUM, 
                    string COMPLEMENTO, 
                    string CELULAR, 
                    string Original_CPF, 
                    string Original_NOME, 
                    string Original_ENDERECO, 
                    string Original_BAIRRO, 
                    string Original_MUNICIPIO, 
                    string Original_UF, 
                    string Original_CEP, 
                    string Original_TELEFONE, 
                    string Original_FAX, 
                    string Original_RG, 
                    global::System.Nullable<int> Original_CODUSUARIO, 
                    string Original_EMAIL, 
                    global::System.Nullable<double> Original_COMISSAO, 
                    string Original_ATIVO, 
                    string Original_SEXO, 
                    global::System.Nullable<int> Original_CODREGIAO, 
                    string Original_NUM, 
                    string Original_COMPLEMENTO, 
                    string Original_CELULAR) {
            if ((CPF == null)) {
                throw new global::System.ArgumentNullException("CPF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CPF));
            }
            if ((NOME == null)) {
                throw new global::System.ArgumentNullException("NOME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NOME));
            }
            if ((ENDERECO == null)) {
                throw new global::System.ArgumentNullException("ENDERECO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ENDERECO));
            }
            if ((BAIRRO == null)) {
                throw new global::System.ArgumentNullException("BAIRRO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(BAIRRO));
            }
            if ((MUNICIPIO == null)) {
                throw new global::System.ArgumentNullException("MUNICIPIO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(MUNICIPIO));
            }
            if ((UF == null)) {
                throw new global::System.ArgumentNullException("UF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(UF));
            }
            if ((CEP == null)) {
                throw new global::System.ArgumentNullException("CEP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(CEP));
            }
            if ((TELEFONE == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(TELEFONE));
            }
            if ((FAX == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(FAX));
            }
            if ((RG == null)) {
                throw new global::System.ArgumentNullException("RG");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(RG));
            }
            if ((CODUSUARIO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(CODUSUARIO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((EMAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(EMAIL));
            }
            if ((COMISSAO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(COMISSAO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((ATIVO == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(ATIVO));
            }
            if ((SEXO == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(SEXO));
            }
            if ((CODREGIAO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(CODREGIAO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((NUM == null)) {
                throw new global::System.ArgumentNullException("NUM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(NUM));
            }
            if ((COMPLEMENTO == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(COMPLEMENTO));
            }
            if ((CELULAR == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(CELULAR));
            }
            if ((Original_CPF == null)) {
                throw new global::System.ArgumentNullException("Original_CPF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_CPF));
            }
            if ((Original_NOME == null)) {
                throw new global::System.ArgumentNullException("Original_NOME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_NOME));
            }
            if ((Original_ENDERECO == null)) {
                throw new global::System.ArgumentNullException("Original_ENDERECO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_ENDERECO));
            }
            if ((Original_BAIRRO == null)) {
                throw new global::System.ArgumentNullException("Original_BAIRRO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_BAIRRO));
            }
            if ((Original_MUNICIPIO == null)) {
                throw new global::System.ArgumentNullException("Original_MUNICIPIO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_MUNICIPIO));
            }
            if ((Original_UF == null)) {
                throw new global::System.ArgumentNullException("Original_UF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_UF));
            }
            if ((Original_CEP == null)) {
                throw new global::System.ArgumentNullException("Original_CEP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_CEP));
            }
            if ((Original_TELEFONE == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_TELEFONE));
            }
            if ((Original_FAX == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_FAX));
            }
            if ((Original_RG == null)) {
                throw new global::System.ArgumentNullException("Original_RG");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_RG));
            }
            if ((Original_CODUSUARIO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_CODUSUARIO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_EMAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_EMAIL));
            }
            if ((Original_COMISSAO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((double)(Original_COMISSAO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_ATIVO == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_ATIVO));
            }
            if ((Original_SEXO == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_SEXO));
            }
            if ((Original_CODREGIAO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(Original_CODREGIAO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_NUM == null)) {
                throw new global::System.ArgumentNullException("Original_NUM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_NUM));
            }
            if ((Original_COMPLEMENTO == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_COMPLEMENTO));
            }
            if ((Original_CELULAR == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_CELULAR));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NOME, 
                    string ENDERECO, 
                    string BAIRRO, 
                    string MUNICIPIO, 
                    string UF, 
                    string CEP, 
                    string TELEFONE, 
                    string FAX, 
                    string RG, 
                    global::System.Nullable<int> CODUSUARIO, 
                    string EMAIL, 
                    global::System.Nullable<double> COMISSAO, 
                    string ATIVO, 
                    string SEXO, 
                    global::System.Nullable<int> CODREGIAO, 
                    string NUM, 
                    string COMPLEMENTO, 
                    string CELULAR, 
                    string Original_CPF, 
                    string Original_NOME, 
                    string Original_ENDERECO, 
                    string Original_BAIRRO, 
                    string Original_MUNICIPIO, 
                    string Original_UF, 
                    string Original_CEP, 
                    string Original_TELEFONE, 
                    string Original_FAX, 
                    string Original_RG, 
                    global::System.Nullable<int> Original_CODUSUARIO, 
                    string Original_EMAIL, 
                    global::System.Nullable<double> Original_COMISSAO, 
                    string Original_ATIVO, 
                    string Original_SEXO, 
                    global::System.Nullable<int> Original_CODREGIAO, 
                    string Original_NUM, 
                    string Original_COMPLEMENTO, 
                    string Original_CELULAR) {
            return this.Update(Original_CPF, NOME, ENDERECO, BAIRRO, MUNICIPIO, UF, CEP, TELEFONE, FAX, RG, CODUSUARIO, EMAIL, COMISSAO, ATIVO, SEXO, CODREGIAO, NUM, COMPLEMENTO, CELULAR, Original_CPF, Original_NOME, Original_ENDERECO, Original_BAIRRO, Original_MUNICIPIO, Original_UF, Original_CEP, Original_TELEFONE, Original_FAX, Original_RG, Original_CODUSUARIO, Original_EMAIL, Original_COMISSAO, Original_ATIVO, Original_SEXO, Original_CODREGIAO, Original_NUM, Original_COMPLEMENTO, Original_CELULAR);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VIATRANSPORTETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public VIATRANSPORTETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VIATRANSPORTE";
            tableMapping.ColumnMappings.Add("CODVIATRANSPORTE", "CODVIATRANSPORTE");
            tableMapping.ColumnMappings.Add("DESCRICAO", "DESCRICAO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[VIATRANSPORTE] WHERE (([CODVIATRANSPORTE] = @Original_CODVIATR" +
                "ANSPORTE) AND ([DESCRICAO] = @Original_DESCRICAO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODVIATRANSPORTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODVIATRANSPORTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[VIATRANSPORTE] ([CODVIATRANSPORTE], [DESCRICAO]) VALUES (@CODV" +
                "IATRANSPORTE, @DESCRICAO);\r\nSELECT CODVIATRANSPORTE, DESCRICAO FROM VIATRANSPORT" +
                "E WHERE (CODVIATRANSPORTE = @CODVIATRANSPORTE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODVIATRANSPORTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODVIATRANSPORTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[VIATRANSPORTE] SET [CODVIATRANSPORTE] = @CODVIATRANSPORTE, [DESCRICAO] = @DESCRICAO WHERE (([CODVIATRANSPORTE] = @Original_CODVIATRANSPORTE) AND ([DESCRICAO] = @Original_DESCRICAO));
SELECT CODVIATRANSPORTE, DESCRICAO FROM VIATRANSPORTE WHERE (CODVIATRANSPORTE = @CODVIATRANSPORTE)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODVIATRANSPORTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODVIATRANSPORTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODVIATRANSPORTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODVIATRANSPORTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCRICAO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRICAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Comercial.Properties.Settings.Default.COMERCIALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CODVIATRANSPORTE, DESCRICAO FROM dbo.VIATRANSPORTE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(COMERCIALDataSet.VIATRANSPORTEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual COMERCIALDataSet.VIATRANSPORTEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            COMERCIALDataSet.VIATRANSPORTEDataTable dataTable = new COMERCIALDataSet.VIATRANSPORTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet.VIATRANSPORTEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "VIATRANSPORTE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_CODVIATRANSPORTE, string Original_DESCRICAO) {
            if ((Original_CODVIATRANSPORTE == null)) {
                throw new global::System.ArgumentNullException("Original_CODVIATRANSPORTE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CODVIATRANSPORTE));
            }
            if ((Original_DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("Original_DESCRICAO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_DESCRICAO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CODVIATRANSPORTE, string DESCRICAO) {
            if ((CODVIATRANSPORTE == null)) {
                throw new global::System.ArgumentNullException("CODVIATRANSPORTE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CODVIATRANSPORTE));
            }
            if ((DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("DESCRICAO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DESCRICAO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CODVIATRANSPORTE, string DESCRICAO, string Original_CODVIATRANSPORTE, string Original_DESCRICAO) {
            if ((CODVIATRANSPORTE == null)) {
                throw new global::System.ArgumentNullException("CODVIATRANSPORTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CODVIATRANSPORTE));
            }
            if ((DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("DESCRICAO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(DESCRICAO));
            }
            if ((Original_CODVIATRANSPORTE == null)) {
                throw new global::System.ArgumentNullException("Original_CODVIATRANSPORTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_CODVIATRANSPORTE));
            }
            if ((Original_DESCRICAO == null)) {
                throw new global::System.ArgumentNullException("Original_DESCRICAO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_DESCRICAO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string DESCRICAO, string Original_CODVIATRANSPORTE, string Original_DESCRICAO) {
            return this.Update(Original_CODVIATRANSPORTE, DESCRICAO, Original_CODVIATRANSPORTE, Original_DESCRICAO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ATUCUBOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ATUCUBOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ATUCUBO";
            tableMapping.ColumnMappings.Add("NRATUALIZACAO", "NRATUALIZACAO");
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO");
            tableMapping.ColumnMappings.Add("DATAATUALIZACAO", "DATAATUALIZACAO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ATUCUBO] WHERE (([NRATUALIZACAO] = @Original_NRATUALIZACAO) AN" +
                "D ([CODUSUARIO] = @Original_CODUSUARIO) AND ((@IsNull_DATAATUALIZACAO = 1 AND [D" +
                "ATAATUALIZACAO] IS NULL) OR ([DATAATUALIZACAO] = @Original_DATAATUALIZACAO)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NRATUALIZACAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRATUALIZACAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DATAATUALIZACAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATAATUALIZACAO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATAATUALIZACAO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATAATUALIZACAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ATUCUBO] ([CODUSUARIO], [DATAATUALIZACAO]) VALUES (@CODUSUARIO" +
                ", @DATAATUALIZACAO);\r\nSELECT NRATUALIZACAO, CODUSUARIO, DATAATUALIZACAO FROM ATU" +
                "CUBO WHERE (NRATUALIZACAO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODUSUARIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATAATUALIZACAO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATAATUALIZACAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ATUCUBO] SET [CODUSUARIO] = @CODUSUARIO, [DATAATUALIZACAO] = @DATAATUALIZACAO WHERE (([NRATUALIZACAO] = @Original_NRATUALIZACAO) AND ([CODUSUARIO] = @Original_CODUSUARIO) AND ((@IsNull_DATAATUALIZACAO = 1 AND [DATAATUALIZACAO] IS NULL) OR ([DATAATUALIZACAO] = @Original_DATAATUALIZACAO)));
SELECT NRATUALIZACAO, CODUSUARIO, DATAATUALIZACAO FROM ATUCUBO WHERE (NRATUALIZACAO = @NRATUALIZACAO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODUSUARIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATAATUALIZACAO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATAATUALIZACAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NRATUALIZACAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRATUALIZACAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DATAATUALIZACAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATAATUALIZACAO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATAATUALIZACAO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATAATUALIZACAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NRATUALIZACAO", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "NRATUALIZACAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Comercial.Properties.Settings.Default.COMERCIALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT NRATUALIZACAO, CODUSUARIO, DATAATUALIZACAO FROM dbo.ATUCUBO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(COMERCIALDataSet.ATUCUBODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual COMERCIALDataSet.ATUCUBODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            COMERCIALDataSet.ATUCUBODataTable dataTable = new COMERCIALDataSet.ATUCUBODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet.ATUCUBODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ATUCUBO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_NRATUALIZACAO, int Original_CODUSUARIO, global::System.Nullable<global::System.DateTime> Original_DATAATUALIZACAO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_NRATUALIZACAO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_CODUSUARIO));
            if ((Original_DATAATUALIZACAO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_DATAATUALIZACAO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int CODUSUARIO, global::System.Nullable<global::System.DateTime> DATAATUALIZACAO) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(CODUSUARIO));
            if ((DATAATUALIZACAO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(DATAATUALIZACAO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int CODUSUARIO, global::System.Nullable<global::System.DateTime> DATAATUALIZACAO, int Original_NRATUALIZACAO, int Original_CODUSUARIO, global::System.Nullable<global::System.DateTime> Original_DATAATUALIZACAO, int NRATUALIZACAO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(CODUSUARIO));
            if ((DATAATUALIZACAO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(DATAATUALIZACAO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_NRATUALIZACAO));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_CODUSUARIO));
            if ((Original_DATAATUALIZACAO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Original_DATAATUALIZACAO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(NRATUALIZACAO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int CODUSUARIO, global::System.Nullable<global::System.DateTime> DATAATUALIZACAO, int Original_NRATUALIZACAO, int Original_CODUSUARIO, global::System.Nullable<global::System.DateTime> Original_DATAATUALIZACAO) {
            return this.Update(CODUSUARIO, DATAATUALIZACAO, Original_NRATUALIZACAO, Original_CODUSUARIO, Original_DATAATUALIZACAO, Original_NRATUALIZACAO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class modeloTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public modeloTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "modelo";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("estrutura", "estrutura");
            tableMapping.ColumnMappings.Add("dataCriacao", "dataCriacao");
            tableMapping.ColumnMappings.Add("algoritmo", "algoritmo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[modelo] WHERE (([id] = @Original_id) AND ([estrutura] = @Original_estrutura) AND ((@IsNull_dataCriacao = 1 AND [dataCriacao] IS NULL) OR ([dataCriacao] = @Original_dataCriacao)) AND ((@IsNull_algoritmo = 1 AND [algoritmo] IS NULL) OR ([algoritmo] = @Original_algoritmo)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_estrutura", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "estrutura", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_dataCriacao", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dataCriacao", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dataCriacao", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dataCriacao", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_algoritmo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "algoritmo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_algoritmo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "algoritmo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[modelo] ([estrutura], [dataCriacao], [algoritmo]) VALUES (@est" +
                "rutura, @dataCriacao, @algoritmo);\r\nSELECT id, estrutura, dataCriacao, algoritmo" +
                " FROM modelo WHERE (id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@estrutura", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "estrutura", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dataCriacao", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dataCriacao", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@algoritmo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "algoritmo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[modelo] SET [estrutura] = @estrutura, [dataCriacao] = @dataCriacao, [algoritmo] = @algoritmo WHERE (([id] = @Original_id) AND ([estrutura] = @Original_estrutura) AND ((@IsNull_dataCriacao = 1 AND [dataCriacao] IS NULL) OR ([dataCriacao] = @Original_dataCriacao)) AND ((@IsNull_algoritmo = 1 AND [algoritmo] IS NULL) OR ([algoritmo] = @Original_algoritmo)));
SELECT id, estrutura, dataCriacao, algoritmo FROM modelo WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@estrutura", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "estrutura", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dataCriacao", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dataCriacao", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@algoritmo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "algoritmo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_estrutura", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "estrutura", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_dataCriacao", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dataCriacao", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dataCriacao", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dataCriacao", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_algoritmo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "algoritmo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_algoritmo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "algoritmo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Comercial.Properties.Settings.Default.COMERCIALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, estrutura, dataCriacao, algoritmo FROM dbo.modelo";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT \'\'id, \'\'estrutura, \'\'dataCriacao, \'\'algoritmo FROM dbo.modelo union\r\nSELEC" +
                "T id, estrutura, dataCriacao, algoritmo FROM dbo.modelo";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(COMERCIALDataSet.modeloDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual COMERCIALDataSet.modeloDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            COMERCIALDataSet.modeloDataTable dataTable = new COMERCIALDataSet.modeloDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(COMERCIALDataSet.modeloDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet.modeloDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "modelo");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_estrutura, global::System.Nullable<global::System.DateTime> Original_dataCriacao, string Original_algoritmo) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_estrutura == null)) {
                throw new global::System.ArgumentNullException("Original_estrutura");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_estrutura));
            }
            if ((Original_dataCriacao.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_dataCriacao.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_algoritmo == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_algoritmo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string estrutura, global::System.Nullable<global::System.DateTime> dataCriacao, string algoritmo) {
            if ((estrutura == null)) {
                throw new global::System.ArgumentNullException("estrutura");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(estrutura));
            }
            if ((dataCriacao.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(dataCriacao.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((algoritmo == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(algoritmo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string estrutura, global::System.Nullable<global::System.DateTime> dataCriacao, string algoritmo, int Original_id, string Original_estrutura, global::System.Nullable<global::System.DateTime> Original_dataCriacao, string Original_algoritmo, int id) {
            if ((estrutura == null)) {
                throw new global::System.ArgumentNullException("estrutura");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(estrutura));
            }
            if ((dataCriacao.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(dataCriacao.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((algoritmo == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(algoritmo));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_id));
            if ((Original_estrutura == null)) {
                throw new global::System.ArgumentNullException("Original_estrutura");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_estrutura));
            }
            if ((Original_dataCriacao.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_dataCriacao.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_algoritmo == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_algoritmo));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string estrutura, global::System.Nullable<global::System.DateTime> dataCriacao, string algoritmo, int Original_id, string Original_estrutura, global::System.Nullable<global::System.DateTime> Original_dataCriacao, string Original_algoritmo) {
            return this.Update(estrutura, dataCriacao, algoritmo, Original_id, Original_estrutura, Original_dataCriacao, Original_algoritmo, Original_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class modeloCampoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public modeloCampoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "modeloCampo";
            tableMapping.ColumnMappings.Add("idModelo", "idModelo");
            tableMapping.ColumnMappings.Add("campo", "campo");
            tableMapping.ColumnMappings.Add("tipo", "tipo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[modeloCampo] WHERE (([idModelo] = @Original_idModelo) AND ([ca" +
                "mpo] = @Original_campo) AND ((@IsNull_tipo = 1 AND [tipo] IS NULL) OR ([tipo] = " +
                "@Original_tipo)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_idModelo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "idModelo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_campo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "campo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_tipo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tipo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_tipo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tipo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[modeloCampo] ([idModelo], [campo], [tipo]) VALUES (@idModelo, " +
                "@campo, @tipo);\r\nSELECT idModelo, campo, tipo FROM modeloCampo WHERE (campo = @c" +
                "ampo) AND (idModelo = @idModelo)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@idModelo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "idModelo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@campo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "campo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tipo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tipo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[modeloCampo] SET [idModelo] = @idModelo, [campo] = @campo, [tipo] = @tipo WHERE (([idModelo] = @Original_idModelo) AND ([campo] = @Original_campo) AND ((@IsNull_tipo = 1 AND [tipo] IS NULL) OR ([tipo] = @Original_tipo)));
SELECT idModelo, campo, tipo FROM modeloCampo WHERE (campo = @campo) AND (idModelo = @idModelo)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@idModelo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "idModelo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@campo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "campo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tipo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tipo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_idModelo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "idModelo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_campo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "campo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_tipo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tipo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_tipo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tipo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Comercial.Properties.Settings.Default.COMERCIALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT idModelo, campo, tipo FROM dbo.modeloCampo";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(COMERCIALDataSet.modeloCampoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual COMERCIALDataSet.modeloCampoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            COMERCIALDataSet.modeloCampoDataTable dataTable = new COMERCIALDataSet.modeloCampoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet.modeloCampoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "modeloCampo");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_idModelo, string Original_campo, string Original_tipo) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_idModelo));
            if ((Original_campo == null)) {
                throw new global::System.ArgumentNullException("Original_campo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_campo));
            }
            if ((Original_tipo == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_tipo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int idModelo, string campo, string tipo) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(idModelo));
            if ((campo == null)) {
                throw new global::System.ArgumentNullException("campo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(campo));
            }
            if ((tipo == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(tipo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int idModelo, string campo, string tipo, int Original_idModelo, string Original_campo, string Original_tipo) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(idModelo));
            if ((campo == null)) {
                throw new global::System.ArgumentNullException("campo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(campo));
            }
            if ((tipo == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(tipo));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_idModelo));
            if ((Original_campo == null)) {
                throw new global::System.ArgumentNullException("Original_campo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_campo));
            }
            if ((Original_tipo == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_tipo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string tipo, int Original_idModelo, string Original_campo, string Original_tipo) {
            return this.Update(Original_idModelo, Original_campo, tipo, Original_idModelo, Original_campo, Original_tipo);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NOTAFISCALTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NOTAFISCALTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NOTAFISCAL";
            tableMapping.ColumnMappings.Add("NrNotaFiscal", "NrNotaFiscal");
            tableMapping.ColumnMappings.Add("RazaoSocial", "RazaoSocial");
            tableMapping.ColumnMappings.Add("Serie", "Serie");
            tableMapping.ColumnMappings.Add("DataEmissao", "DataEmissao");
            tableMapping.ColumnMappings.Add("IE", "IE");
            tableMapping.ColumnMappings.Add("Telefone", "Telefone");
            tableMapping.ColumnMappings.Add("Endereco", "Endereco");
            tableMapping.ColumnMappings.Add("Bairro", "Bairro");
            tableMapping.ColumnMappings.Add("Municipio", "Municipio");
            tableMapping.ColumnMappings.Add("Icms", "Icms");
            tableMapping.ColumnMappings.Add("Tipo", "Tipo");
            tableMapping.ColumnMappings.Add("CNPJ", "CNPJ");
            tableMapping.ColumnMappings.Add("TipoFrete", "TipoFrete");
            tableMapping.ColumnMappings.Add("ValorFrete", "ValorFrete");
            tableMapping.ColumnMappings.Add("CodVendedor", "CodVendedor");
            tableMapping.ColumnMappings.Add("CodTransportadora", "CodTransportadora");
            tableMapping.ColumnMappings.Add("NrPedido", "NrPedido");
            tableMapping.ColumnMappings.Add("ValorNota", "ValorNota");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [NOTAFISCAL] WHERE (([NrNotaFiscal] = @Original_NrNotaFiscal) AND ((@" +
                "IsNull_RazaoSocial = 1 AND [RazaoSocial] IS NULL) OR ([RazaoSocial] = @Original_" +
                "RazaoSocial)) AND ((@IsNull_Serie = 1 AND [Serie] IS NULL) OR ([Serie] = @Origin" +
                "al_Serie)) AND ((@IsNull_DataEmissao = 1 AND [DataEmissao] IS NULL) OR ([DataEmi" +
                "ssao] = @Original_DataEmissao)) AND ((@IsNull_IE = 1 AND [IE] IS NULL) OR ([IE] " +
                "= @Original_IE)) AND ((@IsNull_Telefone = 1 AND [Telefone] IS NULL) OR ([Telefon" +
                "e] = @Original_Telefone)) AND ((@IsNull_Endereco = 1 AND [Endereco] IS NULL) OR " +
                "([Endereco] = @Original_Endereco)) AND ((@IsNull_Bairro = 1 AND [Bairro] IS NULL" +
                ") OR ([Bairro] = @Original_Bairro)) AND ((@IsNull_Municipio = 1 AND [Municipio] " +
                "IS NULL) OR ([Municipio] = @Original_Municipio)) AND ((@IsNull_Icms = 1 AND [Icm" +
                "s] IS NULL) OR ([Icms] = @Original_Icms)) AND ((@IsNull_Tipo = 1 AND [Tipo] IS N" +
                "ULL) OR ([Tipo] = @Original_Tipo)) AND ((@IsNull_CNPJ = 1 AND [CNPJ] IS NULL) OR" +
                " ([CNPJ] = @Original_CNPJ)) AND ((@IsNull_TipoFrete = 1 AND [TipoFrete] IS NULL)" +
                " OR ([TipoFrete] = @Original_TipoFrete)) AND ((@IsNull_ValorFrete = 1 AND [Valor" +
                "Frete] IS NULL) OR ([ValorFrete] = @Original_ValorFrete)) AND ((@IsNull_CodVende" +
                "dor = 1 AND [CodVendedor] IS NULL) OR ([CodVendedor] = @Original_CodVendedor)) A" +
                "ND ((@IsNull_CodTransportadora = 1 AND [CodTransportadora] IS NULL) OR ([CodTran" +
                "sportadora] = @Original_CodTransportadora)) AND ((@IsNull_NrPedido = 1 AND [NrPe" +
                "dido] IS NULL) OR ([NrPedido] = @Original_NrPedido)) AND ((@IsNull_ValorNota = 1" +
                " AND [ValorNota] IS NULL) OR ([ValorNota] = @Original_ValorNota)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NrNotaFiscal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NrNotaFiscal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RazaoSocial", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RazaoSocial", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RazaoSocial", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RazaoSocial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Serie", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Serie", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Serie", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Serie", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DataEmissao", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DataEmissao", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DataEmissao", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DataEmissao", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Telefone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telefone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Telefone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telefone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Endereco", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Endereco", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Endereco", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Endereco", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bairro", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bairro", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bairro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bairro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Municipio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Municipio", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Municipio", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Municipio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Icms", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Icms", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Icms", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Icms", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tipo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tipo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tipo", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tipo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CNPJ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNPJ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CNPJ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNPJ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TipoFrete", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoFrete", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TipoFrete", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoFrete", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValorFrete", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValorFrete", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValorFrete", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValorFrete", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CodVendedor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodVendedor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodVendedor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodVendedor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CodTransportadora", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodTransportadora", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodTransportadora", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodTransportadora", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NrPedido", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NrPedido", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NrPedido", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NrPedido", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValorNota", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValorNota", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValorNota", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValorNota", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [NOTAFISCAL] ([NrNotaFiscal], [RazaoSocial], [Serie], [DataEmissao], [IE], [Telefone], [Endereco], [Bairro], [Municipio], [Icms], [Tipo], [CNPJ], [TipoFrete], [ValorFrete], [CodVendedor], [CodTransportadora], [NrPedido], [ValorNota]) VALUES (@NrNotaFiscal, @RazaoSocial, @Serie, @DataEmissao, @IE, @Telefone, @Endereco, @Bairro, @Municipio, @Icms, @Tipo, @CNPJ, @TipoFrete, @ValorFrete, @CodVendedor, @CodTransportadora, @NrPedido, @ValorNota);
SELECT NrNotaFiscal, RazaoSocial, Serie, DataEmissao, IE, Telefone, Endereco, Bairro, Municipio, Icms, Tipo, CNPJ, TipoFrete, ValorFrete, CodVendedor, CodTransportadora, NrPedido, ValorNota FROM NOTAFISCAL WHERE (NrNotaFiscal = @NrNotaFiscal)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NrNotaFiscal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NrNotaFiscal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RazaoSocial", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RazaoSocial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Serie", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Serie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DataEmissao", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DataEmissao", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Telefone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telefone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Endereco", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Endereco", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bairro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bairro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Municipio", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Municipio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Icms", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Icms", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tipo", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tipo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CNPJ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNPJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TipoFrete", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoFrete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValorFrete", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValorFrete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodVendedor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodVendedor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodTransportadora", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodTransportadora", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NrPedido", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NrPedido", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValorNota", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValorNota", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [NOTAFISCAL] SET [NrNotaFiscal] = @NrNotaFiscal, [RazaoSocial] = @RazaoSoc" +
                "ial, [Serie] = @Serie, [DataEmissao] = @DataEmissao, [IE] = @IE, [Telefone] = @T" +
                "elefone, [Endereco] = @Endereco, [Bairro] = @Bairro, [Municipio] = @Municipio, [" +
                "Icms] = @Icms, [Tipo] = @Tipo, [CNPJ] = @CNPJ, [TipoFrete] = @TipoFrete, [ValorF" +
                "rete] = @ValorFrete, [CodVendedor] = @CodVendedor, [CodTransportadora] = @CodTra" +
                "nsportadora, [NrPedido] = @NrPedido, [ValorNota] = @ValorNota WHERE (([NrNotaFis" +
                "cal] = @Original_NrNotaFiscal) AND ((@IsNull_RazaoSocial = 1 AND [RazaoSocial] I" +
                "S NULL) OR ([RazaoSocial] = @Original_RazaoSocial)) AND ((@IsNull_Serie = 1 AND " +
                "[Serie] IS NULL) OR ([Serie] = @Original_Serie)) AND ((@IsNull_DataEmissao = 1 A" +
                "ND [DataEmissao] IS NULL) OR ([DataEmissao] = @Original_DataEmissao)) AND ((@IsN" +
                "ull_IE = 1 AND [IE] IS NULL) OR ([IE] = @Original_IE)) AND ((@IsNull_Telefone = " +
                "1 AND [Telefone] IS NULL) OR ([Telefone] = @Original_Telefone)) AND ((@IsNull_En" +
                "dereco = 1 AND [Endereco] IS NULL) OR ([Endereco] = @Original_Endereco)) AND ((@" +
                "IsNull_Bairro = 1 AND [Bairro] IS NULL) OR ([Bairro] = @Original_Bairro)) AND ((" +
                "@IsNull_Municipio = 1 AND [Municipio] IS NULL) OR ([Municipio] = @Original_Munic" +
                "ipio)) AND ((@IsNull_Icms = 1 AND [Icms] IS NULL) OR ([Icms] = @Original_Icms)) " +
                "AND ((@IsNull_Tipo = 1 AND [Tipo] IS NULL) OR ([Tipo] = @Original_Tipo)) AND ((@" +
                "IsNull_CNPJ = 1 AND [CNPJ] IS NULL) OR ([CNPJ] = @Original_CNPJ)) AND ((@IsNull_" +
                "TipoFrete = 1 AND [TipoFrete] IS NULL) OR ([TipoFrete] = @Original_TipoFrete)) A" +
                "ND ((@IsNull_ValorFrete = 1 AND [ValorFrete] IS NULL) OR ([ValorFrete] = @Origin" +
                "al_ValorFrete)) AND ((@IsNull_CodVendedor = 1 AND [CodVendedor] IS NULL) OR ([Co" +
                "dVendedor] = @Original_CodVendedor)) AND ((@IsNull_CodTransportadora = 1 AND [Co" +
                "dTransportadora] IS NULL) OR ([CodTransportadora] = @Original_CodTransportadora)" +
                ") AND ((@IsNull_NrPedido = 1 AND [NrPedido] IS NULL) OR ([NrPedido] = @Original_" +
                "NrPedido)) AND ((@IsNull_ValorNota = 1 AND [ValorNota] IS NULL) OR ([ValorNota] " +
                "= @Original_ValorNota)));\r\nSELECT NrNotaFiscal, RazaoSocial, Serie, DataEmissao," +
                " IE, Telefone, Endereco, Bairro, Municipio, Icms, Tipo, CNPJ, TipoFrete, ValorFr" +
                "ete, CodVendedor, CodTransportadora, NrPedido, ValorNota FROM NOTAFISCAL WHERE (" +
                "NrNotaFiscal = @NrNotaFiscal)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NrNotaFiscal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NrNotaFiscal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RazaoSocial", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RazaoSocial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Serie", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Serie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DataEmissao", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DataEmissao", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Telefone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telefone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Endereco", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Endereco", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bairro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bairro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Municipio", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Municipio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Icms", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Icms", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tipo", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tipo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CNPJ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNPJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TipoFrete", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoFrete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValorFrete", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValorFrete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodVendedor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodVendedor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodTransportadora", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodTransportadora", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NrPedido", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NrPedido", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValorNota", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValorNota", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NrNotaFiscal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NrNotaFiscal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RazaoSocial", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RazaoSocial", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RazaoSocial", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RazaoSocial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Serie", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Serie", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Serie", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Serie", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DataEmissao", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DataEmissao", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DataEmissao", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DataEmissao", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Telefone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telefone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Telefone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telefone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Endereco", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Endereco", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Endereco", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Endereco", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bairro", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bairro", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bairro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bairro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Municipio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Municipio", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Municipio", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Municipio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Icms", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Icms", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Icms", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Icms", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tipo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tipo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tipo", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tipo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CNPJ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNPJ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CNPJ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNPJ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TipoFrete", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoFrete", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TipoFrete", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoFrete", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValorFrete", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValorFrete", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValorFrete", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValorFrete", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CodVendedor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodVendedor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodVendedor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodVendedor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CodTransportadora", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodTransportadora", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodTransportadora", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodTransportadora", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NrPedido", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NrPedido", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NrPedido", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NrPedido", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValorNota", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValorNota", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValorNota", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValorNota", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Comercial.Properties.Settings.Default.COMERCIALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        NrNotaFiscal, RazaoSocial, Serie, DataEmissao, IE, Telefone, Endere" +
                "co, Bairro, Municipio, Icms, Tipo, CNPJ, TipoFrete, ValorFrete, CodVendedor, \r\n " +
                "                        CodTransportadora, NrPedido, ValorNota\r\nFROM            " +
                "NOTAFISCAL";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(COMERCIALDataSet.NOTAFISCALDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual COMERCIALDataSet.NOTAFISCALDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            COMERCIALDataSet.NOTAFISCALDataTable dataTable = new COMERCIALDataSet.NOTAFISCALDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet.NOTAFISCALDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "NOTAFISCAL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_NrNotaFiscal, 
                    string Original_RazaoSocial, 
                    string Original_Serie, 
                    global::System.Nullable<global::System.DateTime> Original_DataEmissao, 
                    string Original_IE, 
                    string Original_Telefone, 
                    string Original_Endereco, 
                    string Original_Bairro, 
                    string Original_Municipio, 
                    global::System.Nullable<double> Original_Icms, 
                    string Original_Tipo, 
                    string Original_CNPJ, 
                    string Original_TipoFrete, 
                    global::System.Nullable<double> Original_ValorFrete, 
                    string Original_CodVendedor, 
                    string Original_CodTransportadora, 
                    global::System.Nullable<int> Original_NrPedido, 
                    global::System.Nullable<double> Original_ValorNota) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_NrNotaFiscal));
            if ((Original_RazaoSocial == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_RazaoSocial));
            }
            if ((Original_Serie == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Serie));
            }
            if ((Original_DataEmissao.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_DataEmissao.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_IE == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_IE));
            }
            if ((Original_Telefone == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Telefone));
            }
            if ((Original_Endereco == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Endereco));
            }
            if ((Original_Bairro == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Bairro));
            }
            if ((Original_Municipio == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Municipio));
            }
            if ((Original_Icms.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((double)(Original_Icms.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Tipo == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Tipo));
            }
            if ((Original_CNPJ == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_CNPJ));
            }
            if ((Original_TipoFrete == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_TipoFrete));
            }
            if ((Original_ValorFrete.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((double)(Original_ValorFrete.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_CodVendedor == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_CodVendedor));
            }
            if ((Original_CodTransportadora == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_CodTransportadora));
            }
            if ((Original_NrPedido.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((int)(Original_NrPedido.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_ValorNota.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((double)(Original_ValorNota.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int NrNotaFiscal, 
                    string RazaoSocial, 
                    string Serie, 
                    global::System.Nullable<global::System.DateTime> DataEmissao, 
                    string IE, 
                    string Telefone, 
                    string Endereco, 
                    string Bairro, 
                    string Municipio, 
                    global::System.Nullable<double> Icms, 
                    string Tipo, 
                    string CNPJ, 
                    string TipoFrete, 
                    global::System.Nullable<double> ValorFrete, 
                    string CodVendedor, 
                    string CodTransportadora, 
                    global::System.Nullable<int> NrPedido, 
                    global::System.Nullable<double> ValorNota) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(NrNotaFiscal));
            if ((RazaoSocial == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(RazaoSocial));
            }
            if ((Serie == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Serie));
            }
            if ((DataEmissao.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(DataEmissao.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((IE == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(IE));
            }
            if ((Telefone == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Telefone));
            }
            if ((Endereco == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Endereco));
            }
            if ((Bairro == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Bairro));
            }
            if ((Municipio == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Municipio));
            }
            if ((Icms.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(Icms.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Tipo == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Tipo));
            }
            if ((CNPJ == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(CNPJ));
            }
            if ((TipoFrete == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(TipoFrete));
            }
            if ((ValorFrete.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(ValorFrete.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((CodVendedor == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(CodVendedor));
            }
            if ((CodTransportadora == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(CodTransportadora));
            }
            if ((NrPedido.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(NrPedido.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((ValorNota.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((double)(ValorNota.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int NrNotaFiscal, 
                    string RazaoSocial, 
                    string Serie, 
                    global::System.Nullable<global::System.DateTime> DataEmissao, 
                    string IE, 
                    string Telefone, 
                    string Endereco, 
                    string Bairro, 
                    string Municipio, 
                    global::System.Nullable<double> Icms, 
                    string Tipo, 
                    string CNPJ, 
                    string TipoFrete, 
                    global::System.Nullable<double> ValorFrete, 
                    string CodVendedor, 
                    string CodTransportadora, 
                    global::System.Nullable<int> NrPedido, 
                    global::System.Nullable<double> ValorNota, 
                    int Original_NrNotaFiscal, 
                    string Original_RazaoSocial, 
                    string Original_Serie, 
                    global::System.Nullable<global::System.DateTime> Original_DataEmissao, 
                    string Original_IE, 
                    string Original_Telefone, 
                    string Original_Endereco, 
                    string Original_Bairro, 
                    string Original_Municipio, 
                    global::System.Nullable<double> Original_Icms, 
                    string Original_Tipo, 
                    string Original_CNPJ, 
                    string Original_TipoFrete, 
                    global::System.Nullable<double> Original_ValorFrete, 
                    string Original_CodVendedor, 
                    string Original_CodTransportadora, 
                    global::System.Nullable<int> Original_NrPedido, 
                    global::System.Nullable<double> Original_ValorNota) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(NrNotaFiscal));
            if ((RazaoSocial == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(RazaoSocial));
            }
            if ((Serie == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Serie));
            }
            if ((DataEmissao.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(DataEmissao.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((IE == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(IE));
            }
            if ((Telefone == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Telefone));
            }
            if ((Endereco == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Endereco));
            }
            if ((Bairro == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Bairro));
            }
            if ((Municipio == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Municipio));
            }
            if ((Icms.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Icms.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Tipo == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Tipo));
            }
            if ((CNPJ == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(CNPJ));
            }
            if ((TipoFrete == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(TipoFrete));
            }
            if ((ValorFrete.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(ValorFrete.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((CodVendedor == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(CodVendedor));
            }
            if ((CodTransportadora == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(CodTransportadora));
            }
            if ((NrPedido.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(NrPedido.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((ValorNota.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(ValorNota.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_NrNotaFiscal));
            if ((Original_RazaoSocial == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_RazaoSocial));
            }
            if ((Original_Serie == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Serie));
            }
            if ((Original_DataEmissao.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(Original_DataEmissao.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_IE == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_IE));
            }
            if ((Original_Telefone == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_Telefone));
            }
            if ((Original_Endereco == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_Endereco));
            }
            if ((Original_Bairro == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_Bairro));
            }
            if ((Original_Municipio == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_Municipio));
            }
            if ((Original_Icms.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((double)(Original_Icms.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_Tipo == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_Tipo));
            }
            if ((Original_CNPJ == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_CNPJ));
            }
            if ((Original_TipoFrete == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_TipoFrete));
            }
            if ((Original_ValorFrete.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((double)(Original_ValorFrete.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_CodVendedor == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_CodVendedor));
            }
            if ((Original_CodTransportadora == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_CodTransportadora));
            }
            if ((Original_NrPedido.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(Original_NrPedido.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_ValorNota.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((double)(Original_ValorNota.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string RazaoSocial, 
                    string Serie, 
                    global::System.Nullable<global::System.DateTime> DataEmissao, 
                    string IE, 
                    string Telefone, 
                    string Endereco, 
                    string Bairro, 
                    string Municipio, 
                    global::System.Nullable<double> Icms, 
                    string Tipo, 
                    string CNPJ, 
                    string TipoFrete, 
                    global::System.Nullable<double> ValorFrete, 
                    string CodVendedor, 
                    string CodTransportadora, 
                    global::System.Nullable<int> NrPedido, 
                    global::System.Nullable<double> ValorNota, 
                    int Original_NrNotaFiscal, 
                    string Original_RazaoSocial, 
                    string Original_Serie, 
                    global::System.Nullable<global::System.DateTime> Original_DataEmissao, 
                    string Original_IE, 
                    string Original_Telefone, 
                    string Original_Endereco, 
                    string Original_Bairro, 
                    string Original_Municipio, 
                    global::System.Nullable<double> Original_Icms, 
                    string Original_Tipo, 
                    string Original_CNPJ, 
                    string Original_TipoFrete, 
                    global::System.Nullable<double> Original_ValorFrete, 
                    string Original_CodVendedor, 
                    string Original_CodTransportadora, 
                    global::System.Nullable<int> Original_NrPedido, 
                    global::System.Nullable<double> Original_ValorNota) {
            return this.Update(Original_NrNotaFiscal, RazaoSocial, Serie, DataEmissao, IE, Telefone, Endereco, Bairro, Municipio, Icms, Tipo, CNPJ, TipoFrete, ValorFrete, CodVendedor, CodTransportadora, NrPedido, ValorNota, Original_NrNotaFiscal, Original_RazaoSocial, Original_Serie, Original_DataEmissao, Original_IE, Original_Telefone, Original_Endereco, Original_Bairro, Original_Municipio, Original_Icms, Original_Tipo, Original_CNPJ, Original_TipoFrete, Original_ValorFrete, Original_CodVendedor, Original_CodTransportadora, Original_NrPedido, Original_ValorNota);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ItemNotaFiscalTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ItemNotaFiscalTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ItemNotaFiscal";
            tableMapping.ColumnMappings.Add("Descricao", "Descricao");
            tableMapping.ColumnMappings.Add("Quantidade", "Quantidade");
            tableMapping.ColumnMappings.Add("Desconto", "Desconto");
            tableMapping.ColumnMappings.Add("Valor", "Valor");
            tableMapping.ColumnMappings.Add("IPI", "IPI");
            tableMapping.ColumnMappings.Add("CodProduto", "CodProduto");
            tableMapping.ColumnMappings.Add("CodUnidadeMedida", "CodUnidadeMedida");
            tableMapping.ColumnMappings.Add("NrNotaFiscal", "NrNotaFiscal");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [ItemNotaFiscal] WHERE (((@IsNull_Descricao = 1 AND [Descricao] IS NULL) OR ([Descricao] = @Original_Descricao)) AND ((@IsNull_Quantidade = 1 AND [Quantidade] IS NULL) OR ([Quantidade] = @Original_Quantidade)) AND ((@IsNull_Desconto = 1 AND [Desconto] IS NULL) OR ([Desconto] = @Original_Desconto)) AND ((@IsNull_Valor = 1 AND [Valor] IS NULL) OR ([Valor] = @Original_Valor)) AND ((@IsNull_IPI = 1 AND [IPI] IS NULL) OR ([IPI] = @Original_IPI)) AND ([CodProduto] = @Original_CodProduto) AND ((@IsNull_CodUnidadeMedida = 1 AND [CodUnidadeMedida] IS NULL) OR ([CodUnidadeMedida] = @Original_CodUnidadeMedida)) AND ([NrNotaFiscal] = @Original_NrNotaFiscal))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Descricao", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descricao", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descricao", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descricao", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Quantidade", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantidade", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quantidade", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantidade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Desconto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Desconto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Desconto", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Desconto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Valor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Valor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Valor", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Valor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IPI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IPI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodProduto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodProduto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CodUnidadeMedida", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodUnidadeMedida", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodUnidadeMedida", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodUnidadeMedida", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NrNotaFiscal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NrNotaFiscal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [ItemNotaFiscal] ([Descricao], [Quantidade], [Desconto], [Valor], [IPI], [CodProduto], [CodUnidadeMedida], [NrNotaFiscal]) VALUES (@Descricao, @Quantidade, @Desconto, @Valor, @IPI, @CodProduto, @CodUnidadeMedida, @NrNotaFiscal);
SELECT Descricao, Quantidade, Desconto, Valor, IPI, CodProduto, CodUnidadeMedida, NrNotaFiscal FROM ItemNotaFiscal WHERE (CodProduto = @CodProduto) AND (NrNotaFiscal = @NrNotaFiscal)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descricao", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descricao", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantidade", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantidade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Desconto", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Desconto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Valor", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Valor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IPI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodProduto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodProduto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodUnidadeMedida", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodUnidadeMedida", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NrNotaFiscal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NrNotaFiscal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [ItemNotaFiscal] SET [Descricao] = @Descricao, [Quantidade] = @Quantidade, [Desconto] = @Desconto, [Valor] = @Valor, [IPI] = @IPI, [CodProduto] = @CodProduto, [CodUnidadeMedida] = @CodUnidadeMedida, [NrNotaFiscal] = @NrNotaFiscal WHERE (((@IsNull_Descricao = 1 AND [Descricao] IS NULL) OR ([Descricao] = @Original_Descricao)) AND ((@IsNull_Quantidade = 1 AND [Quantidade] IS NULL) OR ([Quantidade] = @Original_Quantidade)) AND ((@IsNull_Desconto = 1 AND [Desconto] IS NULL) OR ([Desconto] = @Original_Desconto)) AND ((@IsNull_Valor = 1 AND [Valor] IS NULL) OR ([Valor] = @Original_Valor)) AND ((@IsNull_IPI = 1 AND [IPI] IS NULL) OR ([IPI] = @Original_IPI)) AND ([CodProduto] = @Original_CodProduto) AND ((@IsNull_CodUnidadeMedida = 1 AND [CodUnidadeMedida] IS NULL) OR ([CodUnidadeMedida] = @Original_CodUnidadeMedida)) AND ([NrNotaFiscal] = @Original_NrNotaFiscal));
SELECT Descricao, Quantidade, Desconto, Valor, IPI, CodProduto, CodUnidadeMedida, NrNotaFiscal FROM ItemNotaFiscal WHERE (CodProduto = @CodProduto) AND (NrNotaFiscal = @NrNotaFiscal)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descricao", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descricao", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantidade", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantidade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Desconto", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Desconto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Valor", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Valor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IPI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodProduto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodProduto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodUnidadeMedida", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodUnidadeMedida", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NrNotaFiscal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NrNotaFiscal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Descricao", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descricao", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descricao", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descricao", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Quantidade", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantidade", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quantidade", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantidade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Desconto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Desconto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Desconto", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Desconto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Valor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Valor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Valor", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Valor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IPI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IPI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodProduto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodProduto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CodUnidadeMedida", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodUnidadeMedida", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodUnidadeMedida", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodUnidadeMedida", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NrNotaFiscal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NrNotaFiscal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Comercial.Properties.Settings.Default.COMERCIALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Descricao, Quantidade, Desconto, Valor, IPI, CodProduto, CodUnidade" +
                "Medida, NrNotaFiscal\r\nFROM            ItemNotaFiscal";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(COMERCIALDataSet.ItemNotaFiscalDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual COMERCIALDataSet.ItemNotaFiscalDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            COMERCIALDataSet.ItemNotaFiscalDataTable dataTable = new COMERCIALDataSet.ItemNotaFiscalDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet.ItemNotaFiscalDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(COMERCIALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ItemNotaFiscal");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Descricao, global::System.Nullable<int> Original_Quantidade, global::System.Nullable<double> Original_Desconto, global::System.Nullable<double> Original_Valor, global::System.Nullable<double> Original_IPI, int Original_CodProduto, string Original_CodUnidadeMedida, int Original_NrNotaFiscal) {
            if ((Original_Descricao == null)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Descricao));
            }
            if ((Original_Quantidade.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Quantidade.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_Desconto.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_Desconto.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_Valor.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_Valor.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_IPI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((double)(Original_IPI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_CodProduto));
            if ((Original_CodUnidadeMedida == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_CodUnidadeMedida));
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_NrNotaFiscal));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Descricao, global::System.Nullable<int> Quantidade, global::System.Nullable<double> Desconto, global::System.Nullable<double> Valor, global::System.Nullable<double> IPI, int CodProduto, string CodUnidadeMedida, int NrNotaFiscal) {
            if ((Descricao == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Descricao));
            }
            if ((Quantidade.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Quantidade.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Desconto.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(Desconto.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Valor.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(Valor.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((IPI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(IPI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(CodProduto));
            if ((CodUnidadeMedida == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(CodUnidadeMedida));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(NrNotaFiscal));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Descricao, 
                    global::System.Nullable<int> Quantidade, 
                    global::System.Nullable<double> Desconto, 
                    global::System.Nullable<double> Valor, 
                    global::System.Nullable<double> IPI, 
                    int CodProduto, 
                    string CodUnidadeMedida, 
                    int NrNotaFiscal, 
                    string Original_Descricao, 
                    global::System.Nullable<int> Original_Quantidade, 
                    global::System.Nullable<double> Original_Desconto, 
                    global::System.Nullable<double> Original_Valor, 
                    global::System.Nullable<double> Original_IPI, 
                    int Original_CodProduto, 
                    string Original_CodUnidadeMedida, 
                    int Original_NrNotaFiscal) {
            if ((Descricao == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Descricao));
            }
            if ((Quantidade.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Quantidade.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Desconto.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(Desconto.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Valor.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(Valor.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((IPI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(IPI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(CodProduto));
            if ((CodUnidadeMedida == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(CodUnidadeMedida));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(NrNotaFiscal));
            if ((Original_Descricao == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Descricao));
            }
            if ((Original_Quantidade.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_Quantidade.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_Desconto.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(Original_Desconto.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Valor.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(Original_Valor.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_IPI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(Original_IPI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_CodProduto));
            if ((Original_CodUnidadeMedida == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_CodUnidadeMedida));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_NrNotaFiscal));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descricao, global::System.Nullable<int> Quantidade, global::System.Nullable<double> Desconto, global::System.Nullable<double> Valor, global::System.Nullable<double> IPI, string CodUnidadeMedida, string Original_Descricao, global::System.Nullable<int> Original_Quantidade, global::System.Nullable<double> Original_Desconto, global::System.Nullable<double> Original_Valor, global::System.Nullable<double> Original_IPI, int Original_CodProduto, string Original_CodUnidadeMedida, int Original_NrNotaFiscal) {
            return this.Update(Descricao, Quantidade, Desconto, Valor, IPI, Original_CodProduto, CodUnidadeMedida, Original_NrNotaFiscal, Original_Descricao, Original_Quantidade, Original_Desconto, Original_Valor, Original_IPI, Original_CodProduto, Original_CodUnidadeMedida, Original_NrNotaFiscal);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ACESSOTableAdapter _aCESSOTableAdapter;
        
        private CLIENTETableAdapter _cLIENTETableAdapter;
        
        private CONDICAOPAGAMENTOTableAdapter _cONDICAOPAGAMENTOTableAdapter;
        
        private GRUPOPRODUTOTableAdapter _gRUPOPRODUTOTableAdapter;
        
        private ICMSTableAdapter _iCMSTableAdapter;
        
        private ITEMPEDIDOTableAdapter _iTEMPEDIDOTableAdapter;
        
        private MODULOTableAdapter _mODULOTableAdapter;
        
        private PEDIDOTableAdapter _pEDIDOTableAdapter;
        
        private PRODUTOTableAdapter _pRODUTOTableAdapter;
        
        private REGIAOTableAdapter _rEGIAOTableAdapter;
        
        private TRANSPORTADORATableAdapter _tRANSPORTADORATableAdapter;
        
        private TRANSPORTADORAVIATableAdapter _tRANSPORTADORAVIATableAdapter;
        
        private UNIDADEMEDIDATableAdapter _uNIDADEMEDIDATableAdapter;
        
        private USUARIOTableAdapter _uSUARIOTableAdapter;
        
        private VENDEDORTableAdapter _vENDEDORTableAdapter;
        
        private VIATRANSPORTETableAdapter _vIATRANSPORTETableAdapter;
        
        private ATUCUBOTableAdapter _aTUCUBOTableAdapter;
        
        private modeloTableAdapter _modeloTableAdapter;
        
        private modeloCampoTableAdapter _modeloCampoTableAdapter;
        
        private NOTAFISCALTableAdapter _nOTAFISCALTableAdapter;
        
        private ItemNotaFiscalTableAdapter _itemNotaFiscalTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ACESSOTableAdapter ACESSOTableAdapter {
            get {
                return this._aCESSOTableAdapter;
            }
            set {
                this._aCESSOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public CLIENTETableAdapter CLIENTETableAdapter {
            get {
                return this._cLIENTETableAdapter;
            }
            set {
                this._cLIENTETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public CONDICAOPAGAMENTOTableAdapter CONDICAOPAGAMENTOTableAdapter {
            get {
                return this._cONDICAOPAGAMENTOTableAdapter;
            }
            set {
                this._cONDICAOPAGAMENTOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public GRUPOPRODUTOTableAdapter GRUPOPRODUTOTableAdapter {
            get {
                return this._gRUPOPRODUTOTableAdapter;
            }
            set {
                this._gRUPOPRODUTOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ICMSTableAdapter ICMSTableAdapter {
            get {
                return this._iCMSTableAdapter;
            }
            set {
                this._iCMSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ITEMPEDIDOTableAdapter ITEMPEDIDOTableAdapter {
            get {
                return this._iTEMPEDIDOTableAdapter;
            }
            set {
                this._iTEMPEDIDOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MODULOTableAdapter MODULOTableAdapter {
            get {
                return this._mODULOTableAdapter;
            }
            set {
                this._mODULOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PEDIDOTableAdapter PEDIDOTableAdapter {
            get {
                return this._pEDIDOTableAdapter;
            }
            set {
                this._pEDIDOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PRODUTOTableAdapter PRODUTOTableAdapter {
            get {
                return this._pRODUTOTableAdapter;
            }
            set {
                this._pRODUTOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public REGIAOTableAdapter REGIAOTableAdapter {
            get {
                return this._rEGIAOTableAdapter;
            }
            set {
                this._rEGIAOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TRANSPORTADORATableAdapter TRANSPORTADORATableAdapter {
            get {
                return this._tRANSPORTADORATableAdapter;
            }
            set {
                this._tRANSPORTADORATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TRANSPORTADORAVIATableAdapter TRANSPORTADORAVIATableAdapter {
            get {
                return this._tRANSPORTADORAVIATableAdapter;
            }
            set {
                this._tRANSPORTADORAVIATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public UNIDADEMEDIDATableAdapter UNIDADEMEDIDATableAdapter {
            get {
                return this._uNIDADEMEDIDATableAdapter;
            }
            set {
                this._uNIDADEMEDIDATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public USUARIOTableAdapter USUARIOTableAdapter {
            get {
                return this._uSUARIOTableAdapter;
            }
            set {
                this._uSUARIOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public VENDEDORTableAdapter VENDEDORTableAdapter {
            get {
                return this._vENDEDORTableAdapter;
            }
            set {
                this._vENDEDORTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public VIATRANSPORTETableAdapter VIATRANSPORTETableAdapter {
            get {
                return this._vIATRANSPORTETableAdapter;
            }
            set {
                this._vIATRANSPORTETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ATUCUBOTableAdapter ATUCUBOTableAdapter {
            get {
                return this._aTUCUBOTableAdapter;
            }
            set {
                this._aTUCUBOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public modeloTableAdapter modeloTableAdapter {
            get {
                return this._modeloTableAdapter;
            }
            set {
                this._modeloTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public modeloCampoTableAdapter modeloCampoTableAdapter {
            get {
                return this._modeloCampoTableAdapter;
            }
            set {
                this._modeloCampoTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public NOTAFISCALTableAdapter NOTAFISCALTableAdapter {
            get {
                return this._nOTAFISCALTableAdapter;
            }
            set {
                this._nOTAFISCALTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ItemNotaFiscalTableAdapter ItemNotaFiscalTableAdapter {
            get {
                return this._itemNotaFiscalTableAdapter;
            }
            set {
                this._itemNotaFiscalTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._aCESSOTableAdapter != null) 
                            && (this._aCESSOTableAdapter.Connection != null))) {
                    return this._aCESSOTableAdapter.Connection;
                }
                if (((this._cLIENTETableAdapter != null) 
                            && (this._cLIENTETableAdapter.Connection != null))) {
                    return this._cLIENTETableAdapter.Connection;
                }
                if (((this._cONDICAOPAGAMENTOTableAdapter != null) 
                            && (this._cONDICAOPAGAMENTOTableAdapter.Connection != null))) {
                    return this._cONDICAOPAGAMENTOTableAdapter.Connection;
                }
                if (((this._gRUPOPRODUTOTableAdapter != null) 
                            && (this._gRUPOPRODUTOTableAdapter.Connection != null))) {
                    return this._gRUPOPRODUTOTableAdapter.Connection;
                }
                if (((this._iCMSTableAdapter != null) 
                            && (this._iCMSTableAdapter.Connection != null))) {
                    return this._iCMSTableAdapter.Connection;
                }
                if (((this._iTEMPEDIDOTableAdapter != null) 
                            && (this._iTEMPEDIDOTableAdapter.Connection != null))) {
                    return this._iTEMPEDIDOTableAdapter.Connection;
                }
                if (((this._mODULOTableAdapter != null) 
                            && (this._mODULOTableAdapter.Connection != null))) {
                    return this._mODULOTableAdapter.Connection;
                }
                if (((this._pEDIDOTableAdapter != null) 
                            && (this._pEDIDOTableAdapter.Connection != null))) {
                    return this._pEDIDOTableAdapter.Connection;
                }
                if (((this._pRODUTOTableAdapter != null) 
                            && (this._pRODUTOTableAdapter.Connection != null))) {
                    return this._pRODUTOTableAdapter.Connection;
                }
                if (((this._rEGIAOTableAdapter != null) 
                            && (this._rEGIAOTableAdapter.Connection != null))) {
                    return this._rEGIAOTableAdapter.Connection;
                }
                if (((this._tRANSPORTADORATableAdapter != null) 
                            && (this._tRANSPORTADORATableAdapter.Connection != null))) {
                    return this._tRANSPORTADORATableAdapter.Connection;
                }
                if (((this._tRANSPORTADORAVIATableAdapter != null) 
                            && (this._tRANSPORTADORAVIATableAdapter.Connection != null))) {
                    return this._tRANSPORTADORAVIATableAdapter.Connection;
                }
                if (((this._uNIDADEMEDIDATableAdapter != null) 
                            && (this._uNIDADEMEDIDATableAdapter.Connection != null))) {
                    return this._uNIDADEMEDIDATableAdapter.Connection;
                }
                if (((this._uSUARIOTableAdapter != null) 
                            && (this._uSUARIOTableAdapter.Connection != null))) {
                    return this._uSUARIOTableAdapter.Connection;
                }
                if (((this._vENDEDORTableAdapter != null) 
                            && (this._vENDEDORTableAdapter.Connection != null))) {
                    return this._vENDEDORTableAdapter.Connection;
                }
                if (((this._vIATRANSPORTETableAdapter != null) 
                            && (this._vIATRANSPORTETableAdapter.Connection != null))) {
                    return this._vIATRANSPORTETableAdapter.Connection;
                }
                if (((this._aTUCUBOTableAdapter != null) 
                            && (this._aTUCUBOTableAdapter.Connection != null))) {
                    return this._aTUCUBOTableAdapter.Connection;
                }
                if (((this._modeloTableAdapter != null) 
                            && (this._modeloTableAdapter.Connection != null))) {
                    return this._modeloTableAdapter.Connection;
                }
                if (((this._modeloCampoTableAdapter != null) 
                            && (this._modeloCampoTableAdapter.Connection != null))) {
                    return this._modeloCampoTableAdapter.Connection;
                }
                if (((this._nOTAFISCALTableAdapter != null) 
                            && (this._nOTAFISCALTableAdapter.Connection != null))) {
                    return this._nOTAFISCALTableAdapter.Connection;
                }
                if (((this._itemNotaFiscalTableAdapter != null) 
                            && (this._itemNotaFiscalTableAdapter.Connection != null))) {
                    return this._itemNotaFiscalTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._aCESSOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cLIENTETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cONDICAOPAGAMENTOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._gRUPOPRODUTOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iCMSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iTEMPEDIDOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mODULOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pEDIDOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pRODUTOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rEGIAOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tRANSPORTADORATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tRANSPORTADORAVIATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._uNIDADEMEDIDATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._uSUARIOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._vENDEDORTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._vIATRANSPORTETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._aTUCUBOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._modeloTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._modeloCampoTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._nOTAFISCALTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._itemNotaFiscalTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(COMERCIALDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._uSUARIOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.USUARIO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._uSUARIOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rEGIAOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.REGIAO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rEGIAOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._uNIDADEMEDIDATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.UNIDADEMEDIDA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._uNIDADEMEDIDATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tRANSPORTADORATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TRANSPORTADORA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tRANSPORTADORATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._vENDEDORTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.VENDEDOR.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._vENDEDORTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cLIENTETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CLIENTE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cLIENTETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cONDICAOPAGAMENTOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CONDICAOPAGAMENTO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cONDICAOPAGAMENTOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._gRUPOPRODUTOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.GRUPOPRODUTO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._gRUPOPRODUTOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._modeloTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.modelo.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._modeloTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._vIATRANSPORTETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.VIATRANSPORTE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._vIATRANSPORTETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._nOTAFISCALTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.NOTAFISCAL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._nOTAFISCALTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mODULOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MODULO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mODULOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pEDIDOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PEDIDO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pEDIDOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pRODUTOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PRODUTO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pRODUTOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._aTUCUBOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ATUCUBO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aTUCUBOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._itemNotaFiscalTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ItemNotaFiscal.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._itemNotaFiscalTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._modeloCampoTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.modeloCampo.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._modeloCampoTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tRANSPORTADORAVIATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TRANSPORTADORAVIA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tRANSPORTADORAVIATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iTEMPEDIDOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ITEMPEDIDO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iTEMPEDIDOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iCMSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ICMS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iCMSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._aCESSOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ACESSO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aCESSOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(COMERCIALDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._uSUARIOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.USUARIO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._uSUARIOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rEGIAOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.REGIAO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rEGIAOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._uNIDADEMEDIDATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.UNIDADEMEDIDA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._uNIDADEMEDIDATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tRANSPORTADORATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TRANSPORTADORA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tRANSPORTADORATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._vENDEDORTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.VENDEDOR.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._vENDEDORTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cLIENTETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CLIENTE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cLIENTETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cONDICAOPAGAMENTOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CONDICAOPAGAMENTO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cONDICAOPAGAMENTOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._gRUPOPRODUTOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.GRUPOPRODUTO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._gRUPOPRODUTOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._modeloTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.modelo.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._modeloTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._vIATRANSPORTETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.VIATRANSPORTE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._vIATRANSPORTETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._nOTAFISCALTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.NOTAFISCAL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._nOTAFISCALTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mODULOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MODULO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mODULOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pEDIDOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PEDIDO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pEDIDOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pRODUTOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PRODUTO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pRODUTOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._aTUCUBOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ATUCUBO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aTUCUBOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._itemNotaFiscalTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ItemNotaFiscal.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._itemNotaFiscalTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._modeloCampoTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.modeloCampo.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._modeloCampoTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tRANSPORTADORAVIATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TRANSPORTADORAVIA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tRANSPORTADORAVIATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iTEMPEDIDOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ITEMPEDIDO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iTEMPEDIDOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iCMSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ICMS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iCMSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._aCESSOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ACESSO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aCESSOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(COMERCIALDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._aCESSOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ACESSO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aCESSOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iCMSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ICMS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iCMSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iTEMPEDIDOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ITEMPEDIDO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iTEMPEDIDOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tRANSPORTADORAVIATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TRANSPORTADORAVIA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tRANSPORTADORAVIATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._modeloCampoTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.modeloCampo.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._modeloCampoTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._itemNotaFiscalTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ItemNotaFiscal.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._itemNotaFiscalTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aTUCUBOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ATUCUBO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aTUCUBOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pRODUTOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PRODUTO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pRODUTOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pEDIDOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PEDIDO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pEDIDOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mODULOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MODULO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mODULOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._nOTAFISCALTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.NOTAFISCAL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._nOTAFISCALTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._vIATRANSPORTETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.VIATRANSPORTE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._vIATRANSPORTETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._modeloTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.modelo.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._modeloTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._gRUPOPRODUTOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.GRUPOPRODUTO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._gRUPOPRODUTOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cONDICAOPAGAMENTOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CONDICAOPAGAMENTO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cONDICAOPAGAMENTOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cLIENTETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CLIENTE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cLIENTETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._vENDEDORTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.VENDEDOR.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._vENDEDORTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tRANSPORTADORATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TRANSPORTADORA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tRANSPORTADORATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._uNIDADEMEDIDATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.UNIDADEMEDIDA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._uNIDADEMEDIDATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rEGIAOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.REGIAO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rEGIAOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._uSUARIOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.USUARIO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._uSUARIOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(COMERCIALDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._aCESSOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aCESSOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cLIENTETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cLIENTETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cONDICAOPAGAMENTOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cONDICAOPAGAMENTOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._gRUPOPRODUTOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._gRUPOPRODUTOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._iCMSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iCMSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._iTEMPEDIDOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iTEMPEDIDOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mODULOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mODULOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pEDIDOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pEDIDOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pRODUTOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pRODUTOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._rEGIAOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rEGIAOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tRANSPORTADORATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tRANSPORTADORATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tRANSPORTADORAVIATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tRANSPORTADORAVIATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._uNIDADEMEDIDATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._uNIDADEMEDIDATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._uSUARIOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._uSUARIOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._vENDEDORTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._vENDEDORTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._vIATRANSPORTETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._vIATRANSPORTETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._aTUCUBOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aTUCUBOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._modeloTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._modeloTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._modeloCampoTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._modeloCampoTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._nOTAFISCALTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._nOTAFISCALTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._itemNotaFiscalTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._itemNotaFiscalTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._aCESSOTableAdapter != null)) {
                    revertConnections.Add(this._aCESSOTableAdapter, this._aCESSOTableAdapter.Connection);
                    this._aCESSOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._aCESSOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._aCESSOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aCESSOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aCESSOTableAdapter.Adapter);
                    }
                }
                if ((this._cLIENTETableAdapter != null)) {
                    revertConnections.Add(this._cLIENTETableAdapter, this._cLIENTETableAdapter.Connection);
                    this._cLIENTETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cLIENTETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cLIENTETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cLIENTETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cLIENTETableAdapter.Adapter);
                    }
                }
                if ((this._cONDICAOPAGAMENTOTableAdapter != null)) {
                    revertConnections.Add(this._cONDICAOPAGAMENTOTableAdapter, this._cONDICAOPAGAMENTOTableAdapter.Connection);
                    this._cONDICAOPAGAMENTOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cONDICAOPAGAMENTOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cONDICAOPAGAMENTOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cONDICAOPAGAMENTOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cONDICAOPAGAMENTOTableAdapter.Adapter);
                    }
                }
                if ((this._gRUPOPRODUTOTableAdapter != null)) {
                    revertConnections.Add(this._gRUPOPRODUTOTableAdapter, this._gRUPOPRODUTOTableAdapter.Connection);
                    this._gRUPOPRODUTOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._gRUPOPRODUTOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._gRUPOPRODUTOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._gRUPOPRODUTOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._gRUPOPRODUTOTableAdapter.Adapter);
                    }
                }
                if ((this._iCMSTableAdapter != null)) {
                    revertConnections.Add(this._iCMSTableAdapter, this._iCMSTableAdapter.Connection);
                    this._iCMSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iCMSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iCMSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iCMSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iCMSTableAdapter.Adapter);
                    }
                }
                if ((this._iTEMPEDIDOTableAdapter != null)) {
                    revertConnections.Add(this._iTEMPEDIDOTableAdapter, this._iTEMPEDIDOTableAdapter.Connection);
                    this._iTEMPEDIDOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iTEMPEDIDOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iTEMPEDIDOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iTEMPEDIDOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iTEMPEDIDOTableAdapter.Adapter);
                    }
                }
                if ((this._mODULOTableAdapter != null)) {
                    revertConnections.Add(this._mODULOTableAdapter, this._mODULOTableAdapter.Connection);
                    this._mODULOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mODULOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mODULOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mODULOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mODULOTableAdapter.Adapter);
                    }
                }
                if ((this._pEDIDOTableAdapter != null)) {
                    revertConnections.Add(this._pEDIDOTableAdapter, this._pEDIDOTableAdapter.Connection);
                    this._pEDIDOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pEDIDOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pEDIDOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pEDIDOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pEDIDOTableAdapter.Adapter);
                    }
                }
                if ((this._pRODUTOTableAdapter != null)) {
                    revertConnections.Add(this._pRODUTOTableAdapter, this._pRODUTOTableAdapter.Connection);
                    this._pRODUTOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pRODUTOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pRODUTOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pRODUTOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pRODUTOTableAdapter.Adapter);
                    }
                }
                if ((this._rEGIAOTableAdapter != null)) {
                    revertConnections.Add(this._rEGIAOTableAdapter, this._rEGIAOTableAdapter.Connection);
                    this._rEGIAOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._rEGIAOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._rEGIAOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rEGIAOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rEGIAOTableAdapter.Adapter);
                    }
                }
                if ((this._tRANSPORTADORATableAdapter != null)) {
                    revertConnections.Add(this._tRANSPORTADORATableAdapter, this._tRANSPORTADORATableAdapter.Connection);
                    this._tRANSPORTADORATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tRANSPORTADORATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tRANSPORTADORATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tRANSPORTADORATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tRANSPORTADORATableAdapter.Adapter);
                    }
                }
                if ((this._tRANSPORTADORAVIATableAdapter != null)) {
                    revertConnections.Add(this._tRANSPORTADORAVIATableAdapter, this._tRANSPORTADORAVIATableAdapter.Connection);
                    this._tRANSPORTADORAVIATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tRANSPORTADORAVIATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tRANSPORTADORAVIATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tRANSPORTADORAVIATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tRANSPORTADORAVIATableAdapter.Adapter);
                    }
                }
                if ((this._uNIDADEMEDIDATableAdapter != null)) {
                    revertConnections.Add(this._uNIDADEMEDIDATableAdapter, this._uNIDADEMEDIDATableAdapter.Connection);
                    this._uNIDADEMEDIDATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._uNIDADEMEDIDATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._uNIDADEMEDIDATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._uNIDADEMEDIDATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._uNIDADEMEDIDATableAdapter.Adapter);
                    }
                }
                if ((this._uSUARIOTableAdapter != null)) {
                    revertConnections.Add(this._uSUARIOTableAdapter, this._uSUARIOTableAdapter.Connection);
                    this._uSUARIOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._uSUARIOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._uSUARIOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._uSUARIOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._uSUARIOTableAdapter.Adapter);
                    }
                }
                if ((this._vENDEDORTableAdapter != null)) {
                    revertConnections.Add(this._vENDEDORTableAdapter, this._vENDEDORTableAdapter.Connection);
                    this._vENDEDORTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._vENDEDORTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._vENDEDORTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._vENDEDORTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._vENDEDORTableAdapter.Adapter);
                    }
                }
                if ((this._vIATRANSPORTETableAdapter != null)) {
                    revertConnections.Add(this._vIATRANSPORTETableAdapter, this._vIATRANSPORTETableAdapter.Connection);
                    this._vIATRANSPORTETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._vIATRANSPORTETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._vIATRANSPORTETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._vIATRANSPORTETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._vIATRANSPORTETableAdapter.Adapter);
                    }
                }
                if ((this._aTUCUBOTableAdapter != null)) {
                    revertConnections.Add(this._aTUCUBOTableAdapter, this._aTUCUBOTableAdapter.Connection);
                    this._aTUCUBOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._aTUCUBOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._aTUCUBOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aTUCUBOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aTUCUBOTableAdapter.Adapter);
                    }
                }
                if ((this._modeloTableAdapter != null)) {
                    revertConnections.Add(this._modeloTableAdapter, this._modeloTableAdapter.Connection);
                    this._modeloTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._modeloTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._modeloTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._modeloTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._modeloTableAdapter.Adapter);
                    }
                }
                if ((this._modeloCampoTableAdapter != null)) {
                    revertConnections.Add(this._modeloCampoTableAdapter, this._modeloCampoTableAdapter.Connection);
                    this._modeloCampoTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._modeloCampoTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._modeloCampoTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._modeloCampoTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._modeloCampoTableAdapter.Adapter);
                    }
                }
                if ((this._nOTAFISCALTableAdapter != null)) {
                    revertConnections.Add(this._nOTAFISCALTableAdapter, this._nOTAFISCALTableAdapter.Connection);
                    this._nOTAFISCALTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._nOTAFISCALTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._nOTAFISCALTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._nOTAFISCALTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._nOTAFISCALTableAdapter.Adapter);
                    }
                }
                if ((this._itemNotaFiscalTableAdapter != null)) {
                    revertConnections.Add(this._itemNotaFiscalTableAdapter, this._itemNotaFiscalTableAdapter.Connection);
                    this._itemNotaFiscalTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._itemNotaFiscalTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._itemNotaFiscalTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._itemNotaFiscalTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._itemNotaFiscalTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._aCESSOTableAdapter != null)) {
                    this._aCESSOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._aCESSOTableAdapter]));
                    this._aCESSOTableAdapter.Transaction = null;
                }
                if ((this._cLIENTETableAdapter != null)) {
                    this._cLIENTETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cLIENTETableAdapter]));
                    this._cLIENTETableAdapter.Transaction = null;
                }
                if ((this._cONDICAOPAGAMENTOTableAdapter != null)) {
                    this._cONDICAOPAGAMENTOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cONDICAOPAGAMENTOTableAdapter]));
                    this._cONDICAOPAGAMENTOTableAdapter.Transaction = null;
                }
                if ((this._gRUPOPRODUTOTableAdapter != null)) {
                    this._gRUPOPRODUTOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._gRUPOPRODUTOTableAdapter]));
                    this._gRUPOPRODUTOTableAdapter.Transaction = null;
                }
                if ((this._iCMSTableAdapter != null)) {
                    this._iCMSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iCMSTableAdapter]));
                    this._iCMSTableAdapter.Transaction = null;
                }
                if ((this._iTEMPEDIDOTableAdapter != null)) {
                    this._iTEMPEDIDOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iTEMPEDIDOTableAdapter]));
                    this._iTEMPEDIDOTableAdapter.Transaction = null;
                }
                if ((this._mODULOTableAdapter != null)) {
                    this._mODULOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mODULOTableAdapter]));
                    this._mODULOTableAdapter.Transaction = null;
                }
                if ((this._pEDIDOTableAdapter != null)) {
                    this._pEDIDOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pEDIDOTableAdapter]));
                    this._pEDIDOTableAdapter.Transaction = null;
                }
                if ((this._pRODUTOTableAdapter != null)) {
                    this._pRODUTOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pRODUTOTableAdapter]));
                    this._pRODUTOTableAdapter.Transaction = null;
                }
                if ((this._rEGIAOTableAdapter != null)) {
                    this._rEGIAOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._rEGIAOTableAdapter]));
                    this._rEGIAOTableAdapter.Transaction = null;
                }
                if ((this._tRANSPORTADORATableAdapter != null)) {
                    this._tRANSPORTADORATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tRANSPORTADORATableAdapter]));
                    this._tRANSPORTADORATableAdapter.Transaction = null;
                }
                if ((this._tRANSPORTADORAVIATableAdapter != null)) {
                    this._tRANSPORTADORAVIATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tRANSPORTADORAVIATableAdapter]));
                    this._tRANSPORTADORAVIATableAdapter.Transaction = null;
                }
                if ((this._uNIDADEMEDIDATableAdapter != null)) {
                    this._uNIDADEMEDIDATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._uNIDADEMEDIDATableAdapter]));
                    this._uNIDADEMEDIDATableAdapter.Transaction = null;
                }
                if ((this._uSUARIOTableAdapter != null)) {
                    this._uSUARIOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._uSUARIOTableAdapter]));
                    this._uSUARIOTableAdapter.Transaction = null;
                }
                if ((this._vENDEDORTableAdapter != null)) {
                    this._vENDEDORTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._vENDEDORTableAdapter]));
                    this._vENDEDORTableAdapter.Transaction = null;
                }
                if ((this._vIATRANSPORTETableAdapter != null)) {
                    this._vIATRANSPORTETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._vIATRANSPORTETableAdapter]));
                    this._vIATRANSPORTETableAdapter.Transaction = null;
                }
                if ((this._aTUCUBOTableAdapter != null)) {
                    this._aTUCUBOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._aTUCUBOTableAdapter]));
                    this._aTUCUBOTableAdapter.Transaction = null;
                }
                if ((this._modeloTableAdapter != null)) {
                    this._modeloTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._modeloTableAdapter]));
                    this._modeloTableAdapter.Transaction = null;
                }
                if ((this._modeloCampoTableAdapter != null)) {
                    this._modeloCampoTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._modeloCampoTableAdapter]));
                    this._modeloCampoTableAdapter.Transaction = null;
                }
                if ((this._nOTAFISCALTableAdapter != null)) {
                    this._nOTAFISCALTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._nOTAFISCALTableAdapter]));
                    this._nOTAFISCALTableAdapter.Transaction = null;
                }
                if ((this._itemNotaFiscalTableAdapter != null)) {
                    this._itemNotaFiscalTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._itemNotaFiscalTableAdapter]));
                    this._itemNotaFiscalTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591